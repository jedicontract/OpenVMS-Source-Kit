%!PS-Adobe-3.0
%%Title: VV_57A
%%Creator: VAX DOCUMENT V2.1-1
%%Copyright: 1986,1987,1988,1989,1990,1991 DIGITAL EQUIPMENT CORPORATION.
%%+All Rights Reserved.
%%CreationDate: Thu Oct 31 2002 10:33:45
%%For: NESCHKE     
%%BoundingBox: (atend)
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%DocumentFonts: (atend) 
%%DocumentNeededFonts: (atend) 
%%DocumentProcSets: Underlay Color5044
%%DocumentSuppliedProcSets: Underlay Color5044
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%
%%BeginResource: procset Underlay
%%CreationDate: (2/10/92)
%
% In VAX DOCUMENT V2.1-1, simple EPSF files up to 65,000 bytes long
% may be an underlay. Define the EPSF as a PostScript proceedure
% called /UNDERLAY and prefix to DOCUMENT's PS output  For example:.
% /UNDERLAY ( EPSF code here ) cvx def
%
% To create a "Preliminary" underlay change /UNDERLAY* to /UNDERLAY
/UNDERLAY* (
  /Note (Preliminary) def
  /NoteSize 120 def
  /NoteFont /Helvetica findfont NoteSize scalefont def
  /Note where { pop Note length 0 gt {
    /NoteWidth NoteFont setfont Note stringwidth pop def
    PaperWidth 36 mul PaperHeight 36 mul moveto
    PaperHeight PaperWidth atan rotate
    NoteWidth -2 div NoteSize .729 mul -2 div rmoveto 
    Note true charpath .075 setseparationgray fill
  }if  }if
) cvx def
%%EndResource
%
%%BeginResource: procset Color5044
%%CreationDate: (1/21/91)
%%Version:1.0 3
%Implementation of Adobe 5044 color specification
%/ndf allows command override during color separation
/Color5044Dict 100 dict def
Color5044Dict begin
/bdf {bind def} def
/ndf
  {1 index where
    {pop pop pop
    }
    {dup xcheck
      {bind} if
    def
    }
    ifelse
  } bdf
/setcmykcolor
  {1 exch sub
  3 
    {dup 5 -1 roll sub 0 2 copy lt
      {exch} if
    pop exch
    } repeat
  pop setrgbcolor
  }ndf
/setcmykcoloroverprint
  {4
    {dup -1 eq
      {pop 0} if
      4 1 roll
    } repeat
  setcmykcolor
  } ndf
/findcmykcustomcolor
  {5 /packedarray where
    {pop packedarray
    }
    {array astore readonly
    }
    ifelse
  } ndf
/setcustomcolor
  {exch aload pop pop
  4
    {4 index mul 4 1 roll
    } repeat
  setcmykcolor pop
  } ndf
/setseparationgray
  {1 exch sub systemdict /setgray get exec
  } ndf
/setoverprint {pop} ndf
/currentoverprint false ndf
%CMYK multi-proc colorimage
/colorimage
  {4 ne
    {(\nUnsupported number of colors for colorimage.\n) print flush quit
    } if
  not
    {(\nSingle procedure form  colorimage unsupported.\n) print flush quit
    } if
  save 20 dict begin /&saveobj exch def
  /&Kproc exch def /&Yproc exch def /&Mproc exch def /&Cproc exch def
    {&Cproc &Mproc &Yproc &Kproc
    /&K exch def /&Y exch def /&M exch def /&C exch def
    0 1 &K length 1 sub
      {/&i exch def
      &K &i 255
      &C &i get 30 mul
      &M &i get 59 mul add
      &Y &i get 11 mul add
      &K &i get 100 mul add
      100 idiv
      dup 255 gt
        {pop 255} if
      sub put
      } for
    &K
    } image
  &saveobj end restore
  } ndf
/customcolorimage
  {pop systemdict /image get exec
  } ndf
/separationimage
  {systemdict /image get exec
  } ndf
end
%%EndResource
Color5044Dict begin
%
/DEC_DVC$dict 300 dict def
DEC_DVC$dict begin
%
/DVC$PSJob save def
%
/DOCPSE ISOLatin1Encoding 256 array copy def
mark						% CREATE DOCPSE ENCODING
  8#055 /hyphen
  8#201 /bullet    8#202 /emdash     8#203 /endash    8#204 /dagger
  8#205 /daggerdbl 8#206 /registered 8#207 /trademark %8#210 /Delta
  8#211 /fi        8#212 /fl         8#213 /OE        8#214 /oe
  8#215 /Ydieresis
  counttomark -1 bitshift			% DIVIDE BY 2
  {DOCPSE 3 1 roll put} repeat			% STACK NOW CONTAINS MARK
cleartomark
%
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
}def
%
/cvsstr 64 string def
/tempmatrix matrix def
%
% Exit page (temporarily) to add fonts/characters.
/XP { }def
% 
% Resume page
/RP { }def
%
% End Page: EP
/EP {DVC$PSPage restore}def
%
% Purge fonts to reclaim VM
/PF {
  currentoverprint
  currentrgbcolor
  EP			%Does restore
  PageSetup     %Does save
  setrgbcolor
  setoverprint
}def
%
% ABBREVIATIONS 
/S /show load def
/SV /save load def
/RST /restore load def
%
/Yadjust {Ymax exch sub} def
%
/XY {						% (x,y) POSITION ABSOLUTE
  Yadjust moveto
} def
%
/X {						% (x,0) POSITION ABSOLUTE
  currentpoint exch pop moveto
} def
%
/Y {						% (0,y) POSITION ABSOLUTE 
  currentpoint pop exch Yadjust moveto
} def
%
/xy {						% (x,y) POSITION RELATIVE
  neg rmoveto
} def
%
/x {						% (x,0) POSITION RELATIVE
  0 rmoveto
} def
%
/y {						% (0,y) POSITION RELATIVE
  0 exch neg rmoveto
} def
%
/R {						% Draw a rectangle
  /ht exch def  /wd exch def   gsave
  currentpoint  newpath  moveto
  0 ht rlineto  wd 0 rlineto
  0 ht neg rlineto  wd neg 0 rlineto
  closepath fill grestore wd 0 rmoveto
}def
%
%Setup Page Media:  <paper-height> <paper-width> PM
/PM {
  /Xmax exch Resolution mul def
  /Ymax exch Resolution mul def
  /UNDERLAY where {
    pop
    /eps_save save def		% save before EPSF underlay
    Resolution 72 div dup scale % Revert coords to points
    count array astore /DVCstack exch def % save op stack
    /dict_count countdictstack def % # of dicts
    userdict begin		% default dict
    /showpage {}def		% disable showpage
    0 setgray
      {UNDERLAY} stopped {(Error executing /UNDERLAY)== quit}if
    countdictstack dict_count sub {end} repeat % clean up dict stack
    clear DVCstack aload pop	% restore op stack
    eps_save restore		% restore after EPSF
  }if
  PageSetup
}def
%
%Setup page coordinates
/PageSetup
{
  /DVC$PSPage save def
  PortraitMode not {PaperWidth 0 translate  90 rotate} if
  /Xpos 0 def
  /Ypos 0 def
}def
%
% Begin EPS file: <xoffset> <yoffset> SPB
/SPB {
  Yadjust transform		% convert from DVC to device coords
  EP				% page-level restore
  /eps_save save def		% save before EPSF
  Resolution 72 div dup scale 	% Revert coords to points
  itransform			% convert position back to points  
  translate			% set position for EPSF
  PortraitMode not {90 rotate} if % rotate for EPSF
  count array astore /DVCstack exch def	% save op stack
  /dict_count countdictstack def % # of dicts
  userdict begin		% default dict
  /showpage {}def		% disable showpage
  0 setgray
}def
%
% End EPS file
/SPE {
  countdictstack dict_count sub {end} repeat % clean up dict stack
  clear DVCstack aload pop	% restore op stack
  eps_save restore		% restore after EPSF
  PageSetup			% restore DVC coords
}def
%
% Print-Page Routine: <Page #> PP
/PP {
  gsave
  showpage
  grestore
}def
%
/DMF {		%  /font-name <point-size> DMF
  exch findfont exch scalefont setfont
}def
%
/concatnam {	%  /abcd (xxx) concatnam  ==> /abcdxxx
  /xxx exch def
  /namstr exch cvsstr cvs def
  /newnam namstr length xxx length add string def
  newnam 0 namstr putinterval
  newnam namstr length xxx putinterval
  newnam cvn 
}def
%
/strip {	%  /abcdef 2 strip ==> /cdef
  /num exch def  /nam exch def
  /namstr nam cvsstr cvs def
  /newlen namstr length num sub def
  namstr num newlen getinterval  cvn
}def
%		ROUTINES TO HANDLE PACKING/UNPACKING NUMBERS
/PackHW {	% <target> <pos> <num> PackHW --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#0000FFFF and 1 pos sub 16 mul bitshift  target or
}def
/PackByte {	% <target> <pos> <num> PackByte --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#000000FF and 3 pos sub 8 mul bitshift   target or
}def
/UnpkHW {	%  <pos> <num> UnpkHW --> <unpacked value>
  /num exch def  /pos exch def
  num 1 pos sub -16 mul bitshift 16#0000FFFF and
  dup 16#00007FFF gt {16#00010000 sub} if
}def
/UnpkByte {	%  <pos> <num> UnpkByte --> <unpacked value>
  /num exch def  /pos exch def
  num 3 pos sub -8 mul bitshift 16#000000FF and
  dup 16#0000007F gt {16#00000100 sub} if
}def
%
/ps-scalefont {
    % FOR PS FONTS, LOOK AT SIZE REQUESTED.  IF IT HAS A DECIMAL REMAINDER
    % EQUIVALENT TO .001-.009 POINTS (I.E., .050-.450 VAXDOC UNITS), THAT'S 
    % A FLAG TO STRETCH IT VERTICALLY BY ADDING 1-9 EXTRA POINTS TO THE 
    % VERTICAL SCALING.
                % save requested size - as entered and as integer
    dup /x-size exch def cvi /x-int exch def
                % calc decimal remainder, mul x 1000, round
    x-size x-int sub 1000 mul round cvi /remainder exch def
                % see how we scale...
    remainder 50 lt remainder 450 gt or {
                % scale isomorphically
        /ystretch 0 def
        x-size scalefont
    } {
                % scale anamorphically
        /ystretch remainder def
        x-int ystretch add /y-size exch def
        [x-int 0 0 y-size 0 0] makefont
    } ifelse
}def
%
/DPSF {		% /procname size /fontname DPSF
    findfont exch ps-scalefont [ exch /setfont cvx ] cvx def
}def
%
/PXLBuildCharDict 17 dict def
/CMEncodingArray 256 array def
0 1 255 {CMEncodingArray exch dup cvsstr cvs cvn put} for
/RasterConvert {RasterScaleFactor div}def
/TransformBBox {
  aload pop
  /BB-ury exch def  /BB-urx exch def  /BB-lly exch def  /BB-llx exch def
  [ BB-llx RasterConvert BB-lly RasterConvert 
    BB-urx RasterConvert BB-ury RasterConvert ]
}def
/RunLengthToRasters {
  % none yet
}def
/GenerateRasters {			% GENERATE RASTERS FOR "IMAGEMASK"
  rasters  runlength 1 eq {RunLengthToRasters} if
}def
%
/int-dict-name {int (-dict) concatnam}def
/int-dict {int (-dict) concatnam cvx load}def
%
/DefinePXLFont {
	%  <int-font-name><ext-font-name><pt-sz(pix)><PXL mag><num-chars>...
	%  ...[llx lly urx ury]<newfont-fg>DefinePXLFont
  /newfont exch def  /bb exch def      /num exch def  /psz exch def
  /dsz exch def      /pxlmag exch def  /ext exch def  /int exch def
  /fnam ext (-) concatnam pxlmag cvsstr cvs concatnam def
  newfont not {
    int-dict-name 13 dict def
    int-dict begin
      /FontType 3 def  /FontMatrix [ 1 dsz div 0 0 1 dsz div 0 0 ] def
      /FontBBox bb TransformBBox def  /Encoding CMEncodingArray def
      /CharDict 1 dict def  CharDict begin  /Char-Info num array def  end
      /BuildChar {
        PXLBuildCharDict begin
          /char exch def  /fontdict exch def
          fontdict /CharDict get /Char-Info get char get aload pop
          /rasters exch def  /PackedWord1 exch def
          0 PackedWord1 UnpkHW 16#7FFF ne {
	    /PackedWord2 exch def  /wx 0 PackedWord1 UnpkHW def
            /rows 2 PackedWord1 UnpkByte def  /cols 3 PackedWord1 UnpkByte def
            /llx 0 PackedWord2 UnpkByte def   /lly 1 PackedWord2 UnpkByte def
            /urx 2 PackedWord2 UnpkByte def   /ury 3 PackedWord2 UnpkByte def
	  }{ %else
	    /PackedWord2 exch def  /PackedWord3 exch def /PackedWord4 exch def
            /wx 1 PackedWord1 UnpkHW def    /rows 0 PackedWord2 UnpkHW def
            /cols 1 PackedWord2 UnpkHW def  /llx 0 PackedWord3 UnpkHW def
            /lly 1 PackedWord3 UnpkHW def   /urx 0 PackedWord4 UnpkHW def
            /ury 1 PackedWord4 UnpkHW def
          } ifelse
          rows 0 lt {
	    /rows rows neg def /runlength 1 def
	  }{ %else
	    /runlength 0 def
	  } ifelse
          wx 0
          llx RasterConvert lly RasterConvert 
          urx RasterConvert ury RasterConvert setcachedevice
          rows 0 ne {
	    gsave
	      cols rows true  RasterScaleFactor 
              0 0 RasterScaleFactor neg llx .5 add neg ury .5 add 
              tempmatrix astore  GenerateRasters imagemask
            grestore
          } if
        end
      }def
    end
    fnam int-dict definefont pop 
  } if 
  int-dict-name fnam findfont psz scalefont def
  currentdict int [ int-dict /setfont cvx ] cvx put
}def 
/PXLF { true  DefinePXLFont}def	% SIGNAL THAT FONT ALREADY LOADED
/PXLNF {false  DefinePXLFont}def	% SIGNAL THAT FONT NOT ALREADY LOADED
%
/PXLC {	% <int-font-name><code><wx><llx><lly><urx><ury>...
	% ...<rows><cols><runlength><rasters>PXLC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /wx exch def       /code exch def       /int exch def
  % SEE IF LONG OR SHORT FORMAT IS REQUIRED
  true cols CKSZ rows CKSZ ury CKSZ urx CKSZ lly CKSZ llx CKSZ 
  TackRunLengthToRows {
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 llx PackByte 1 lly PackByte 2 urx PackByte 3 ury PackByte
      0 0 wx PackHW 2 rows PackByte 3 cols PackByte rasters ] put
  }{ %else
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 urx PackHW 1 ury PackHW   0 0 llx PackHW 1 lly PackHW
      0 0 rows PackHW 1 cols PackHW 0 0 16#7FFF PackHW 1 wx PackHW rasters ] put
  } ifelse
}def
%
/CKSZ {abs 127 le and}def
/TackRunLengthToRows {runlength 0 ne {/rows rows neg def} if}def
%
/PLOTC {
  % <wx><dsz><psz><llx><lly><urx><ury><rows><cols><runlength><rasters>PLOTC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /psz exch def      /dsz exch def        /wx exch def
  % "PLOT" A CHARACTER'S RASTER PATTERN
  rows 0 ne {
    gsave
      currentpoint translate  psz dsz div dup scale
      cols rows true  RasterScaleFactor 0 0 RasterScaleFactor 
      neg llx .5 add neg ury .5 add  tempmatrix astore
      GenerateRasters imagemask
    grestore
  } if
  wx x
}def
%
% set color routine: Color# SC
/SC {ColorPalette exch get 1.0 setcustomcolor}bind def
%
%%EndProlog


%%BeginSetup
/PxlResolution 300 def
/Resolution 3600 def
/RasterScaleFactor PxlResolution Resolution div def
/PortraitMode true def
/PaperWidth 8.500 def
/PaperHeight 11.000 def
72 Resolution div dup scale

%>  Postamble of file WORK17:[NESCHKE]VV_57A.DVI_PS.
% DefineFont:F42 Category:10 Pointsize:8
/Helvetica /Helvetica@DOCPSE DOCPSE ReENCODE
/F42 400.0 /Helvetica@DOCPSE DPSF
% DefineFont:F40 Category:10 Pointsize:9
/Helvetica-Bold /Helvetica-Bold@DOCPSE DOCPSE ReENCODE
/F40 450.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F39 Category:10 Pointsize:9
/Helvetica-Oblique /Helvetica-Oblique@DOCPSE DOCPSE ReENCODE
/F39 450.0 /Helvetica-Oblique@DOCPSE DPSF
% DefineFont:F38 Category:10 Pointsize:9
/F38 450.0 /Helvetica@DOCPSE DPSF
% DefineFont:F36 Category:10 Pointsize:10
/F36 500.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F16 Category:10 Pointsize:24
/F16 1200.0 /Helvetica-Bold@DOCPSE DPSF

%Spot color array for this job
/ColorPalette [
0.0 0.0 0.0 1.0 (BLACK) findcmykcustomcolor
] def

%%EndSetup
%
%%Page: (1) 1
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC
3600 5094 XY
3600 8083 SPB
-73.000 -383.000 translate
%%BeginDocument: (DOC$ROOT:[TEX.FORMATS]COMP1C.EPS)
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (Teresa  M Honkala) (SEi, Sykes Enterprise Incorp.)
%%Title: (center1.eps)
%%CreationDate: (9/2/98) (11:10 AM)
%%BoundingBox: 73 383 542 408
%%HiResBoundingBox: 73.25 383.9375 541.25 407.9375
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -558 1008 -1.5 1146 827 18 1 1 3 40 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:30 31
%%AI3_PaperRect:-30 761 582 -31
%%AI3_Margin:30 -31 -30 31
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 8 8
%%BeginData: 1618 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFD3AFFFD14F8FD6CFFFD14F8FD6CFFFD14F8FD6CFFFD0EF8
%FFFD05F8FDFCFFFD39FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
0 O
0 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
335.4958 389.5004 m
335.4958 388.2499 l
335.6891 388.3209 335.8824 388.3919 336.0953 388.4628 c
336.7806 388.639 337.522 388.7075 338.3858 388.7075 c
342.4015 388.7075 l
343.0352 390.8047 l
339.9177 390.8218 l
339.8468 390.8218 339.7415 390.8047 339.6534 390.8047 c
339.6705 390.8585 339.7072 390.9099 339.7072 390.9295 c
340.4292 392.5153 341.7677 397.1304 341.7677 397.8695 c
341.7505 398.4519 341.5744 398.9463 341.2391 399.3157 c
340.8696 399.7391 340.5001 400.0205 339.9716 400.16 c
338.9315 400.4242 337.0448 400.4609 335.4958 400.39 c
335.4958 398.2414 l
336.411 398.3809 337.7153 398.2928 338.0677 397.9771 c
338.2977 397.7471 338.2781 397.3776 338.2096 397.0962 c
337.9625 396.039 337.3972 393.9589 336.9053 392.6914 c
336.4281 391.4752 336.1834 391.0347 335.4958 390.8928 c
335.4958 390.1367 l
335.6548 390.2051 335.8115 390.259 335.9877 390.3299 c
336.9934 390.6456 337.9454 390.8047 339.0906 390.8047 c
339.1248 390.8047 339.1419 390.8047 339.1419 390.7876 c
339.1077 390.7704 339.0906 390.7876 v
338.5081 390.7337 337.8572 390.5942 337.2748 390.4352 c
336.6753 390.259 336.0586 389.9237 335.4958 389.5004 c
335.4958 389.5004 l
f
335.4958 398.2414 m
335.4958 400.39 l
334.7739 400.3558 334.0863 400.3019 333.6458 400.231 c
332.941 400.1256 332.6058 399.8443 332.1824 399.4919 c
331.9891 399.2985 331.8472 399.1395 331.6905 398.8924 c
331.0739 398.0114 329.7867 394.2405 329.4686 392.3195 c
329.312 391.3871 329.4343 390.2419 330.0681 389.6252 c
330.8439 388.8666 331.6024 388.7075 333.6458 388.7075 c
333.9982 389.219 334.6148 389.7475 335.4958 390.1367 c
335.4958 390.8928 l
335.3025 390.8414 335.0895 390.8218 334.8082 390.8218 c
334.72 390.8218 334.3335 390.8218 334.2453 390.8218 c
333.4158 390.8414 332.5006 390.9637 332.782 392.2143 c
332.9239 392.7795 333.2934 394.1352 333.9101 395.9852 c
334.2967 397.2357 334.5097 397.7471 334.8082 398.0114 c
334.9305 398.1166 335.1948 398.2048 335.4958 398.2414 c
335.4958 398.2414 l
f
335.4958 388.2499 m
335.4958 389.5004 l
334.8082 388.9375 334.2453 388.179 334.1034 387.4056 c
334.1034 387.2808 334.1744 387.2638 v
334.2453 387.2466 334.2624 387.298 334.2967 387.3518 c
334.4215 387.5451 334.8424 387.9514 335.4958 388.2499 c
335.4958 388.2499 l
f
324.3786 393.3423 m
324.3786 391.4385 l
325.7343 391.4385 l
325.7343 388.9375 l
328.7834 388.9375 l
328.7834 400.2848 l
325.8567 400.3019 l
325.24 400.3019 324.7653 400.1967 324.3786 400.0205 c
324.3786 395.8628 l
325.7343 398.2414 l
325.7343 393.3423 l
324.3786 393.3423 l
324.3786 393.3423 l
f
324.3786 395.8628 m
324.3786 400.0205 l
323.5148 399.6313 323.0743 398.8752 322.5629 398.1166 c
322.5287 398.0456 322.0514 397.3237 322.0001 397.2528 c
317.1891 389.3438 l
317.1891 388.9375 l
320.5025 388.9375 l
321.912 391.4385 l
324.3786 391.4385 l
324.3786 393.3423 l
322.9691 393.3423 l
324.3786 395.8628 l
324.3786 395.8628 l
f
317.1891 396.2324 m
317.1891 392.3733 l
317.3481 392.4075 317.4876 392.4785 317.6638 392.5494 c
320.0791 393.6409 320.73 397.1842 320.5905 398.0652 c
320.3605 399.4381 319.181 400.3019 317.8057 400.3019 c
317.1891 400.3019 l
317.1891 398.0456 l
317.2233 398.0286 317.2429 398.0114 317.26 397.9943 c
317.5243 397.6247 317.4705 396.92 317.1891 396.2324 c
317.1891 396.2324 l
f
317.1891 398.0456 m
317.1891 400.3019 l
311.48 400.3019 l
309.0842 392.5323 l
309.0842 388.9375 l
311.4457 388.9375 l
312.3976 392.18 l
315.5691 392.18 l
316.2371 392.1971 316.7144 392.2509 317.1891 392.3733 c
317.1891 396.2324 l
316.9419 395.579 316.4672 394.9452 315.9386 394.6466 c
315.6034 394.4704 315.1457 394.3653 314.7762 394.3456 c
313.0314 394.3456 l
314.1938 398.3637 l
316.3791 398.3637 l
316.8538 398.3296 317.0471 398.2218 317.1891 398.0456 c
317.1891 398.0456 l
f
317.1891 388.9375 m
317.1891 389.3438 l
316.9419 388.9375 l
317.1891 388.9375 l
317.1891 388.9375 l
f
309.0842 400.3019 m
309.0842 396.7781 l
310.1414 400.3019 l
309.0842 400.3019 l
309.0842 400.3019 l
f
309.0842 396.7781 m
309.0842 400.3019 l
307.3052 400.3019 l
305.7709 400.3019 305.3304 399.6852 304.5033 398.77 c
302.619 396.3033 l
302.3009 398.3466 l
302.1418 399.4747 301.9657 400.3019 300.0814 400.3019 c
296.998 400.3019 l
296.2566 397.8352 295.06 393.9761 294.25 391.4385 c
294.25 388.9375 l
296.8929 388.9375 l
299.428 397.4485 l
300.4167 391.3699 l
301.0333 391.3699 l
305.9471 397.3409 l
303.3581 388.9375 l
306.7767 388.9375 l
309.0842 396.7781 l
309.0842 396.7781 l
f
309.0842 388.9375 m
309.0842 392.5323 l
307.9929 388.9375 l
309.0842 388.9375 l
309.0842 388.9375 l
f
294.25 399.5433 m
294.25 394.7518 l
294.6709 396.1785 295.0062 397.4999 295.0062 397.8695 c
295.0062 398.4519 294.8299 398.9463 294.4947 399.3157 c
294.4066 399.3867 294.338 399.4747 294.25 399.5433 c
294.25 399.5433 l
f
294.25 394.7518 m
294.25 399.5433 l
293.949 399.8443 293.6333 400.0376 293.21 400.16 c
292.17 400.4242 290.3028 400.4609 288.7514 400.39 c
288.7514 398.2414 l
289.6494 398.3809 290.9708 398.2928 291.3061 397.9771 c
291.5533 397.7471 291.5191 397.3776 291.4651 397.0962 c
291.218 396.039 290.6381 393.9589 290.1609 392.6914 c
289.6861 391.4752 289.439 391.0347 288.7514 390.8928 c
288.7514 388.7075 l
289.9504 388.7442 291.4113 388.9033 292.1871 389.7133 c
292.4514 389.9776 292.7695 390.5233 292.9628 390.9295 c
293.3152 391.7224 293.8438 393.2885 294.25 394.7518 c
294.25 394.7518 l
f
294.25 388.9375 m
294.25 391.4385 l
293.7899 389.9409 293.4913 388.9375 y
294.25 388.9375 l
294.25 388.9375 l
f
288.7514 398.2414 m
288.7514 400.39 l
287.9952 400.3558 287.3247 400.3019 286.8671 400.231 c
286.0204 400.1085 285.7218 399.7904 285.4037 399.4919 c
285.2446 399.3328 285.0881 399.1395 284.9119 398.8924 c
284.5766 398.398 284.048 397.0766 283.5708 395.6671 c
283.5708 389.3609 l
284.3466 388.7613 285.2446 388.6733 287.4837 388.7075 c
287.819 388.7075 288.2595 388.6904 288.7514 388.7075 c
288.7514 390.8928 l
288.558 390.8414 288.328 390.8218 288.0466 390.8218 c
287.9414 390.8218 287.5547 390.8218 287.447 390.8218 c
286.6738 390.8414 285.7218 390.9637 286.0204 392.2143 c
286.1452 392.7795 286.5318 394.1352 287.1314 395.9852 c
287.5547 397.2357 287.7481 397.7471 288.0466 398.0114 c
288.1714 398.1166 288.4356 398.2048 288.7514 398.2414 c
288.7514 398.2414 l
f
283.5708 400.4438 m
283.5708 397.8181 l
283.6076 397.8181 283.6418 397.8181 283.6786 397.8181 c
284.4714 400.4438 l
283.5708 400.4438 l
283.5708 400.4438 l
f
283.5708 397.8181 m
283.5708 400.4438 l
278.9385 400.4438 l
276.9123 400.4438 275.4856 400.4242 274.2694 397.8524 c
273.9513 397.1647 273.6528 396.0904 273.2832 394.7518 c
273.0532 393.9589 272.7718 393.149 272.6299 392.3195 c
272.4708 391.4042 272.5956 390.2419 273.2465 389.6252 c
274.0932 388.7956 274.9204 388.6733 277.4409 388.7075 c
277.6513 388.7075 277.8104 388.7075 278.1089 388.7075 c
278.6913 388.7075 280.7004 388.7785 280.9475 388.8837 c
281.8285 391.7224 l
278.8846 391.2452 277.2647 391.4923 276.7189 391.5976 c
276.0142 391.7224 275.9604 392.268 276.2785 393.4476 c
276.4179 393.9761 276.6113 394.5218 276.7875 395.07 c
277.6342 397.6761 277.9694 397.7814 278.9898 397.8009 c
279.7485 397.8181 281.3684 397.8181 283.5708 397.8181 c
283.5708 397.8181 l
f
283.5708 389.3609 m
283.5708 395.6671 l
283.1842 394.4704 282.8318 393.2004 282.6899 392.3195 c
282.5504 391.3871 282.6556 390.2419 283.3066 389.6252 c
283.3946 389.52 283.4828 389.449 283.5708 389.3609 c
283.5708 389.3609 l
f
U
1 Ap
541.25 383.9375 m
541.25 407.9375 L
73.25 407.9375 L
73.25 383.9375 L
541.25 383.9375 L
n
0 Ap
-3987.75 395.9375 m
4652.25 395.9375 L
(N) *
307.25 4548.9375 m
307.25 -4091.0625 L
(N) *
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument
SPE
3600 5094 XY
0 SC 3600 9976 XY F16(Software)S 3600 11221 XY(Produ)S 2 x(ct)S 3600 12467 XY
(Description)S 3600 X 747 y 23316 204 R 3600 13988 XY F36(PRODUC)S -2 x
(T)S 167 x(NAME:)S 597 x(Compaq)S 167 x(COB)S -2 x(OL)S 166 x(V)S -27 x
(ersion)S 167 x(5.7A)S 166 x(for)S 166 x(OpenVMS)S 167 x(V)S -37 x(AX)S
23784 X(SPD)S 166 x(25.04.33)S 3600 16327 XY F40(DESCRIPTI)S -2 x(ON)S
3600 17444 XY F38(Compaq)S 151 x(COBOL)S 149 x(for)S 149 x(OpenVMS)S
151 x(V)S -33 x(AX,)S 351 x(formerly)S 352 x(known)S 3600 X 548 y(as)S
180 x(V)S -33 x(AX)S 150 x(COBOL)S 179 x(and)S 181 x(DIGI)S -2 x(T)S
-33 x(AL)S 180 x(V)S -33 x(AX)S 150 x(COBOL)S(,)S 186 x(is)S 180 x(a)S
180 x(high-)S 3600 X 548 y(level)S 166 x(language)S 168 x(for)S 167 x
(business)S 168 x(data)S 167 x(processing)S 168 x(that)S 166 x(oper-)S
3600 X 548 y(ates)S 195 x(on)S 195 x(the)S 195 x(OpenVMS)S 196 x(V)S
-34 x(AX)S 195 x(Operating)S 195 x(System,)S 206 x(taking)S 3600 X 548 y
(full)S 132 x(advantage)S 135 x(of)S 133 x(the)S 133 x(system)S 134 x
(facilit)S -2 x(ies.)S 194 x(Compaq)S 134 x(COBOL)S 3600 X 548 y(is)S
142 x(based)S 144 x(upon)S 144 x(the)S 142 x(1985)S 144 x(ANSI)S 142 x
(COBOL)S 142 x(Standard)S 144 x(X3.23-)S 3600 X 548 y(1985)S 150 x(as)S
150 x(modi\211ed)S 151 x(by)S 150 x(the)S 149 x(X.23a\20319)S 2 x(89)S
150 x(amendm)S 2 x(ent.)S 3600 21848 XY(Compaq)S 151 x(COBOL)S 179 x
(adher)S 2 x(es)S 180 x(to)S 180 x(the)S 180 x(high)S 181 x(level)S
180 x(by)S 180 x(the)S 180 x(Na-)S 3600 X 548 y(tional)S 234 x(Bureau)S
235 x(of)S 234 x(Standard)S 2 x(s)S 234 x(for)S 234 x(conform)S 2 x
(ance)S 235 x(to)S 234 x(FIPS)S 3600 X 548 y(PUB)S 149 x(21-3,)S 150 x
(Federa)S 2 x(l)S 149 x(Standard)S 150 x(COBOL.)S 3600 24061 XY(The)S
308 x(Compaq)S 310 x(COBOL)S 307 x(Data)S 308 x(Manipulation)S 308 x
(Langu)S 2 x(age)S 3600 X 548 y(\(DML\),)S 197 x(which)S 196 x(is)S
196 x(based)S 197 x(upon)S 197 x(the)S 197 x(report)S 197 x(of)S 196 x
(the)S 196 x(CODA-)S 3600 X 548 y(SYL)S 157 x(Data)S 157 x(Description)S
157 x(Language)S 159 x(Committee)S 157 x(\(1978\),)S 159 x(al-)S 3600 X
548 y(lows)S 127 x(users)S 128 x(to)S 127 x(write)S 127 x(progra)S 2 x
(ms)S 128 x(that)S 127 x(access)S 128 x(databases)S 129 x(us-)S 3600 X
548 y(ing)S 203 x(the)S 203 x(Oracle)S 203 x(DBMS)S 203 x(database)S
204 x(manage)S 2 x(ment)S 203 x(system.)S 3600 X 548 y(Oracle)S 150 x
(DBMS)S 149 x(must)S 150 x(be)S 150 x(installed)S 149 x(to)S 149 x(use)S
151 x(this)S 149 x(feature.)S 3600 27917 XY(Compaq)S 151 x(COBOL)S 99 x
(includes)S 100 x(various)S 100 x(extensions)S 101 x(to)S 100 x(COBOL,)S
3600 X 548 y(including)S 145 x(screen)S 147 x(handling)S 146 x(at)S
145 x(the)S 145 x(source)S 147 x(language)S 146 x(level,)S 3600 X 548 y
(\211le)S 149 x(sharing,)S 150 x(and)S 151 x(record)S 151 x(locking.)S
3600 30130 XY(Compaq)S 170 x(COBOL)S 168 x(V)S -25 x(ersion)S 170 x
(5.7A)S 169 x(for)S 169 x(OpenVMS)S 169 x(V)S -33 x(AX)S 169 x(is)S
168 x(a)S 3600 X 548 y(docume)S 2 x(ntation)S 205 x(update)S 207 x(release.)S
368 x(The)S 207 x(software)S 205 x(produ)S 2 x(ct)S 3600 X 548 y(remains)S
233 x(unchang)S 2 x(ed)S 232 x(since)S 232 x(the)S 232 x(Compaq)S 233 x
(COBOL)S 231 x(V5.7)S 3600 X 548 y(release.)S 364 x(The)S 205 x(docume)S
2 x(ntation)S 204 x(set)S 204 x(has)S 205 x(been)S 205 x(uni\211ed)S
205 x(for)S 3600 X 547 y(Compaq)S 174 x(COBOL)S 171 x(on)S 173 x(V)S
-33 x(AX)S 173 x(and)S 173 x(Alpha)S 172 x(Systems.)S 269 x(For)S 173 x
(re-)S 3600 X 548 y(cent)S 135 x(release)S 135 x(speci\211c)S 135 x
(technical)S 134 x(information,)S 137 x(such)S 135 x(as)S 135 x(fea-)S
3600 X 548 y(ture)S 149 x(enhanc)S 2 x(ements,)S 149 x(bug)S 150 x(\211xes,)S
149 x(restrictions)S 149 x(and)S 149 x(compa)S 2 x(t-)S 3600 X 548 y
(ibili)S -2 x(ty)S 161 x(charts,)S 165 x(please)S 161 x(refer)S 162 x
(to)S 161 x(the)S 161 x(Compaq)S 163 x(COBOL)S 160 x(V5.7)S 3600 X 548 y
(Release)S 150 x(Notes.)S 3600 35630 XY(The)S 209 x(followi)S -2 x(ng)S
209 x(list)S 207 x(of)S 208 x(extensions)S 209 x(to)S 208 x(COBOL)S
208 x(are)S 209 x(imple-)S 3600 X 548 y(mented)S 151 x(in)S 149 x(Compaq)S
150 x(COBOL)S 149 x(for)S 150 x(OpenVMS)S 151 x(V)S -34 x(AX:)S 15854 16328 XY
(\201)S 441 x(Screen)S 151 x(handling)S 151 x(is)S 150 x(implemented)S
151 x(using)S 151 x(the)S 150 x(DISPLA)S -33 x(Y)S 16452 X 548 y(and)S
176 x(ACCEPT)S 174 x(statements.)S 276 x(The)S 176 x(DISPLA)S -34 x
(Y)S 175 x(statement)S 16452 X 548 y(enables)S 241 x(the)S 240 x(prog)S
2 x(rammer)S 242 x(to)S 240 x(display)S 240 x(information)S 241 x(or)S
16452 X 548 y(prompts)S 138 x(anywhere)S 139 x(on)S 137 x(a)S 138 x
(video)S 137 x(scree)S 2 x(n.)S 195 x(The)S 137 x(ACCEPT)S 16452 X 548 y
(statement)S 174 x(takes)S 174 x(information)S 174 x(typed)S 174 x(anywhere)S
175 x(on)S 174 x(the)S 16452 X 548 y(screen)S 259 x(and)S 259 x(returns)S
259 x(the)S 258 x(value)S 259 x(to)S 258 x(a)S 258 x(running)S 259 x
(Com-)S 16452 X 548 y(paq)S 137 x(COBOL)S 136 x(program)S 2 x(.)S 194 x
(The)S 137 x(DISPLA)S -34 x(Y)S 137 x(statement)S 137 x(con-)S 16452 X
548 y(verts)S 140 x(data)S 140 x(from)S 141 x(internal)S 140 x(numeric)S
141 x(format)S 140 x(to)S 140 x(ASCII)S 138 x(dis-)S 16452 X 548 y(play)S
149 x(format,)S 149 x(and)S 150 x(the)S 149 x(ACCEPT)S 149 x(WITH)S
149 x(CONVER)S -2 x(SION)S 16452 X 548 y(statement)S 234 x(converts)S
234 x(ASCII)S 233 x(display)S 233 x(input)S 234 x(characters)S 16452 X
548 y(to)S 267 x(internal)S 267 x(nume)S 2 x(ric)S 267 x(formats)S 268 x
(as)S 268 x(appropr)S 2 x(iate.)S 552 x(The)S 16452 X 548 y(terminal-type)S
136 x(is)S 134 x(recogn)S 2 x(ized)S 135 x(at)S 135 x(run)S 135 x(time)S
135 x(from)S 136 x(informa-)S 16452 X 548 y(tion)S 149 x(provided)S
151 x(by)S 150 x(the)S 149 x(operating)S 151 x(system.)S 15854 X 878 y
(\201)S 441 x(Many)S 164 x(\211le)S 163 x(capab)S 2 x(ili)S -2 x(ties)S
163 x(are)S 164 x(available)S 164 x(through)S 164 x(RMS)S 163 x(in-)S
16452 X 548 y(cluding)S 163 x(extensions)S 164 x(for)S 163 x(segmented)S
164 x(keys,)S 167 x(descend)S 2 x(ing)S 16452 X 548 y(keys,)S 150 x
(and)S 150 x(duplicate)S 149 x(primar)S 2 x(y)S 149 x(keys.)S 15854 X
879 y(\201)S 441 x(RMS-STS)S 134 x(and)S 135 x(RMS-STV)S 135 x(and)S
135 x(RMS-FILENAME)S 135 x(spe-)S 16452 X 548 y(cial)S 266 x(registers)S
267 x(may)S 267 x(be)S 267 x(examine)S 2 x(d)S 266 x(to)S 267 x(assist)S
266 x(debug-)S 16452 X 548 y(ging.)S 197 x(These)S 146 x(registers)S
146 x(contain)S 145 x(status)S 145 x(values)S 146 x(from)S 145 x(the)S
16452 X 548 y(Record)S 150 x(Manag)S 2 x(ement)S 150 x(System)S 150 x
(\(RMS\))S 150 x(for)S 150 x(OpenVMS.)S 15854 X 878 y(\201)S 441 x(File)S
123 x(sharing)S 125 x(and)S 125 x(record)S 125 x(locking)S 125 x(features)S
124 x(enab)S 2 x(le)S 123 x(more)S 16452 X 548 y(than)S 150 x(one)S
150 x(user)S 150 x(to)S 150 x(access)S 150 x(data)S 150 x(at)S 149 x
(the)S 150 x(same)S 151 x(time.)S 15854 X 879 y(\201)S 441 x(Conditional)S
213 x(compilation)S 213 x(serves)S 215 x(to)S 213 x(make)S 215 x(debugg)S
2 x(ing)S 16452 X 548 y(easier)S -24 x(.)S 15854 X 879 y(\201)S 441 x
(The)S 230 x(/INSTRU)S -2 x(CTION_SET)S 229 x(quali\211er)S 231 x(customizes)S
231 x(ob-)S 16452 X 548 y(ject)S 131 x(code)S 132 x(generation)S 132 x
(to)S 131 x(target)S 132 x(the)S 131 x(dif)S -9 x(ferent)S 132 x(classes)S
132 x(of)S 16452 X 548 y(V)S -33 x(AX)S 160 x(processo)S 2 x(rs,)S 162 x
(maximizing)S 161 x(speci\211c)S 161 x(processo)S 2 x(r)S 160 x(fea-)S
16452 X 548 y(tures.)S 15854 X 878 y(\201)S 441 x(The)S 226 x(COPY)S
225 x(FROM)S 225 x(DICTIO)S -2 x(NAR)S -8 x(Y)S 225 x(statement)S 226 x
(allows)S 16452 X 548 y(access)S 210 x(to)S 210 x(common)S 211 x(record)S
211 x(de\211nitions)S 210 x(stored)S 210 x(in)S 209 x(the)S 16452 X
548 y(Oracle)S 300 x(CDD/Repository)S -34 x(.)S 652 x(Oracle)S 300 x
(CDD/Repository)S 16452 X 548 y(must)S 150 x(be)S 150 x(installed)S
149 x(to)S 149 x(use)S 150 x(this)S 149 x(feature.)S 15854 X 879 y(\201)S
441 x(T)S -50 x(erminal)S 141 x(format)S 142 x(recognition)S 141 x(for)S
141 x(progra)S 2 x(m)S 141 x(source)S 142 x(\211les.)S 23574 38320 XY
F40(November)S 150 x(2002)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%PageProcessColors: Black
%%PageCustomColors: (BLACK)
%
%%Page: (2) 2
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 3002 XY F40(Compaq)S 149 x(COBOL)S 148 x(V)S -25 x(ersion)S
150 x(5.7A)S 150 x(for)S 150 x(OpenVMS)S 149 x(V)S -33 x(AX)S 23947 X
(SPD)S 149 x(25.04.33)S 3600 4835 XY F38(\201)S 441 x(Four-digit)S 149 x
(year-)S 2 x(date)S 150 x(support)S 150 x(in)S 149 x(ACCEPT)S 149 x
(format)S 150 x(2.)S 3600 X 832 y(\201)S 441 x(Automatic)S 118 x(compile-time)S
118 x(access)S 119 x(to)S 118 x(SYS$CURRENCY)S 4198 X 548 y(system)S
191 x(logical)S 190 x(when)S 192 x(CURR)S -2 x(ENCY)S 190 x(SIGN)S 190 x
(clause)S 191 x(not)S 4198 X 548 y(speci\211ed)S 150 x(in)S 149 x(user)S
151 x(progra)S 2 x(m.)S 3600 7694 XY(Compaq)S 151 x(COBOL)S 149 x(for)S
149 x(OpenVMS)S 151 x(V)S -33 x(AX)S 149 x(implements)S 101 x(several)S
3600 X 548 y(statements)S 145 x(and)S 146 x(extensions)S 145 x(designed)S
146 x(to)S 144 x(make)S 146 x(progr)S 2 x(am-)S 3600 X 548 y(ming)S
150 x(easier)S 150 x(in)S 149 x(the)S 150 x(OpenVMS)S 151 x(for)S 149 x
(V)S -33 x(AX)S 149 x(environ)S 2 x(ment:)S 3600 9722 XY(\201)S 441 x
(CALL)S 407 x(statement)S 409 x(extensions:)S 716 x(BY)S 407 x(V)S -33 x
(ALUE,)S 407 x(BY)S 4198 X 548 y(DESCRIPT)S -10 x(OR,)S 149 x(OMITTED,)S
148 x(and)S 151 x(GIVIN)S -2 x(G)S 3600 X 832 y(\201)S 441 x(V)S -33 x
(ALUE)S 196 x(IS)S 197 x(EXTERNAL)S 197 x(\202)S 197 x(Access)S 198 x
(to)S 196 x(link)S 197 x(time)S 197 x(con-)S 4198 X 548 y(stants)S 3600 X
832 y(\201)S 441 x(USAGE)S 149 x(IS)S 149 x(POINTER)S 148 x(\202)S 150 x
(Address)S 151 x(data)S 150 x(type)S 3600 X 831 y(\201)S 441 x(V)S -33 x
(ALUE)S 217 x(IS)S 216 x(REFERENCE)S 216 x(\202)S 217 x(Compile)S 217 x
(time)S 217 x(address)S 4198 X 548 y(evaluation)S 3600 X 832 y(\201)S
441 x(SET)S 146 x(T)S -8 x(O)S 147 x(REFERENCE)S 145 x(\202)S 147 x
(Run)S 147 x(time)S 147 x(addres)S 2 x(s)S 146 x(evalua-)S 4198 X 548 y
(tion)S 3600 X 832 y(\201)S 441 x(SUCCESS/F)S -26 x(AILURE)S 149 x(\202)S
149 x(Class)S 150 x(conditions)S 3600 X 832 y(\201)S 441 x(Thirty-one-cha)S
2 x(racter)S 150 x(user-na)S 2 x(mes)S 3600 X 832 y(\201)S 441 x(ACCEPT)S
149 x(A)S -34 x(T)S 150 x(END)S 149 x(statement)S 3600 X 832 y(\201)S
441 x(Single-quote-delimited,)S 150 x(non-num)S 2 x(eric)S 149 x(literals)S
3600 X 832 y(\201)S 441 x(Hyphen/under)S 2 x(score)S 150 x(equivalence)S
151 x(in)S 149 x(user-n)S 2 x(ames)S 3600 X 832 y(\201)S 441 x(Non-nume)S
2 x(ric)S 149 x(literal)S 148 x(argum)S 2 x(ent)S 150 x(passing)S 3600 21164 XY
(The)S 110 x(Compaq)S 111 x(COBOL)S 110 x(compiler)S 110 x(produ)S 2 x
(ces)S 110 x(an)S 110 x(object)S 110 x(mod-)S 3600 X 548 y(ule)S 207 x
(from)S 207 x(a)S 206 x(source)S 208 x(progr)S 2 x(am.)S 370 x(The)S
207 x(compiler)S 207 x(is)S 207 x(capable)S 3600 X 548 y(of)S 191 x
(prod)S 2 x(ucing)S 192 x(a)S 191 x(source)S 193 x(listing)S 191 x(with)S
190 x(embe)S 2 x(dded)S 192 x(diagnos-)S 3600 X 548 y(tics)S 214 x(including)S
214 x(the)S 215 x(line)S 214 x(and)S 215 x(column)S 215 x(position)S
215 x(in)S 214 x(source-)S 3600 X 548 y(code,)S 203 x(a)S 192 x(machine)S
193 x(language)S 193 x(list)S -2 x(ing,)S 202 x(a)S 192 x(\211le-nam)S
2 x(e)S 191 x(map,)S 203 x(a)S 3600 X 548 y(data-nam)S 2 x(e)S 210 x
(map,)S 226 x(a)S 210 x(proce)S 2 x(dure-nam)S 2 x(e)S 210 x(map,)S
226 x(an)S 211 x(external)S 3600 X 548 y(progra)S 2 x(m)S 158 x(name)S
160 x(map,)S 161 x(database)S 159 x(subsche)S 2 x(ma)S 159 x(information,)S
3600 X 548 y(and)S 169 x(a)S 168 x(cross-re)S 2 x(ference)S 168 x(listing.)S
253 x(The)S 169 x(cross-refer)S 2 x(ence)S 168 x(list-)S 3600 X 548 y
(ing)S 193 x(and)S 193 x(maps)S 193 x(may)S 194 x(be)S 193 x(produce)S
2 x(d)S 192 x(in)S 193 x(either)S 192 x(alphabetical)S 3600 X 548 y
(order)S -23 x(,)S 209 x(or)S 198 x(in)S 197 x(order)S 199 x(of)S 198 x
(declaration.)S 344 x(The)S 198 x(cross-refer)S 2 x(ence)S 3600 X 548 y
(listi)S -2 x(ng)S 224 x(distinguishes)S 224 x(updating)S 224 x(referen)S
2 x(ces)S 224 x(to)S 223 x(data)S 224 x(from)S 3600 X 548 y(read-o)S
2 x(nly)S 149 x(reference)S 2 x(s.)S 3600 28123 XY(Compaq)S 151 x(COBOL)S
149 x(for)S 149 x(OpenVMS)S 151 x(V)S -33 x(AX)S 149 x(provides)S 404 x
(suppo)S 2 x(rt)S 3600 X 548 y(for)S 149 x(error)S 150 x(diagnostics)S
150 x(and)S 149 x(cross-)S 2 x(reference)S 150 x(information)S 150 x
(to)S 3600 X 548 y(Langua)S 2 x(ge-Sensitive)S 170 x(Editor/Source)S
170 x(Code)S 170 x(Analyzer)S -24 x(.)S 259 x(Ad-)S 3600 X 548 y(ditionally)S
-34 x(,)S 137 x(Compaq)S 136 x(COBOL)S 134 x(for)S 134 x(OpenVMS)S 136 x
(V)S -33 x(AX)S 134 x(provides)S 3600 X 548 y(suppor)S 2 x(t)S 194 x
(for)S 195 x(the)S 195 x(proce)S 2 x(ssing)S 195 x(of)S 195 x(pseudoco)S
2 x(de)S 195 x(and)S 196 x(design)S 3600 X 548 y(comme)S 2 x(nts)S 241 x
(that)S 241 x(are)S 242 x(used)S 242 x(by)S 242 x(the)S 242 x(Compaq)S
242 x(Langua)S 2 x(ge-)S 3600 X 548 y(Sensitive)S 107 x(Editor/Source)S
109 x(Code)S 107 x(Analyzer)S 109 x(for)S 107 x(low-level)S 107 x(pro-)S
3600 X 548 y(gram)S 151 x(design.)S 3600 32890 XY(Object)S 127 x(modules)S
128 x(produc)S 2 x(ed)S 127 x(by)S 128 x(the)S 127 x(compiler)S 128 x
(can)S 128 x(be)S 128 x(linked)S 3600 X 548 y(with)S 269 x(other)S 271 x
(object)S 270 x(modules)S 271 x(produced)S 272 x(by)S 270 x(many)S 271 x
(other)S 3600 X 548 y(OpenVMS)S 162 x(V)S -33 x(AX)S 161 x(languag)S
2 x(es,)S 164 x(including)S 161 x(Compaq')S -7 x(s)S 161 x(BASIC)S 3600 X
548 y(and)S 217 x(Fortran.)S 401 x(Compaq)S 218 x(COBOL)S 216 x(for)S
216 x(OpenVMS)S 218 x(V)S -34 x(AX)S 217 x(is)S 3600 X 548 y(suppor)S
2 x(ted)S 217 x(by)S 218 x(both)S 218 x(the)S 218 x(OpenVMS)S 219 x
(V)S -33 x(AX)S 217 x(Common)S 219 x(Run)S 3600 X 548 y(T)S -17 x(ime)S
271 x(Library)S 271 x(\(R)S -8 x(TL\))S 270 x(and)S 271 x(the)S 270 x
(Symbolic)S 271 x(Debugger)S 271 x(for)S 3600 X 548 y(OpenVMS)S 151 x
(V)S -34 x(AX.)S 15854 4835 XY(The)S 225 x(Compaq)S 226 x(COBOL)S 225 x
(for)S 225 x(OpenVMS)S 226 x(V)S -33 x(AX)S 224 x(prod)S 2 x(uct)S 224 x
(in-)S 15854 X 548 y(cludes)S 184 x(a)S 184 x(COBOL)S 183 x(compiler)S
184 x(and)S 184 x(the)S 184 x(REFORMA)S -34 x(T)S 184 x(utili)S -2 x
(ty)S -33 x(.)S 15854 X 548 y(The)S 159 x(REFORMA)S -33 x(T)S 158 x
(utility)S 158 x(converts)S 160 x(source)S 160 x(progra)S 2 x(ms)S 159 x
(from)S 15854 X 548 y(DIGIT)S -34 x(AL)S 154 x(terminal)S 155 x(format)S
155 x(to)S 154 x(ANSI-standard)S 156 x(COBOL)S 154 x(for-)S 15854 X
548 y(mat)S 150 x(and)S 150 x(vice)S 150 x(versa.)S 15854 8521 XY F40
(HARDW)S -26 x(ARE)S 149 x(REQUIREMENTS)S 15854 X 897 y F38(Any)S 178 x
(V)S -33 x(AX)S 178 x(system)S 179 x(that)S 178 x(is)S 178 x(capable)S
179 x(of)S 177 x(running)S 179 x(OpenVM)S 2 x(S)S 15854 X 548 y(V)S
-33 x(AX)S 149 x(V6.2)S 150 x(or)S 150 x(higher)S -24 x(.)S 15854 X
897 y F39(Disk)S 149 x(Space)S 150 x(Requireme)S 2 x(nts)S 149 x(\(Block)S
150 x(Cluster)S 149 x(Size)S 150 x(=)S 149 x(1\))S 15854 X 896 y F42
(Disk)S 134 x(space)S 132 x(req)S -2 x(uired)S 132 x(during)S 131 x
(installation:)S 23924 X(12,0)S -2 x(00)S 132 x(blocks)S 23924 X 498 y
(\(6.3)S 131 x(Mbytes\))S 15854 13254 XY(Disk)S 134 x(space)S 132 x
(req)S -2 x(uired)S 132 x(for)S 132 x(use)S 132 x(\(perma)S -2 x(nent\))S
-2 x(:)S 718 x(4,00)S -2 x(0)S 133 x(blocks)S 23924 X 498 y(\(2.0)S
131 x(Mbytes\))S 15854 X 896 y F38(These)S 202 x(counts)S 203 x(refer)S
202 x(to)S 201 x(the)S 202 x(disk)S 202 x(space)S 202 x(require)S 2 x
(d)S 201 x(on)S 202 x(the)S 15854 X 548 y(system)S 189 x(disk.)S 316 x
(The)S 189 x(sizes)S 189 x(are)S 189 x(appr)S 2 x(oximate;)S 208 x(actual)S
188 x(sizes)S 15854 X 548 y(may)S 134 x(vary)S 135 x(depending)S 135 x
(on)S 134 x(the)S 133 x(user)S 18 x(')S -9 x(s)S 134 x(system)S 134 x
(environm)S 2 x(ent,)S 15854 X 548 y(con\211gur)S 2 x(ation,)S 149 x
(and)S 150 x(software)S 150 x(options.)S 15854 17787 XY F40(OPTIONAL)S
148 x(HARDW)S -26 x(ARE)S 15854 X 896 y F38(A)S 161 x(VT100)S 161 x
(family)S -34 x(,)S 163 x(VT200)S 161 x(family)S -33 x(,)S 162 x(VT300)S
162 x(family)S -34 x(,)S 163 x(or)S 161 x(VT400)S 15854 X 548 y(family)S
189 x(terminal)S 190 x(is)S 189 x(required)S 191 x(for)S 190 x(the)S
190 x(screen)S 191 x(handling)S 190 x(ex-)S 15854 X 548 y(tensions)S
150 x(to)S 149 x(the)S 150 x(ACCEPT)S 149 x(and)S 150 x(DISPLA)S -33 x
(Y)S 149 x(statements.)S 15854 21273 XY F40(SOFTW)S -25 x(ARE)S 149 x
(REQUIREMENTS)S 15854 X 897 y F39(OpenVMS)S 419 x(V)S -25 x(AX)S 417 x
(Operating)S 419 x(System)S 418 x F38(V)S -24 x(ersion)S 418 x(6.2\202)S
15854 X 548 y(V)S -25 x(ersion)S 151 x(7.3)S 149 x(\(SPD)S 150 x(25.01.xx\))S
15854 24212 XY F40(SOFTW)S -25 x(ARE)S 149 x(LICENSIN)S -2 x(G)S 15854 X
897 y F38(This)S 219 x(software)S 219 x(is)S 218 x(furnished)S 220 x
(only)S 219 x(under)S 221 x(a)S 219 x(license.)S 407 x(For)S 15854 X
548 y(more)S 175 x(information)S 174 x(about)S 175 x(licensing)S 174 x
(terms)S 174 x(and)S 175 x(policies)S 174 x(of)S 15854 X 548 y(Compaq,)S
150 x(contact)S 150 x(your)S 151 x(local)S 149 x(Compaq)S 150 x(of)S
-8 x(\211ce.)S 15854 X 897 y F39(License)S 150 x(Mana)S 2 x(gement)S
150 x(Facility)S 148 x(Suppor)S 2 x(t)S 15854 X 896 y F38(This)S 215 x
(layered)S 216 x(produ)S 2 x(ct)S 215 x(supports)S 216 x(the)S 215 x
(OpenVM)S 2 x(S)S 215 x(License)S 15854 X 548 y(Manag)S 2 x(ement)S
150 x(Facility)S -34 x(.)S 200 x(License)S 151 x(units)S 150 x(for)S
150 x(this)S 150 x(product)S 151 x(are)S 15854 X 548 y(allocated)S 106 x
(on)S 105 x(an)S 106 x(Unlimited)S 105 x(System)S 106 x(Use)S 105 x
(and)S 106 x(Person)S 2 x(al)S 105 x(and)S 15854 X 548 y(Concurre)S
2 x(nt)S 149 x(Use)S 149 x(basis.)S 15854 X 897 y(Each)S 150 x(Concurrent)S
150 x(Use)S 149 x(license)S 149 x(allows)S 149 x(any)S 149 x(one)S 150 x
(individual)S 15854 X 548 y(at)S 203 x(a)S 204 x(time)S 203 x(to)S 204 x
(use)S 204 x(the)S 203 x(layered)S 205 x(product.)S 361 x(Each)S 205 x
(Personal)S 15854 X 548 y(Use)S 186 x(license)S 187 x(allows)S 186 x
(one)S 187 x(identi\211ed)S 186 x(individual)S 186 x(to)S 186 x(use)S
187 x(the)S 15854 X 548 y(layered)S 151 x(product.)S 15854 X 896 y(For)S
171 x(more)S 171 x(information)S 171 x(on)S 171 x(the)S 170 x F39(License)S
171 x(Mana)S 2 x(gement)S 171 x(Fa-)S 15854 X 548 y(cilit)S -2 x(y)S
F38(,)S 153 x(refer)S 153 x(to)S 151 x(the)S 153 x F39(OpenVMS)S 153 x
(Operating)S 152 x(System)S 153 x(for)S 152 x(V)S -24 x(AX)S 15854 X
548 y(and)S 116 x(Alpha)S 116 x F38(Software)S 116 x(Product)S 116 x
(Description)S 116 x(\(SPD)S 116 x(25.01.xx\))S 15854 X 548 y(or)S 166 x
(the)S 165 x F39(OpenVMS)S 167 x(Alpha)S 166 x(Operating)S 165 x(System)S
166 x F38(docum)S 2 x(enta-)S 15854 X 548 y(tion.)S 15132 38868 XY F40
(2)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%+ Helvetica-Oblique
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (3) 3
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 3002 XY F40(Compaq)S 149 x(COBOL)S 148 x(V)S -25 x(ersion)S
150 x(5.7A)S 150 x(for)S 150 x(OpenVMS)S 149 x(V)S -33 x(AX)S 23947 X
(SPD)S 149 x(25.04.33)S 3600 4834 XY(CLUSTER)S 148 x(ENVIRONMENT)S 3600 X
897 y F38(This)S 202 x(layered)S 204 x(product)S 203 x(is)S 202 x(fully)S
201 x(suppo)S 2 x(rted)S 202 x(when)S 203 x(installed)S 3600 X 548 y
(on)S 149 x(any)S 150 x(valid)S 149 x(and)S 149 x(licensed)S 150 x(OpenVMS)S
150 x(Cluster)S 148 x(con\211gu)S 2 x(ra-)S 3600 X 548 y(tion)S 186 x
(wit)S -2 x(hout)S 187 x(restrictions.)S 308 x(The)S 187 x F39(HARDW)S
-9 x(ARE)S 186 x(REQUIR)S -2 x(E-)S 3600 X 548 y(MENTS)S 164 x F38(section)S
165 x(of)S 164 x(this)S 164 x(produ)S 2 x(ct')S -9 x(s)S 165 x(Software)S
164 x(Product)S 165 x(De-)S 3600 X 548 y(scription)S 217 x(detail)S
216 x(any)S 217 x(special)S 217 x(hardware)S 218 x(required)S 218 x
(by)S 217 x(this)S 3600 X 548 y(produc)S 2 x(t.)S 3600 X 896 y(OpenVMS)S
175 x(Cluster)S 173 x(con\211g)S 2 x(urations)S 174 x(are)S 175 x(fully)S
172 x(descr)S 2 x(ibed)S 174 x(in)S 3600 X 548 y(the)S 230 x(Compaq)S
150 x(OpenVMS)S 151 x(Cluster)S 229 x(Software)S 230 x(Product)S 230 x
(De-)S 3600 X 548 y(scription)S 105 x(\(SPD)S 105 x(29.78.xx\))S 106 x
(and)S 105 x(include)S 106 x(CI,)S 103 x(Ethernet,)S 115 x(DSSI,)S 3600 X
548 y(FDDI,)S 148 x(SCSI,)S 148 x(and)S 151 x(Mixed)S 150 x(Interconnect)S
150 x(con\211gu)S 2 x(rations.)S 3600 X 897 y F39(OpenVMS)S 151 x(T)S
-42 x(ailoring:)S 3600 X 896 y F38(For)S 207 x(OpenVMS)S 207 x(V)S -34 x
(AX)S 206 x(systems,)S 221 x(the)S 206 x(following)S 205 x(OpenVM)S
2 x(S)S 3600 X 548 y(classes)S 185 x(are)S 184 x(required)S 186 x(for)S
184 x(the)S 184 x(full)S 183 x(use)S 184 x(of)S 184 x(the)S 184 x(features)S
185 x(of)S 3600 X 548 y(this)S 149 x(layered)S 150 x(prod)S 2 x(uct:)S
3600 X 897 y(\201)S 441 x(OpenVMS)S 150 x(Required)S 151 x(Save)S 150 x
(Set)S 3600 X 797 y(\201)S 441 x(Program)S 2 x(ming)S 150 x(Support)S
3600 X 897 y(For)S 246 x(more)S 246 x(information)S 245 x(on)S 246 x
(OpenVMS)S 246 x(classes)S 246 x(and)S 246 x(tai-)S 3600 X 547 y(loring,)S
290 x(refer)S 263 x(to)S 263 x(the)S 262 x(OpenVMS)S 263 x(Operating)S
263 x(System)S 263 x(for)S 3600 X 548 y(V)S -33 x(AX)S 279 x(and)S 279 x
(Alpha)S 280 x(Software)S 279 x(Product)S 280 x(Description)S 278 x
(\(SPD)S 3600 X 548 y(25.01.xx\).)S 3600 19629 XY F40(OPTIONAL)S 148 x
(SOFTW)S -25 x(ARE)S 3600 X 896 y F38(In)S 127 x(order)S 128 x(to)S
127 x(use)S 127 x(the)S 127 x(following)S 126 x(Compaq)S 128 x(COBOL)S
127 x(for)S 127 x(Open-)S 3600 X 548 y(VMS)S 162 x(V)S -33 x(AX)S 162 x
(features,)S 166 x(the)S 162 x(use)S 162 x(of)S 162 x(the)S 162 x(Compaq)S
163 x(Langua)S 2 x(ge-)S 3600 X 548 y(Sensitive)S 149 x(Editor/Source)S
151 x(Code)S 150 x(Analyzer)S 150 x(is)S 149 x(required:)S 3600 X 897 y
(\201)S 441 x(/DESIGN)S 148 x(quali\211er)S 3600 X 797 y(\201)S 441 x
(/ANAL)S -34 x(YSIS_DA)S -33 x(T)S -34 x(A)S 150 x(quali\211er)S 3600 X
797 y(\201)S 441 x(Compaq)S 150 x(Langu)S 2 x(age-Sens)S 2 x(iti)S -2 x
(ve)S 150 x(Editor)S 150 x(componen)S 2 x(t)S 3600 X 897 y(Note:)S 277 x
(The)S 188 x(Compaq)S 190 x(Langua)S 2 x(ge-Sensitive)S 189 x(Editor/Source)S
3600 X 548 y(Code)S 235 x(Analyzer)S 235 x(is)S 234 x(available)S 235 x
(separately)S 235 x(or)S 235 x(in)S 234 x(Compaq)S 3600 X 547 y(DECset.)S
257 x(Please)S 170 x(refer)S 169 x(to)S 169 x(SPD)S 169 x(27.07.xx)S
170 x(for)S 169 x(ordering)S 170 x(in-)S 3600 X 548 y(formation.)S 3600 28147 XY
F40(Compaq)S 181 x(COBOL)S 181 x(for)S 182 x(OpenVMS)S 183 x(V)S -34 x
(AX)S 182 x(Data)S 3600 X 548 y(Manipulation)S 149 x(Language)S 150 x
(Features)S 151 x(Require:)S 3600 29641 XY F38(\201)S 441 x(Oracle)S
149 x(CODASYL)S 149 x(DBMS)S 3600 X 797 y(\201)S 441 x(Oracle)S 149 x
(CDD/Repository)S 3600 31933 XY F40(Compaq)S 156 x(COBOL)S 156 x(for)S
158 x(OpenVMS)S 158 x(V)S -34 x(AX)S 157 x(COPY)S 157 x(FROM)S 3600 X
548 y(DICTIO)S -2 x(NAR)S -17 x(Y)S 149 x(Feature)S 151 x(Requires:)S
3600 33427 XY F38(\201)S 441 x(Oracle)S 149 x(CDD/Repository)S 15854 4834 XY
F40(GROWTH)S 149 x(CONSI)S -2 x(DERA)S -34 x(TIONS)S 15854 5742 XY F38
(The)S 184 x(minimum)S 185 x(hardware)S 2 x(/software)S 183 x(requirem)S
2 x(ents)S 184 x(for)S 184 x(any)S 15854 X 548 y(future)S 159 x(version)S
159 x(of)S 158 x(this)S 158 x(product)S 159 x(may)S 159 x(be)S 159 x
(dif)S -9 x(ferent)S 159 x(from)S 158 x(the)S 15854 X 548 y(requirem)S
2 x(ents)S 149 x(for)S 150 x(the)S 150 x(current)S 150 x(version.)S
15854 8343 XY F40(DISTRIB)S -2 x(UTION)S 148 x(MEDIA)S 15854 9251 XY
F38(The)S 153 x(software)S 153 x(binaries)S 154 x(and)S 153 x(docum)S
2 x(entation)S 153 x(are)S 154 x(available)S 15854 X 548 y(on)S 150 x
(various)S 150 x(CD\203ROM)S 149 x(distributions:)S 15854 10707 XY(\201)S
441 x F39(OpenVMS)S 110 x(V)S -25 x(AX)S 109 x(Software)S 109 x(Layered)S
110 x(Produc)S 2 x(ts)S 108 x(Library)S F38(\202)S 16452 X 548 y(This)S
218 x(of)S -9 x(fering)S 219 x(includes)S 218 x(the)S 218 x(OpenVMS)S
219 x(V)S -33 x(AX)S 218 x(Layered)S 16452 X 548 y(Product)S 150 x(software)S
150 x(binaries.)S 199 x(\(QA\2035FW8A\203)S 2 x(A8\))S 15854 X 808 y
(\201)S 441 x F39(OpenVMS)S 137 x(V)S -25 x(AX)S 137 x(Online)S 135 x
(Documen)S 2 x(tation)S 135 x(Library)S F38(\202)S 2 x(This)S 16452 X
548 y(of)S -8 x(fering)S 229 x(includes)S 229 x(the)S 229 x(docum)S
2 x(entation)S 229 x(for)S 229 x(the)S 229 x(Open-)S 16452 X 548 y(VMS)S
150 x(V)S -33 x(AX)S 149 x(Layere)S 2 x(d)S 149 x(Produc)S 2 x(ts.)S
198 x(\(QA\203VYR8A\203G8\))S 15854 X 808 y(\201)S 441 x F39(OpenVMS)S
199 x(V)S -24 x(AX)S 198 x(Software)S 199 x(Layered)S 200 x(Products)S
200 x(Library)S 16452 X 548 y(Package)S 183 x F38(\203)S 182 x(This)S
182 x(of)S -8 x(fering)S 182 x(contains)S 183 x(both)S 182 x(the)S 182 x
(software)S 16452 X 547 y(binaries)S 188 x(and)S 188 x(docume)S 2 x
(ntation)S 187 x(for)S 188 x(the)S 187 x(OpenVMS)S 189 x(V)S -33 x(AX)S
16452 X 548 y(Layered)S 151 x(Products.)S 200 x(\(QA\2035G88A\203H8\))S
15854 17664 XY F40(SOFTW)S -25 x(ARE)S 149 x(W)S -24 x(ARRA)S -2 x(NTY)S
15854 18572 XY F38(This)S 227 x(software)S 226 x(is)S 227 x(provided)S
227 x(by)S 227 x(Compaq)S 228 x(with)S 226 x(a)S 227 x(90)S 227 x(day)S
15854 X 548 y(conforma)S 2 x(nce)S 120 x(warranty)S 121 x(in)S 120 x
(accordan)S 2 x(ce)S 120 x(with)S 119 x(Compaq)S 121 x(war-)S 15854 X
548 y(ranty)S 150 x(terms)S 150 x(applicable)S 150 x(to)S 149 x(the)S
150 x(license)S 150 x(purchase)S 2 x(.)S 15854 21173 XY F40(ORDERIN)S
-2 x(G)S 149 x(INFORMA)S -34 x(TION)S 15854 22081 XY F39(Compaq)S 151 x
(COBOL)S 149 x(for)S 149 x(OpenVMS)S 151 x(V)S -25 x(AX)S 150 x(Systems)S
15854 22988 XY F38(Software)S 150 x(Licenses:)S 200 x(QL-099A*-*)S 2 x
(*)S 15854 X 559 y(Software)S 150 x(Documentation)S 150 x(\(Hard)S 150 x
(Copy\):)S 200 x(QA-099AA-GZ)S 15854 X 559 y(Software)S 150 x(Product)S
150 x(Services:)S 200 x(QT)S -25 x(-099A*-*)S 2 x(*)S 15854 25014 XY
(*)S 424 x(Denotes)S 152 x(variant)S 153 x(\211elds.)S 207 x(For)S 153 x
(additional)S 152 x(information)S 152 x(on)S 16452 X 548 y(available)S
165 x(licenses,)S 169 x(services,)S 169 x(and)S 166 x(media,)S 170 x
(refer)S 165 x(to)S 165 x(the)S 16452 X 548 y(appropr)S 2 x(iate)S 149 x
(price)S 150 x(book.)S 15854 27615 XY F40(SOFTW)S -25 x(ARE)S 149 x
(PRODUCT)S 148 x(SER)S -8 x(VICES)S 15854 28523 XY F38(A)S 134 x(variety)S
133 x(of)S 134 x(service)S 134 x(options)S 134 x(are)S 134 x(available)S
134 x(from)S 134 x(Compaq.)S 15854 X 548 y(For)S 129 x(more)S 129 x
(information,)S 133 x(contact)S 128 x(your)S 129 x(local)S 128 x(Compaq)S
130 x(of)S -9 x(\211ce.)S 15854 29979 XY(The)S 243 x(previous)S 244 x
(information)S 242 x(is)S 243 x(valid)S 242 x(at)S 242 x(time)S 243 x
(of)S 242 x(release.)S 15854 X 548 y(Please)S 197 x(contact)S 197 x
(your)S 198 x(local)S 196 x(Compaq)S 198 x(of)S -8 x(\211ce)S 197 x
(for)S 197 x(the)S 197 x(most)S 15854 X 548 y(up-to-da)S 2 x(te)S 149 x
(information.)S 15854 31982 XY(\251)S 150 x(2002)S 150 x(Compaq)S 151 x
(Information)S 150 x(T)S -50 x(echnologies)S 151 x(Group,)S 150 x(L.P)S
-58 x(.)S 15854 32890 XY(The)S 204 x(Compaq)S 205 x(logo,)S 217 x(AlphaServer)S
-23 x(,)S 217 x(OpenVMS,)S 204 x(and)S 205 x(V)S -33 x(AX)S 15854 X
548 y(are)S 249 x(tradema)S 2 x(rks)S 249 x(of)S 248 x(Compaq)S 249 x
(Information)S 249 x(T)S -50 x(echno)S 2 x(logies)S 15854 X 548 y(Group,)S
116 x(L.P)S -58 x(.)S 107 x(in)S 106 x(the)S 108 x(U.S.)S 106 x(and/or)S
108 x(other)S 107 x(countries.)S 186 x(UNIX)S 106 x(and)S 15854 X 548 y
(X/Open)S 167 x(are)S 167 x(registered)S 168 x(tradema)S 2 x(rks)S 167 x
(of)S 166 x(The)S 167 x(Open)S 168 x(Group)S 15854 X 548 y(in)S 131 x
(the)S 131 x(United)S 131 x(States)S 130 x(and)S 132 x(other)S 132 x
(countries.)S 193 x(All)S 131 x(other)S 131 x(prod-)S 15854 X 548 y
(uct)S 118 x(names)S 119 x(mentioned)S 119 x(herein)S 119 x(may)S 119 x
(be)S 118 x(trademar)S 2 x(ks)S 118 x(of)S 118 x(their)S 15854 X 548 y
(respective)S 150 x(comp)S 2 x(anies.)S 15132 38868 XY F40(3)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%+ Helvetica-Oblique
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (4) 4
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 3002 XY F40(Compaq)S 149 x(COBOL)S 148 x(V)S -25 x(ersion)S
150 x(5.7A)S 150 x(for)S 150 x(OpenVMS)S 149 x(V)S -33 x(AX)S 23947 X
(SPD)S 149 x(25.04.33)S 3600 4835 XY F38(Con\211dential)S 286 x(computer)S
287 x(software.)S 606 x(V)S -33 x(alid)S 285 x(license)S 286 x(from)S
3600 X 548 y(Compaq)S 125 x(required)S 125 x(for)S 124 x(possession,)S
130 x(use,)S 129 x(or)S 124 x(copying.)S 191 x(Con-)S 3600 X 548 y(sistent)S
146 x(with)S 146 x(F)S -25 x(AR)S 146 x(12.21)S -32 x(1)S 146 x(and)S
148 x(12.212,)S 147 x(Comme)S 2 x(rcial)S 146 x(Com-)S 3600 X 548 y
(puter)S 100 x(Software,)S 110 x(Computer)S 101 x(Software)S 99 x(Docume)S
2 x(ntation,)S 109 x(and)S 3600 X 548 y(T)S -50 x(echnical)S 119 x(Data)S
117 x(for)S 118 x(Comme)S 2 x(rcial)S 117 x(Items)S 118 x(are)S 119 x
(licensed)S 119 x(to)S 117 x(the)S 3600 X 548 y(U.S.)S 166 x(Governme)S
2 x(nt)S 167 x(under)S 168 x(vendor)S 18 x(')S -8 x(s)S 167 x(standard)S
168 x(comme)S 2 x(rcial)S 3600 X 548 y(license.)S 3600 X 896 y(None)S
158 x(of)S 158 x(Compaq,)S 161 x(Hewlett-Packard)S 158 x(Company)S 159 x
(\("HP"\))S 159 x(or)S 3600 X 548 y(any)S 216 x(other)S 216 x(direct)S
216 x(or)S 216 x(indirect)S 216 x(subsidiary)S 216 x(of)S 216 x(HP)S
215 x(shall)S 215 x(be)S 15854 5383 XY(liable)S 164 x(for)S 165 x(technical)S
165 x(or)S 165 x(editorial)S 164 x(erro)S 2 x(rs)S 165 x(or)S 165 x
(omissions)S 166 x(con-)S 15854 X 548 y(tained)S 159 x(herein.)S 229 x
(The)S 159 x(information)S 160 x(in)S 159 x(this)S 158 x(docum)S 2 x
(ent)S 159 x(is)S 158 x(pro-)S 15854 X 548 y(vided)S 133 x("as)S 132 x
(is")S 133 x(wit)S -2 x(hout)S 133 x(warranty)S 133 x(of)S 132 x(any)S
133 x(kind)S 132 x(and)S 133 x(is)S 132 x(subject)S 15854 X 548 y(to)S
185 x(change)S 186 x(without)S 185 x(notice.)S 305 x(The)S 186 x(warranties)S
185 x(for)S 185 x(Compaq)S 15854 X 548 y(or)S 147 x(HP)S 147 x(products)S
148 x(are)S 147 x(set)S 147 x(forth)S 147 x(in)S 146 x(the)S 147 x(express)S
148 x(limited)S 146 x(war-)S 15854 X 548 y(ranty)S 115 x(statements)S
114 x(accom)S 2 x(panying)S 115 x(such)S 114 x(produ)S 2 x(cts.)S 187 x
(Nothing)S 15854 X 548 y(herein)S 125 x(should)S 124 x(be)S 125 x(construed)S
125 x(as)S 124 x(constituting)S 123 x(an)S 125 x(additional)S 15854 X
548 y(warranty)S -32 x(.)S 15132 38868 XY F40(4)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Trailer
%%Pages: 4
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica Helvetica-Bold
%%+ Helvetica-Oblique
%%DocumentNeededFonts: Helvetica Helvetica-Bold
%%+ Helvetica-Oblique
%%DocumentProcessColors: Black
%%DocumentCustomColors: (BLACK)
%%CMYKCustomColor: 0.0 0.0 0.0 1.0 (BLACK)
%
DVC$PSJob restore
end %DEC_DVC$dict
end %Color5044Dict
%
%%EOF
