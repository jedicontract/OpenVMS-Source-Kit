

DEC/EDI 

Installation



DEC/EDI V3.2 



AA-Q8WTF-TE 

January, 1998



1994, 1998
The following are trademarks of Digital Equipment Corporation:
DEC, DEC/EDI, DECforms, DIGITAL, MAILbus, OpenVMS, PATHWORKS, VAX,  and the DIGITAL logo. 

Adobe is a registered  trademark of Adobe Systems Incorporated
AIX and IBM are registered trademarks and AS/400 is a trademark of International Business Machines 
Corporation. 
BT is a registered trademark of British Telecommunications plc.
HP and HP-UX are registered trademarks of Hewlett-Packard Company.
INFORMIX is a registered trademark of Informix Software, Inc. 
InstallShield is a registered trademark of InstallShield Corporation.
INTERSOLV is a registered trademark of  INTERSOLV, Inc. 
MS MS-DOS and Windows are registered trademarks, and Windows 95 and Windows NT are trademarks, of 
Microsoft Corporation. 
ObjectBroker is a registered trademark of BEA.
Oracle is a  registered trademark of Oracle Corporation. 
SAP is a registered trademark of SAP AG.
Sun and Solaris are registered trademarks of Sun Microsystems Inc.
UNIX is a registered trademark in the United States and other countries licensed exclusively through X/Open 
Company Ltd. 
All other trademarks not listed above are acknowledged as the the property of their respective holders.
Preface

Purpose

For DEC/EDI Version 3.2

This book describes how to install the following DEC/EDI components:

•	Server

•	Application Client

•	Message Updates

•	Cockpit

•	CommandCenter

Enables you to perform basic system configuration, to ensure that DEC/EDI 
is installed and configured correctly, and can communicate with other 
DEC//EDI components installed within the same network.

Audience

This document is for anyone who wants to install, configure or support a 
DEC/EDI installation.The audience for this book may be described in terms 
the activities  required for a successful installation and basic configuration 
of a DEC/EDI system. These activities may be performed by one or more 
people within your organization.

Software 
Installation 

System Managers and Administrators who are responsible for installing 
DEC/EDI and its related components on the required operating system.

Network 
Configuration 

Network administrators who are responsible for performing any network 
configuration required to enable DEC/EDI components located within the 
same network to communicate with one another. 

Database 
Administration 

Database administrators who are responsible for setting up the required user 
accounts, access rights or ODBC drivers for the database used by the 
DEC/EDI software. For detailed configuration of DEC/EDI and its external 
communications components please refer to the DEC/EDI: User's Guides 
(Digital UNIX and Open VMS)

Structure

•	Part 1 - describes the preparation necessary before starting installation.

•	Part 2 - describes network configuration

•	Part 3 - describes database installation and configuration

•	Part 4 - covers the Client and Server software installation

•	Part 5 - describes basic system verification

•	Part 6 - provides a set of appendices giving installation examples and a 
listing of the files installed.

How to Use this Book

This book details the preparation, installation, post-installation and basic 
configuration tasks that must be completed in order to successfully install 
the DEC/EDI software components on the supported hardware and software 
platforms. The book also provides sample installation logs and screen 
captures for your guidance during the installation process. An existing user 
of the DEC/EDI product wishing to upgrade or migrate to this version of 
DEC/EDI, must read the chapter on upgrading and migration. 

Completion of all tasks stipulated is essential to successful upgrading or 
migration from a previous version of DEC/EDI. The book is organized to 
enable easy location of information relating to the installation activities for 
the required DEC/EDI configuration. 

Read Part I of this book from start to finish, and then read the sections that 
relate to the required DEC/EDI configuration.

DEC/EDI Documentation

This is one of a set of DEC/EDI books. The complete list is as follows:

•	DEC/EDI: Introduction

 This book introduces general EDI concepts, and Digital's EDI system, 
DEC/EDI. It describes the main components of the DEC/EDI system, 
and how business documents are processed and communicated to trading 
partners. The book seeks to establish the concepts and terms used by 
DEC/EDI. These are also summarized in a glossary.

 You are strongly recommended to become familiar with the material in 
this book before proceeding to install or use DEC/EDI.

•	DEC/EDI: Installation

 This book describes how to install the DEC/EDI software, how to 
perform basic system configuration and how to verify such an 
installation. It describes how to install the Application Client, Server, 
Cockpit and CommandCenter components.

•	DEC/EDI: Application Development

 This book describes the Application Client interfaces and the means of 
connecting business applications to the Application Client. It also details 
the creation and deployment of mapping tables as part of the process of 
integrating applications with DEC/EDI. 

•	DEC/EDI: User's Guides (Digital UNIX and Open VMS)

 These guides contain information on setting up and operating DEC/EDI 
systems. They also contain information covering configuration, 
maintenance and problem solving. 

 The term User's Guides is used throughout this book to refer to the 
following books which are provided along with the DEC/EDI Server 
they describe.

Digital UNIX

 DEC/EDI: UNIX User Support Manual

OpenVMS

 DEC/EDI: OpenVMS User Support Manual - Volume 1

 DEC/EDI: OpenVMS User Support Manual - Volume 2

•	Release Notes

 Further to the above, each software kit contains a set of release notes 
applicable to that software. These release notes contain information 
about known product problems (with workarounds where appropriate) 
and any operational tips or hints not provided as part of the above 
documentation set. You are strongly recommended to review these 
release notes before installing the software. Refer to the appropriate 
installation guide for information on how to locate the release notes.

•	On-line Documentation

 Comprehensive on-line documentation is supplied with the DEC/EDI 
software: for example, on-line help libraries and UNIX man page help 
information. In addition the DEC/EDI Cockpit and CommandCenter kits 
contains the DEC/EDI: Error Messages Help Library. This contains all 
error messages the product may log along with a description of why the 
message occurred and what to do about it. It is provided in MS-Windows 
help library format. In addition, the CommandCenter CD-ROM provides 
on-line versions of all DEC/EDI books in Adobe Acrobat format.

DEC/EDI InfoCenter

For further information on Digital's EDI and Electronic Commerce 
Solutions and Services, please visit the EDI InfoCenter on the World Wide 
Web. The location is:

http://www.digital.com/edi/

Related Third Party Documentation

Refer to the documentation provided with third-party products for 
installation and configuration details.

Typographical Conventions

Some information within this guide is specific to the database product you 
are using in conjunction with DEC/EDI. The following conventions are used 
to indicate such text:

Oracle7

This indicates the adjoining paragraph contains information specific to 
running DEC/EDI with the Oracle7 database.

OnLine

This indicates the adjoining paragraph contains information specific to 
running DEC/EDI with the INFORMIX-OnLine database.

OnLine...

This indicates the start of several paragraphs of information specific to 
running DEC/EDI with the INFORMIX-OnLine database.

...OnLine

This indicates the last of several paragraphs of information specific to 
running DEC/EDI with the INFORMIX-OnLine database.

Similar conventions are used to indicate text specific to other components. 
For example: 

•	Rdb refers to the Oracle® Rdb™ database.

•	V2.1A refers to Cockpit Version 2.1A

•	V3.1A refers to Cockpit Version 3.1A.
Chapter 1   Preparing to Install DEC/EDI

This chapter describes what actions are necessary prior to installation of 
DEC/EDI. 

Overview

Before installing DEC/EDI there are a number of things which need to be 
determined about your system, and the configuration in which you intend to 
run DEC/EDI. 

It is not necessary to know everything about all the systems on which you 
will be using DEC/EDI at this stage, as you may add further components or 
systems at a later date.

DEC/EDI System Configuration

The collection of systems within the same network, on which DEC/EDI and 
its components are installed, is known as the DEC/EDI system 
configuration.

The different parts are described on the following pages.

Server

The Server acts as a communications gateway, providing EDI mapping, 
translation and communications services for one or more Application Client 
systems. You may have one or more Server systems within your DEC/EDI 
system configuration.

A typical system configuration may have one Server for live EDI 
transactions, and another for backup or development use.

Application Client

The Application Client provides a file based interface to your business 
application, and may operate either via a command line or script- based 
interface, or via API calls directly from the business application. One or 
more Application Clients may communicate with the Server. The 
Application Client may reside on the same system as the Server, or may be 
on another system within the same network. 

A typical system may have many Application Clients communicating with a 
Server.

Product Installation Documentation

Installation instructions are provided in the documentation associated with 
each product described in this chapter. DEC/EDI product documentation is 
described in DEC/EDI Documentation on page -xv of the Preface.

DEC/EDI User Interfaces

Cockpit

The Cockpit is a monitoring and basic audit administration tool which runs 
on a PC connected to the Server. The Cockpit can be used to monitor 
multiple Servers simultaneously. Access controls enable you to restrict the 
data which may be either viewed or modified by a particular user of the 
Cockpit.

A typical system may have multiple Cockpit installations for a number of 
users, each responsible for monitoring a particular set of business 
applications.

CommandCenter

The CommandCenter includes the Cockpit plus the ability to define 
Mapping Tables for integrating your business applications. The 
CommandCenter runs on a PC connected to the Server. For DIGITAL UNIX 
servers, the CommandCenter also includes a suite of applications for 
configuring and managing the Server. The CommandCenter may be used to 
manage one or more Servers simultaneously.

A typical system may have multiple CommandCenter installations for a 
number of users, each responsible for integrating a particular set of business 
applications, or for configuring and managing one or more Servers.

DEC/EDI INTERCHANGE

For OpenVMS servers, the INTERCHANGE user interface provides 
commands for configuring and managing the Server, and for monitoring 
EDI transactions. The INTERCHANGE user interface runs on the same 
system as the Server.

FileBridge UI

For OpenVMS servers, the FileBridge user interface provides the facility to 
develop Mapping Tables for integrating your Business Applications, and for 
tracking mapping activities. The FileBridge development user interface runs 
on any OpenVMS system connected to the Server. The FileBridge tracking 
interface runs on the same system as the Server

Establishing the Configuration of Your System

DEC/EDI supports a number of different system configurations, and you 
must determine the desired system configuration before proceeding with the 
installation of DEC/EDI and its components.

The following section describes the supported configuration options, and 
directs you to the relevant parts of the DEC/EDI documentation set that 
describe the installation of those options.

Supported Configurations

This section describes the supported configurations and interconnection 
options between the various components of DEC/EDI.

Single Node System

Your business application runs on the same node as the Server, or you have a 
custom module which is responsible for transferring files to and from your 
business application. Your business application uses either the Application 
Client interface or one of the supported legacy interfaces (where available) 
to connect to the Server.

The following figure shows a typical single node system configuration:

Figure 1-1	Single Node System

Multi-node Client/Server System

Your business application runs on a separate node from the Server and uses 
the Application Client interface to connect to the Server.

The following figure shows a typical multi-node Client/Server system:

Figure 1-2	Multi-node Client/Server system:

DEC/EDI V1.3 Application and Server System

Your business application runs on a remote VAX system using either the 
DEC/EDI V1.3 data label API or DEC/EDI FileBridge, and is connected to 
the Server on OpenVMS using DECnet or DECnet/Plus.

The following figure shows a typical V1.3 system connected to a DEC/EDI 
Version 3.2 Server on OpenVMS:

Figure 1-3	Remote V1.3 Application and Server

Cockpit and CommandCenter

In addition, you may install the Cockpit and CommandCenter GUI 
components on one or more PCs within the same network. A separate 
license is required for each PC on which the Cockpit or CommandCenter is 
installed.

You may use the Cockpit and CommandCenter to monitor and configure 
one or more Server systems.

The following figure shows a typical configuration with several Cockpit 
installations and a CommandCenter installation communicating with 
multiple Servers:

Figure 1-4	Cockpit and CommandCenter Configuration

Server Configuration

This section describes the components that you need to install on the 
designated Server node.

Network Interface

The network interface provides the means to exchange files and data 
between the Application Client, Cockpit or CommandCenter and the Server. 
The Server can support multiple simultaneous connections using any of the 
available network interfaces.



A network interface is required even on a single node system, to 
support interprocess communication between the Application Client and the 
Server.

OpenVMS			

On an OpenVMS Server, you must select one or more of the following 
Network interfaces:

ObjectBroker 
over DECnet

ObjectBroker must be installed and the OpenVMS system must be 
configured to support either DECnet or DECnet/OSI (DECnet Plus).  

ObjectBroker 
over TCP/IP

ObjectBroker must be installed and the OpenVMS system must be 
configured with a TCP/IP implementation that is compatible with 
ObjectBroker.  

TCP/IP only

The OpenVMS system must have DEC TCP/IP Services installed and 
configured.  

If you are using the Server to support remote DEC/EDI V1.3 applications, 
then you must have one of the following communications protocols installed 
and configured:

DECnet

DECnet must also be installed on the remote application node.

DECnet/OSI 
(DECnet Plus)

DECnet/OSI must also be installed on the remote application node.

DIGITAL UNIX

On a DIGITAL UNIX Server, you must select one of the following Network 
interfaces:

ObjectBroker 
over TCP/IP

ObjectBroker must be installed and the DIGITAL UNIX system must be 
configured with the TCP/IP implementation supplied with DIGITAL UNIX.  

TCP/IP only

The DIGITAL UNIX system must be configured with the TCP/IP 
implementation supplied with DIGITAL UNIX.  

Database

The database provides the means of auditing application files, documents 
and transmission files processed by the Server system. On DIGITAL UNIX, 
the database additionally provides the means of storing the Server 
configuration details.



 Except for V1.3 installations, you do not need to install any database 
components on remote Application Client nodes.

OpenVMS

On an OpenVMS Server the following database components are required:

ORACLE Rdb

You need to have a minimum of the run-time components licensed and 
installed.  

ORACLE 
SQL/Services 
for Rdb

This is required if you intend to use the Cockpit or CommandCenter to 
access the Server.  

DIGITAL UNIX

On a DIGITAL UNIX Server you need to select one of the following 
database options:

ORACLE Rdb

You need to have a minimum of the run-time components licensed and 
installed, along with ORACLE SQL/Services to support the Cockpit and 
CommandCenter. 

ORACLE 7

You need to install ORACLE 7, and the required components to support the 
Cockpit and CommandCenter. 

Informix Online

You need to install Informix Online, and the required components to support 
the Cockpit and CommandCenter. 

Server Software

OpenVMS

On OpenVMS, the VMSINSTAL command is used to install DEC/EDI from 
the supplied media. To install the Server, you must select the server 
installation option.

The Server installation includes support for translation of ANSI X12, TDCC 
(UCS/WINS), EDIFACT, ODETTE and TRADACOMS standards, and 
industry-specific and trading partner specific variations of those standards. 

DIGITAL UNIX

On DIGITAL UNIX, the setld command is used to install DEC/EDI from 
the supplied media. You may select specific subsets to install, depending on 
the communications and translation options you require from the following:

X12

This includes support for translation of ANSI X12 and TDCC (UCS/WINS) 
transactions, and industry-specific and trading partner specific variations.

EDIFACT

This includes support for translation of UN EDIFACT and ODETTE 
messages, and industry-specific and trading partner specific variations.

TRADACOMS

This includes support for translation of TRADACOMS messages, and 
industry-specific and trading partner specific variations. 

Communication Options

Refer to   Server Communications Options on page 1-18 for details of 
options available.

DEC/EDI Message Updates

After installation of the Server system, you must install the versions of EDI 
standard dictionaries and messages that you require.

You are recommended to install at least the following standard and version, 
which is required for performing the basic system configuration tests 
described in this book:

EDIFACT Version 90.1  

Application Client Configuration

This section describes the components you need to install on any 
Application Client nodes.

Network Interface

The network interface provides the means to exchange files and data 
between the Application Client and the designated Server node. The same 
network interface must be installed and configured on both the application 
client and server systems.

OpenVMS			

On an OpenVMS Application Client node, you must select one of the 
following Network interfaces:

ObjectBroker 
over DECnet

ObjectBroker must be installed and the OpenVMS system must be 
configured to support either DECnet or DECnet/OSI (DECnet Plus). 

ObjectBroker 
over TCP/IP

ObjectBroker must be installed and the OpenVMS system must be 
configured with a TCP/IP implementation that is compatible with 
ObjectBroker. 

TCP/IP only

The OpenVMS system must have DEC TCP/IP Services installed and 
configured. 

OpenVMS and DEC/EDI V1.3

If you are also using DEC/EDI V1.3 applications on the application client 
node, then you must have one of the following communications protocols 
installed and configured:

DECnet

DECnet must also be installed on the Server node. The Server must be an 
OpenVMS Server.

DECnet/OSI 
(DECnet Plus)

DECnet/OSI must also be installed on the Server node. The Server must be 
an OpenVMS Server.

DIGITAL UNIX, Sun Solaris,  HP-UX

On a DIGITAL UNIX, Sun Solaris or HP-UX Application Client node, you 
must select one of the following network interfaces:

TCP/IP only

The system must be configured with the TCP/IP implementation supplied 
with the operating system. 

ObjectBroker 
over TCP/IP

ObjectBroker must be installed and the system must be configured with the 
TCP/IP implementation supplied with the operating system. 

Application Client Software

OpenVMS

On OpenVMS, the VMSINSTAL command is used to install DEC/EDI from 
the supplied media. 

The installation procedure provides the option to install only the Application 
Client components.  

DIGITAL UNIX, Sun Solaris,  HP-UX          

On DIGITAL UNIX, Sun Solaris and HP-UX, the setld utility, which is 
provided with the installation kit where required, is used to install DEC/EDI 
from the supplied media. You must install the application client subsets.  

Cockpit and CommandCenter Configuration

This section describes the components that you need to install on any PCs 
running Cockpit or CommandCenter.

The CommandCenter software includes the Cockpit, so you do not 
additionally need to install the Cockpit on those systems.

Network Interface

The network interface provides the means to exchange files and data 
between the Cockpit or CommandCenter and the Server.

The same network interface must be installed and configured on both the PC 
and server systems, however as the server can support multiple 
simultaneous transport types, you can use more than one type of network if 
needed.

Windows 3.1x, Windows 95, Windows NT

On Windows 3.1, Windows for Workgroups 3.11, Windows 95 or Windows 
NT you must select one of the following Network Interfaces:

* ObjectBroker 
over DECnet

ObjectBroker must be installed on the PC, along with PATHWORKS to 
support either DECnet or DECnet/OSI (DECnet Plus). 

*Does not support Windows 95.

ObjectBroker 
over TCP/IP

ObjectBroker must be installed on the PC, along with a TCP/IP 
implementation that is compatible with ObjectBroker. 

TCP/IP only

The PC must be configured with a supported TCP/IP implementation.

Database Configuration (ODBC)

The Cockpit and CommandCenter use Open Database Connectivity 
(ODBC) to communicate with the DEC/EDI database on the Server.

The Cockpit and CommandCenter may connect to multiple Servers, each of 
which may be using a different database. You must install the appropriate 
ODBC drivers and related software to support connection to the DEC/EDI 
database on each of the Server systems.

OpenVMS

For connection to an OpenVMS Server, you must install the ODBC driver 
onto the PC.

ORACLE ODBC 
Driver for Rdb

You need to install the appropriate driver for the operating system you are 
running on the PC. 

DIGITAL UNIX

For connection to a DIGITAL UNIX Server, you must install one of the 
following ODBC drivers, and related connectivity software on the PC:

ORACLE ODBC 
Driver for Rdb

You need to install the appropriate driver for the operating system you are 
running on the PC. 

ORACLE 7

You need to install ORACLE TCP/IP protocol adapter, ORACLE 
SQL*NET and the ORACLE 7 ODBC driver onto the PC. 

Informix Online

For Windows 3.1 and Windows for Workgroups 3.11, you need to install 
Informix I*Net and the INTERSOLV ODBC driver for Informix Online.

For Windows 95 and Windows NT, you need to install either Informix CLI, 
which includes the ODBC drivers, or Informix I*net and the INTERSOLV 
ODBC driver for Informix Online.

Software Installation

Cockpit

The Cockpit is supplied as a set of floppy disks, one set for Windows 3.1 
and Windows for Workgroups 3.11, the other set for Windows 95 and 
Windows NT. 

CommandCenter

The CommandCenter is provided on CD-ROM, and contains two kits, one 
for Windows 3.1 and Windows for Workgroups 3.11, the other for Windows 
95 and Windows NT.

If you are installing on Windows 3.1 or Windows for Workgroups 3.11, you 
additionally need to install Win32s, which is provided on the CD-ROM.

The CommandCenter CD-ROM also contains the DEC/EDI documentation 
suite in Adobe Acrobat format, and the free Acrobat reader software. 

You are recommended to install the online documentation for ease of 
reference.



Server Communications Options

The Server supports a number of communications options, and you must 
install any pre-requisite hardware or software prior to installing DEC/EDI.

After installation, you must configure the communications components to 
enable DEC/EDI to communicate with your trading partners.

This section outlines the communications options that are available:

OpenVMS

On an OpenVMS Server, all communications options are installed by the 
Server installation procedure. Each communications option, apart from the 
Import/Export gateway, requires a license for its use. 

The following communications options are available:

X.400 
Communication

You need to install DECnet/OSI, MAILbus 400 and DEC X.500 Directory 
Services. 

OFTP 
Communication

You need to install DECnet/OSI, and X.25 connector services. 

Bisynchronous  
Communication

For Bisynchronous communications, you need to install the CLEO 3780Plus 
product together with SYNCcable+ and a compatible modem.

X.25 VAN 
Communication

For X.25 VAN communications with the TRADANET VAN, you need to 
install DECnet/OSI, and X.25 connector services. 

Import/Export 
Communication

No additional licensing or software is required for use of the Import/Export 
gateway.

DIGITAL UNIX

On a DIGITAL UNIX Server, you may select specific communications 
subsets to install. Each communications option, apart from the 
Import/Export gateway, requires a license for its use. 

The following communications options are available:

X.400 
Communication

You need to install DECnet/OSI, MAILbus 400 and DEC X.500 Directory 
Services. 

OFTP 
Communication

You need to install DECnet/OSI, and X.25 connector services. 

Bisynchronous 
Communication

For Bisynchronous communications, you need to install the CLEO 3780Plus 
product together with SYNCcable+ and a compatible modem.

X.25 VAN 
Communication

For X.25 VAN communications with the TRADANET VAN, you need to 
install DECnet/OSI, and X.25 connector services. 

Internet 
SMTP/MIME 
Communication

For Internet SMTP/MIME Communication, the sendmail function provided 
with DIGITAL UNIX must be installed, along with connection to a wide 
area network or Internet Service Provider. 

You may additionally wish to install a third party security or encryption 
product if communication over a public access network.

Import/Export 
Communication

Zero additional licensing or software is required for use of the 
Import/Export gateway.
Chapter 2   Installation Activities

This chapter provides pre-installation information.

Introduction

The following pages show the DEC/EDI Component Subsets. You should 
read through these pages and note which of the optional elements are 
required for your particular installation. 

This information will be required during the Installation process described 
in Part 4.

1.	Setting up the Server, and any Application Clients local to it (See Setting 
Up the Server and Local Application Clients on page 2-3).

2.	Setting up any remote Application Clients, that is, those on different 
nodes to the Server (See Setting Up Remote Application Clients on page 
2-4).

3.	Setting up any CommandCenter installations (See Setting Up the 
CommandCenter on page 2-5).

4.	Setting up any Cockpit installations (See Setting Up the Cockpit on page 
2-6).

5.	Using the CommandCenter or INTERCHANGE (OpenVMS) to 
configure the Server (See Configuring the Server on page 2-7).



Figure 2-1	DEC/EDI System Components

The first four tasks establish the DEC/EDI system as a network of 
components. These activities are done only once, or repeated infrequently, 
for example, when you want to bring another node into the system.

The final task deals with the detailed configuration of the Server. This may 
need more regular maintenance, for example, as you add new Trading 
Partners and applications.

These separate stages are outlined in the following sections. The individual 
activities are listed for each task, along with the DEC/EDI book where the 
activity is described in more detail.

The majority of these activities need to be performed in all DEC/EDI 
systems where normal routing is used. Where either bypass or application-
to-application routing is deployed, some of the Server configuration 
activities may not be needed, such as Translation services, and in the case of 
application-to-application routing, the Communications services. 

Likewise, the activities to install and configure remote Application Clients 
are needed only where you have a need to use such clients (as opposed to 
Application Clients located on the same node as the Server).

Setting Up the Server and Local Application 
Clients

This task covers the physical installation of the DEC/EDI software and any 
necessary prerequisite software. It also covers the initial configuration of the 
software sufficient to create the database, and configure the Network 
Interface for use by DEC/EDI. 

The following list summarizes the steps to be performed on the Server node, 
the details are provided in the chapters detailed below:

Chapter 5 UNIX - Installation of DEC/EDI Server and Application Client 

Chapter 6 OpenVMS - Installation of Server and Client

Chapter 9 Installing DEC/EDI Cockpit and CommandCenter

1.	Install DEC/EDI product licenses,  including CommandCenter license

2.	Install and verify prerequisite software

3.	(UNIX only) Create a decedi account for DEC/EDI to use 

4.	Install and verify DEC/EDI software

5.	Create the database

6.	Register DEC/EDI with Network Interface

7.	Configure Network Interface for remote access by Application Clients, 
Cockpit and CommandCenter

8.	Create user accounts for database access by users of Cockpit and 
CommandCenter

9.	Grant access to database for user accounts

10.	(Oracle® Rdb™ only) Configure SQL/Services™ for database access by 
users of Cockpit and CommandCenter



Setting Up Remote Application Clients

This task covers the physical installation and configuration of any DEC/EDI 
Application Clients on nodes remote from the Server. 

The following list summarizes the steps to be performed on each separate 
node running an Application Client, the details are provided in the chapters 
detailed below:

Chapter 5 UNIX - Installation of DEC/EDI Server and Application Client 

Chapter 6 OpenVMS - Installation of Server and Client

The procedure is defined in the following list:

1.	Install and verify prerequisite software

2.	(UNIX only) Create a decedi account for DEC/EDI to use

3.	Install and verify DEC/EDI software

4.	Register DEC/EDI with Network Interface

5.	Configure Network Interface for remote access by DEC/EDI Server

Setting Up the CommandCenter

This task covers the installation and configuration of the DEC/EDI 
CommandCenter on a PC. Because the CommandCenter also contains a 
copy of the DEC/EDI Cockpit, this task also covers that component where it 
is installed as part of the CommandCenter. 

The following activities need to be performed on each PC where the 
CommandCenter is to be used, the details are provided in the chapter 
detailed below:

Chapter 9 Installing DEC/EDI Cockpit and CommandCenter

1.	Install and verify prerequisite software

2.	Install CommandCenter software

3.	Define the main Server that CommandCenter is to access

4.	Verify CommandCenter link to the Server

Setting Up the Cockpit

This task covers the installation and configuration of the DEC/EDI Cockpit 
on a PC where it is installed separately from the CommandCenter. The 
following activities need to be performed on each PC where the Cockpit is 
to be used, the details are provided in the chapter detailed below:

Chapter 9 Installing DEC/EDI Cockpit and CommandCenter

1.	Install and verify prerequisite software

2.	Install Cockpit software

3.	Define the main Server that Cockpit is to access

4.	Verify Cockpit link to the Server



Configuring the Server

This task covers the configuration of the DEC/EDI Server and the 
development and integration of the business applications that post data to, 
and fetch data from the Server.  The following activities need to be 
performed on each Server and the details are provided in the chapters 
detailed below:

Chapter 5 UNIX - Installation of DEC/EDI Server and Application Client 

Chapter 6 OpenVMS - Installation of Server and Client

1.	Select which Translation and Communications Services are to run

2.	Define the EDI documents to be exchanged with your Trading Partners

3.	Develop or modify your business applications

4.	Develop Mapping Tables for your business applications

5.	Register your business applications with DEC/EDI, and the nodes on 
which they run

6.	Configure your communications links

7.	Define your Trading Partner agreements

8.	Start the DEC/EDI system
Chapter 3   Configuring the Network 
Interfaces

This chapter describes how to configure the DEC/EDI network interfaces.

Introduction

The DEC/EDI Server can support connection from local and remote 
application clients, and remote PC's running the DEC/EDI Cockpit or 
CommandCenter. The following network interfaces are supported for 
connection to the DEC/EDI Server:

DIGITAL UNIX 
and OpenVMS 
Server

•	TCP/IP Network Interface

 The network interface is provided through a direct TCP/IP connection 
between the client and the server. This supports Windows 3.xx, 95 and 
NT.

•	ObjectBroker over TCP/IP

 ObjectBroker is used to provide the network interface, using TCP/IP as 
the underlying network protocol.

OpenVMS Server 
Only

•	ObjectBroker over DECnet

 ObjectBroker is used to provide the network interface, using DECnet as 
the underlying network protocol. This supports Windows 3.xx and 
Windows NT.

The DEC/EDI Server may be configured to support simultaneous 
connections using one or more of these network interfaces.

You must install and configure the DEC/EDI Server network interface prior 
to configuring the client interfaces.

Configuring the DEC/EDI Server

This section describes how to configure the network interface on the 
DEC/EDI Server, and how to set up the local application client to use the 
network interface.

TCP/IP Network Interface

This section describes how to configure the TCP/IP network interface on the 
DEC/EDI Server.

Pre-Configuration tasks

Prior to configuring the TCP/IP network interface, you should verify that the 
TCP/IP protocol is installed and is functioning correctly.

DIGITAL UNIX 

For example, this may be achieved by verifying that the host name of the 
computer you are installing on is registered with a local domain name 
server:

# nslookup `hostname` 

Server:  dnsserver.company.com

Address:  1.20.30.4



Name:    mynode.company.com

Address:  1.20.30.124

Alternatively, you may use the ping command to verify that the computer 
may connect to another node within the same network. Press CTRL+C to 
stop the ping command.

# /sbin/ping clientnode.company.com

PING clientnode.company.com (1.20.30.101): 56 data bytes

64 bytes from 1.20.30.101: icmp_seq=0 ttl=128 time=0 ms

64 bytes from 1.20.30.101: icmp_seq=1 ttl=128 time=0 ms

<CTRL-C>



----1.20.30.101 PING Statistics----

3 packets transmitted, 3 packets received, 0% packet loss

round-trip (ms)  min/avg/max = 0/0/1 ms

#

OpenVMS

The TCP/IP protocol must be provided by DIGITAL TCP/IP Services.

You may verify that this has been installed correctly by running the 
Installation Verification Procedure for DIGITAL TCP/IP Services:

$ @sys$test:ucx$ivp.com



%%% UCX IVP: started %%%



UDP/IP test started at 18-JUL-1997 11:33:27.63

UDP/IP test ended at 18-JUL-1997 11:33:39.12

UDP/IP transferred successfully in 11 seconds 4198400 bytes



TCP/IP test started at 18-JUL-1997 11:33:39.17

TCP/IP test ended at 18-JUL-1997 11:33:48.04

TCP/IP transferred successfully in 8 seconds 4198400 bytes



RAW_IP test started at 18-JUL-1997 11:33:48.08

RAW_IP test ended at 18-JUL-1997 11:33:49.25

RAW_IP transferred successfully in 1 seconds 251000 bytes



%%% UCX IVP: completed successfully %%%

Configuration Tasks

DIGITAL UNIX	

The DEC/EDI Server configuration consists of the following steps:

Step 1:    From the root account, use the decedi_config command, and select 
the option to configure the TCP/IP Client-Server link.

This procedure assigns the TCP/IP port numbers on which the 
DEC/EDI Services will listen for and handle incoming client 
requests. This assigns unique port numbers for the DEC/EDI 
Services within the TCP/IP services file /etc/services.

# /usr/sbin/decedi_config



1.      Configure TCP/IP Client-Server Link

2.      Configure ObjectBroker

3.      Configure database

4.      Modify database users

5.      Dump database

6.      Load database

7.      Manage database

8.      Exit Configuration

Select option [8] :1



Configuring the TCP/IP Client-Server link

******************************************************

** Assigned 5150/tcp in /etc/services for decedi_csf. 

**       (DEC/EDI Post-Fetch service)               **

**                                                  **

** This port number must match that used on any remote

** DEC/EDI client system.                           **

**                                                  **

******************************************************

******************************************************

** Assigned 5151/tcp in /etc/services for decedi_cst. 

**       (DEC/EDI Track document service)           **

**                                                  **

** This port number must match that used on any remote

** DEC/EDI client system.                           **

**                                                  **

******************************************************

******************************************************

** Assigned 5152/tcp in /etc/services for decedi_csg. 

**       (DEC/EDI GUI service)                      **

**                                                  **

** This port number must match that used on any remote

** DEC/EDI Cockpit or CommandCenter installations.  **

**                                                  **

******************************************************

 To supply the server node information, create a file:

      /var/adm/decedi/decedi_servers.dat

 Use the template, 
/var/adm/decedi/decedi_servers.template .



Step 2:    Note down the TCP/IP port numbers that have been assigned to 
each of the DEC/EDI Services in Step 1 using the following table:  

Table 3-1	 DEC/EDI Services TCP/IP Port Numbers

Purpose

DEC/EDI Post/Fetch Server

DEC/EDI Tracking Server

DEC/EDI GUI Server

Service Name

decedi_csf

decedi_cst

decedi_csg

Enter your Port 
Number here

You may need to specify these values when configuring any remote 
application clients or setting up any Cockpit or CommandCenter 
installations to use the TCP/IP network interface. 



The same TCP/IP port numbers must be used for all DEC/EDI client 
and server installations within the same network.

Step 3:    You are asked whether you wish to use the TCP/IP link for local 
client access, for example:

Do you wish to use TCP/IP for local client access ? [y or n] y

TCP/IP Configuration Complete

Press <Return> to continue.

If you confirm this option, then the file 
/var/adm/decedi/decedi_servers.dat is automatically created with 
the following value:

? LOCAL

This ensures that any local applications will use the local DEC/EDI 
Server to handle client requests.

For further information on specifying the use of another DEC/EDI 
Server node to handle client requests, refer to Configuring the 
DEC/EDI Application Client on page 3-14

OpenVMS

Configure the local application client to use the TCP/IP network link, using 
the DEC/EDI Client/Server configuration utility as follows:

$ @decedi$configure_client_server

DEC/EDI V3.2 DEC/EDI Client/Server Configuration Utility

Copyright © 1995,1996,1997 DIGITAL Equipment Corporation. All 
rights reserved.



1.	Configure ObjectBroker

2.	Configure TCP/IP



Enter client/server interface type [2] : 2

Adding decedi_csf at port 5150

Adding decedi_cst at port 5151

Adding decedi_csg at port 5152



Server information is held in the user editable file:

DECEDI$DATA:DECEDI_SERVERS.DAT

Do you wish to use TCP/IP for local client access ? (Y/N) : y 
TCP/IP Configuration completed.



Post-Configuration Tasks

Once you have configured the network interface, you may start up 
DEC/EDI. This enables the DEC/EDI Cockpit and CommandCenter, 
running on a suitably configured PC, to access the DEC/EDI Server.

DIGITAL UNIX

If you have not yet configured DEC/EDI using the CommandCenter, then 
you need to start up just the GUI port server. 

To start up the GUI port server only:

# /usr/sbin/decedi_start_gui_server

Once you have configured the DEC/EDI Server, you may start up the 
DEC/EDI Server in full, using the following command:

# /usr/sbin/decedi_start

OpenVMS

If you have not yet configured the DEC/EDI Server, then you should 
perform a minimal start-up:

$ @SYS$STARTUP:DECEDI$STARTUP

Once you have configured the DEC/EDI Server, you may start up the 
DEC/EDI Server in full, using the following command:

$ @SYS$STARTUP:DECEDI$STARTUP FULL

For Further Information

There are a number of logical names or environment variables which may be 
used to tune the behaviour of the TCP/IP network interface, and to monitor 
the network traffic and processes.

For further information on the use of these environment variables and 
logical names, refer to the DEC/EDI: User's Guides (DIGITAL UNIX and 
Open VMS). 

TCP/IP Port Server Monitoring Tools

There is now an additional tool which allows the TCP/IP Port server and its 
child process to be monitored and  which can tell the Port Server to re-cache 
the control environment variables whilst it is running. This  is useful when 
you want to change the tracing behaviour or increase the number of 
maximum child processes. 

The tool names are:

OpenVMS 

@DECEDI$TOOLS:DECEDI$PS_CONTROL

DIGITAL Unix 

decedi_ps_control

Example:

# /usr/sbin/decedi_ps_control show

DEC/EDI Port Server Environment

===============================

Hostname = mynode.company.com

Tracing = none

Service decedi_csg AVAILABLE

Maximum Servers = 3

Service decedi_cst SHUTTING DOWN

Maximum Servers = 3

Service decedi_csf SHUTTING DOWN

Maximum Servers = 3

Further Details

These are provided in the DEC/EDI: User's Guides (DIGITAL UNIX and 
Open VMS), , and also through the DIGITAL UNIX man pages. 

ObjectBroker

This section describes how to configure the ObjectBroker network interface 
on the DEC/EDI Server. This includes configuration of ObjectBroker using 
the following network protocols:

•	ObjectBroker over TCP/IP

•	ObjectBroker over DECnet

Pre-Configuration tasks

Prior to configuring ObjectBroker, you should verify that ObjectBroker is 
installed and is functioning correctly.

If you have more than one network protocol installed on your Server system, 
for example both DECnet and TCP/IP, you should ensure that ObjectBroker 
is at minimum configured to use the network protocol that you intend to use 
to communicate with any remote client installations.

DIGITAL UNIX

The DEC/EDI Server must use the TCP/IP network protocol as the 
underlying transport for ObjectBroker.

OpenVMS

The DEC/EDI Server may use either the TCP/IP or DECnet network 
protocol as the underlying transport for ObjectBroker, or both. If you 
specify both DECnet and TCP/IP, the DEC/EDI Server may support remote 
connections over either protocol.

DIGITAL UNIX 

From the root account, determine the name of the ObjectBroker base subset 
that is installed on your system, as follows:

# setld -i | grep OBBBASE | grep installed

OBBBASEDEV260   installed       ObjectBroker Base System

Run the Installation Verification Procedure, and ensure that it completes 
successfully:

# setld -v OBBBASEDEV260

ObjectBroker Base System (OBBBASEDEV260)

   
**************************************************************

     About to execute the Installation Verification Procedure.

     If error messages are displayed, take any necessary 
corrective

     action and then re-run the ivp.

      Verification will take between 1 and 3 minutes depending       
on CPU type.

   
**************************************************************

   
**************************************************************

             Beginning Installation Verification Procedure for

             ObjectBroker for DIGITAL UNIX, V2.6-07

             Copyright (c)  1991, 1996 by

             DIGITAL Equipment Corporation, Maynard, MA

             All Rights reserved.

   
**************************************************************

Starting the ObjectBroker agent...

Agent on node: mynode.company.com

  Version:      OBB V2.6-07

  Username:     root

  Time Started: Fri Jun  6 08:43:45 1997

  Pid:          528

  Log Filename: /tmp/obbagent.log

  Attributes:   Debug Server Startup

                AuthrWOAuthn is ENABLED

                Active transports are TCPIP

                OrbV12 style Agent

 ObjectBroker Network Tester for version OBB V2.6-07

 Client side tests will be performed.

 Time:               Wed Jul 23 09:19:45 1997

 Tests:              All

 Transport selected: TCP (TCPIP)

 Server nodename:    local node

 Connection id:      none

 Message size:       512

 Num. Sends:         1

 1. Loading the transport

    Please verify the local nodename and local node address.

      mynode.company.com (1.2.30.123)

 2. Connecting to the server.

    No connection id; connect test will not be performed.

 The test completed successfully.

   
**************************************************************

       Installation Verification Procedure successfully 
completed.

   
**************************************************************

Verify that the active transports specified for the ObjectBroker agent include 
TCP/IP.

OpenVMS

From a suitably privileged account, run the ObjectBroker Installation 
Verification Procedure and verify that it completes successfully:

$ @SYS$TEST:OBB$IVP

**************************************************************

       Beginning Installation Verification Procedure for

            ObjectBroker for OpenVMS V2.6-08

**************************************************************

Showing the ObjectBroker agent attributes...

Agent on node: SERVER

  Version:      OBB V2.6-08

  Username:     system

  Time Started: Wed Jul 16 15:51:42 1997

  Pid:          0000021D

  Log Filename: SYS$SPECIFIC:[OBB.SCRATCH.SARK]OBB$AGENT.LOG;7

  Attributes:   AuthrWOAuthn is ENABLED

                Active transports are DECnet, TCPIP

                OrbV12 style Agent

Showing the ObjectBroker default configuration...

 Configuration  "DECnet and TCP/IP Configuration"  (Current)

 -------------------------------------------------------

  Authentication

    AuthrWOAuthn: Enabled

    Package:      Trusted

     Description: Trusted authentication package

  Network

    Package:      DECnet

     Description: DECnet transport package

    Package:      TCP

     Description: TCP/IP transport package

  Logging Level                  None

  Repository Cache Size          5

  Maximum Active Servers         0

Verify that the active transports specified for the ObjectBroker agent include 
those required for connection from any remote client installations.

Configuration Tasks

DIGITAL UNIX	

The DEC/EDI Server configuration consists of the following steps:

Step 1:    From the root account, use the decedi_config command, and select 
the option to configure ObjectBroker.

# decedi_config



1.      Configure TCP/IP Client-Server Link

2.      Configure ObjectBroker

3.      Configure database

4.      Modify database users

5.      Dump database

6.      Load database

7.      Manage database

8.      Exit Configuration



Select option [8] : 2

Step 2:    You are asked to enter the name of your DEC/EDI Server. At this 
stage, you are setting up the Server node, so select the default 
answer of OBB_LOCAL, that ObjectBroker interprets as the current 
node:

Configuring ObjectBroker



Enter the name of the DEC/EDI Server [OBB_LOCAL] :

...creating repository

...registering servers

...creating client object

...creating context object

ObjectBroker Configuration Complete

Press <Return> to continue.

You are recommended to use the TCP/IP network interface for 
local client access, though you may elect to use ObjectBroker if 
you prefer.

If you do not wish to use the ObjectBroker network interface for 
local client access, then you must configure the TCP/IP network 
interface, as described in TCP/IP Network Interface on page 3-2, 
after you have configured ObjectBroker.

OpenVMS

The DEC/EDI Server configuration consists of the following steps:

Step 1:    From a suitably privileged account, invoke the DEC/EDI 
Client/Server configuration utility:

@DECEDI$TOOLS:DECEDI$CONFIGURE_CLIENT_SERVER.COM



DEC/EDI V3.2 DEC/EDI Client/Server Configuration 
Utility

Copyright (C) 1995,1996,1997 DIGITAL Equipment 
Corporation. All rights reserved.

    

    1. Configure ObjectBroker

    2. Configure TCP/IP

Enter client/server interface type [2] : 1

                                  WARNING

                                  -------

This utility shuts down and restarts ObjectBroker 
during the configuration.

Do you wish to continue ? (Y/N) : y

Configuring ObjectBroker...

Step 2:    You are asked whether you wish to use ObjectBroker for local 
client access. 

DECnet

For DECnet, you must use ObjectBroker for local client access.

TCP/IP

For TCP/IP, if you are using DIGITAL TCP/IP Services, then you 
are recommended to use the TCP/IP network interface for local 
client access, as described in TCP/IP Network Interface on page 
3-2.

Do you wish to use ObjectBroker for local client access 
? (Y/N) : n

ObjectBroker Configuration completed.

Post-Configuration Tasks

Once you have configured the DEC/EDI Server, you must configure 
ObjectBroker to enable access from any remote application clients and PCs 
running Cockpit or CommandCenter.

The steps you need to take are described in Configuring the DEC/EDI 
Application Client on page 3-14 and  on page 3-31.

Once you have configured ObjectBroker for remote access, you may start up 
the DEC/EDI Server as follows:

DIGITAL UNIX

# /usr/sbin/decedi_start

OpenVMS

$ @SYS$STARTUP:DECEDI$STARTUP

This enables the DEC/EDI Cockpit and CommandCenter, running on a 
suitably configured PC, to access the DEC/EDI Server.

For Further Information

For information on ObjectBroker security, refer to the DEC/EDI: User's 
Guides (DIGITAL UNIX and Open VMS).

For information on installing and configuring ObjectBroker, refer to the 
ObjectBroker Installation and Configuration book.

Configuring the DEC/EDI Application Client

This section describes how to configure the network interface on the 
DEC/EDI Application Client, along with any steps that need to be 
performed on the DEC/EDI Server, to enable connection from the remote 
application client.

The DEC/EDI Application Client may be configured to use either one of the 
TCP/IP network interface or the ObjectBroker network interface, though not 
at the same time.

If you are able to upgrade your client and server installations, you are 
recommended to use the TCP/IP network interface, though you may 
continue to use ObjectBroker if you wish.

TCP/IP Network Interface

This section describes how to configure the TCP/IP network interface on the 
DEC/EDI Application Client. 

The TCP/IP network interface may be used for connection from the 
following DEC/EDI Application Client releases:

•	DEC/EDI for DIGITAL UNIX, Version 3.2

•	DEC/EDI for OpenVMS VAX, Version 3.2

•	DEC/EDI for OpenVMS Alpha, Version 3.2

•	DEC/EDI Application Client for Sun Solaris, Version 3.2

•	DEC/EDI Application Client for HP-UX, Version 3.2

The Application Client may be configured to connect to one or more 
DEC/EDI Server systems, selected by application name, or to a default 
DEC/EDI Server.

In addition, one or more failover DEC/EDI Servers may be specified to 
handle client requests, if the primary DEC/EDI Server is not currently 
available.

Pre-Configuration tasks

Prior to configuring the TCP/IP network interface, you should verify that the 
TCP/IP protocol is installed and is functioning correctly.

Step 1:    Ensure that any DEC/EDI Servers that will service requests from 
the application client have been configured to support the TCP/IP 
network interface as described in  TCP/IP Network Interface on 
page 3-2.

Step 2:    Verify that the TCP/IP connection between the application client 
and the server nodes is functioning correctly. For example, this 
may be achieved by using the ping command as follows:

DIGITAL UNIX, 
Sun Solaris,    
HP-UX

# ping myserver.company.com

PING myserver.company.com (1.20.30.101): 56 data bytes

64 bytes from 1.20.30.101: icmp_seq=0 ttl=128 time=0 ms

64 bytes from 1.20.30.101: icmp_seq=1 ttl=128 time=0 ms

<CTRL-C>



----1.20.30.101 PING Statistics----

3 packets transmitted, 3 packets received, 0% packet 
loss

round-trip (ms)  min/avg/max = 0/0/1 ms

OpenVMS

$ UCX

UCX> PING myserver.company.com

%UCX-I-LOOPACT, myserver.company.com is alive

Configuration Tasks

DIGITAL UNIX, 
Sun Solaris,     
HP-UX	

The DEC/EDI Application Client configuration consists of the following 
steps:

Step 1:    From the root account, use the decedi_config command, and select 
the option to configure the TCP/IP Client-Server link.

This procedure sets up the TCP/IP port numbers that are used on 
the DEC/EDI Server for handling incoming client requests. The 
port numbers are defined within the TCP/IP services file 
/etc/services.

DIGITAL UNIX 

# /usr/sbin/decedi_config

Sun Solaris,     
HP-UX

# /usr/bin/decedi_config



1.      Configure TCP/IP Client-Server Link

2.      Configure ObjectBroker

3.      Exit Configuration

Select option [3] :1

Configuring the TCP/IP Client-Server link



******************************************************

** Assigned 5150/tcp in /etc/services for decedi_csf. 

**       (DEC/EDI Post-Fetch service)               **

**                                                  **

** This port number must match that used on the remote

** DEC/EDI server system.                           **

**                                                  **

******************************************************

******************************************************

** Assigned 5151/tcp in /etc/services for decedi_cst. 

**       (DEC/EDI Track document service)           **

**                                                  **

** This port number must match that used on the remote

** DEC/EDI server system.                           **

**                                                  **

******************************************************

 To supply the server node information, create a file:

      /var/adm/decedi/decedi_servers.dat

 Use the template, 
/var/adm/decedi/decedi_servers.template .

Press <Return> to continue.

Step 2:    The TCP/IP port numbers specified on the client must match those  
defined on the DEC/EDI Server. Compare these with the values 
you have noted in the table  DEC/EDI Services TCP/IP Port 
Numbers on page 3-4. 

If the TCP/IP port numbers differ, edit the values stored in the file 
/etc/services, so that the same values are used for all client and 
server installations within the same network.

Step 3:    Specify the default DEC/EDI Server that should be used for 
handling requests from the application client.

Copy the template file /var/adm/decedi/decedi_servers.template to 
the file /var/adm/decedi/decedi_servers.dat, as follows:

# cp /var/adm/decedi/decedi_servers.template \

  /var/adm/decedi/decedi_servers.dat

Edit the file /var/adm/decedi/decedi_servers.dat and add the 
following line to the end of the file. For example, if the server node 
name is myserver.company.com.

* myserver.company.com ! default DEC/EDI Server

OpenVMS

The DEC/EDI Application Client configuration consists of the following 
steps:

Step 1:    Configure the application client to use the TCP/IP network link, 
using the DEC/EDI Client/Server configuration utility as follows:

$ @DECEDI$TOOLS:DECEDI$CONFIGURE_CLIENT_SERVER.COM



DEC/EDI V3.2 Client/Server Configuration Utility

Copyright (C) 1995,1996,1997 DIGITAL Equipment 
Corporation. All rights reserved

1.   Configure ObjectBroker

2    Configure TCP/IP

Enter client/server interface type [2]: 2

Server information is held in user editable file:

    DECEDI$DATA:DECEDI_SERVERS.DAT

This can be created from the template file:

    DECEDI$DATA:DECEDI_SERVERS.TEMPLATE

Do you wish to use TCP/IP for local client access? 
(Y/N): y

TCP/IP configuration completed.

Step 2:    Specify the default DEC/EDI Server that should be used for 
handling requests from the application client.

Copy the DEC/EDI Servers template file 
DECEDI$DATA:DECEDI_SERVERS.TEMPLATE, to the file 
DECEDI$DATA:DECEDI_SERVERS.DAT, as follows:

$ COPY DECEDI$DATA:DECEDI_SERVERS.TEMPLATE -

   DECEDI$DATA:DECEDI_SERVERS.DAT

Edit the file DECEDI$DATA:DECEDI_SERVERS.DAT and add the 
following to the end of the file. For example, if the server node 
name is myserver.company.com.

* myserver.company.com ! default DEC/EDI Server

Post-Configuration Tasks

If you wish, you may add additional DEC/EDI Server definitions and 
specify which application names should access those servers. These must be 
placed within the DEC/EDI Servers definition file prior to the line 
specifying the default DEC/EDI Server.

DIGITAL UNIX

Edit the file /var/adm/decedi/decedi_servers.dat

OpenVMS

Edit the file DECEDI$DATA:DECEDI_SERVERS.DAT

In the following example, the applications DEC-DIRECT-UK-LTD and 
SHINY-NEW-SYSTEMS both use the primary DEC/EDI Server on node 
myserver.com. In the event that the DEC/EDI Server is unavailable, the 
backup DEC/EDI Server on node backup.com is used.

The application JOLLY-OLD-SYSTEMS uses the DEC/EDI Server on node 
edidev as the primary DEC/EDI Server. If this is unavailable, the backup 
server on edidev2 is tried, followed by edidev3.

All other applications in this example use the primary server edigate.com 
and have no backup DEC/EDI Server.

DEC-DIRECT-UK-LTD myserver.com backup.com

SHINY-NEW-SYSTEMS myserver.com backup.com

JOLLY-OLD-SYSTEMS edidev edidev2 edidev3

* edigate.com ! default DEC/EDI Server

For Further Information

There are a number of logical names or environment variables which may be 
used to tune the behaviour of the TCP/IP network interface, and to monitor 
the network traffic and processes.

For further information on the use of these environment variables and 
logical names, refer to the DEC/EDI: User's Guides (DIGITAL UNIX and 
Open VMS).

ObjectBroker

This section describes how to configure the ObjectBroker network interface 
on the DEC/EDI Application Client. 

The ObjectBroker network interface may be used for connection from the 
following DEC/EDI Application Client releases:

•	DEC/EDI for DIGITAL UNIX, Version 3.1 or higher

•	DEC/EDI for OpenVMS VAX, Version 2.1A or higher

•	DEC/EDI for OpenVMS Alpha, Version 2.1A or higher

•	DEC/EDI Application Client for Sun Solaris, Version 3.1 or higher

•	DEC/EDI Application Client for HP-UX, Version 2.1A or higher

In addition, this interface may be used to support earlier releases of the 
DEC/EDI Application Client, including the following:

•	DEC/EDI Application Client for IBM AIX, Version 2.1A

•	DEC/EDI Application Client for IBM AS/400, Version 2.1A

Configuring ObjectBroker for Remote Access

So that the DEC/EDI Server can pass data back to the Application Client, 
ObjectBroker on the Application Client node needs to be configured to 
register the node that is running the DEC/EDI Server.

The precise detail of what you need to do to achieve this depends on what 
security model you have previously selected for ObjectBroker on the 
Application Client node. The DEC/EDI: User's Guides (DIGITAL UNIX 
and Open VMS) provides a short introduction to ObjectBroker security 
models, and how you cope with models other than the NORMAL model. 

This section assumes you are using the NORMAL security model.

Pre-Configuration Tasks

Prior to configuring ObjectBroker, you should verify that ObjectBroker is 
installed and is functioning correctly on both the application client and 
DEC/EDI Server systems.

on the Server

Step 1:    On the DEC/EDI Server node, verify that the ObjectBroker agent 
is running, and make a note of the exact node name as displayed by 
the ObjectBroker agent. You will need this information later when 
configuring the ObjectBroker proxies on the application client 
node.

DIGITAL UNIX

# obbmsho -A

Agent on node: myserver.company.com

  Version:      OBB V2.6-07

  Username:     root

  Time Started: Fri Jun  6 08:43:45 1997

  Pid:          528

  Log Filename: /tmp/obbagent.log

  Attributes:   Debug Server Startup

                AuthrWOAuthn is ENABLED

                Active transports are TCPIP

                OrbV12 style Agent

OpenVMS

$ APPLICATION/BROKER SHOW AGENT

Agent on node: VMSERV

  Version:      OBB V2.7-11

  Username:     system

  Time Started: Tue Jul  1 12:43:01 1997

  Pid:          0000021F

  Log Filename: 
SYS$SPECIFIC:[OBB.SCRATCH.SCARP]OBB$AGENT.LOG;14

  Attributes:   AuthrWOAuthn is DISABLED

                Active transports are DECnet, TCPIP

                OrbV12 style Agent

on the Client

Step 2:    On the DEC/EDI Application Client node, verify that the 
ObjectBroker agent is running, and make a note of the exact node 
name as displayed by the ObjectBroker agent. You will need this 
information later when configuring the ObjectBroker proxies on 
the DEC/EDI Server node.

DIGITAL UNIX, 
Sun Solaris,    
HP-UX

# obbmsho -A

Agent on node: myclient.company.com

  Version:      OBB V2.6-07

  Username:     root

  Time Started: Fri Jun  6 08:43:45 1997

  Pid:          528

  Log Filename: /tmp/obbagent.log

  Attributes:   Debug Server Startup

                AuthrWOAuthn is ENABLED

                Active transports are TCPIP

                OrbV12 style Agent

OpenVMS

$ APPLICATION/BROKER SHOW AGENT

Agent on node: CLIENT

  Version:      OBB V2.7-11

  Username:     system

  Time Started: Tue Jul  1 12:43:01 1997

  Pid:          0000021F

  Log Filename: 
SYS$SPECIFIC:[OBB.SCRATCH.SCARP]OBB$AGENT.LOG;14

  Attributes:   AuthrWOAuthn is DISABLED

                Active transports are DECnet, TCPIP

                OrbV12 style Agent

on the Server

Step 3:    On the DEC/EDI Server node, start up the server side network test:

DIGITAL UNIX

# obbntst -s 

OpenVMS using 
TCP/IP

$ APPLICATION/BROKER

OBB> TEST NETWORK SERVER/TRANSPORT=TCPIP

OpenVMS using 
DECnet

$ APPLICATION/BROKER

OBB> TEST NETWORK SERVER

This displays a connection identifier, which should be specified 
when running the client side network test.

In the following example, the connection identifier is 00000451:

 ObjectBroker Network Tester for version OBB V2.5A-04

 Server side tests will be performed.

 Time:               Thu Jul 24 14:55:02 1997

 Tests:              All

 Transport selected: TCP (TCPIP)

 1. Loading the transport

    Please verify the local nodename and local node 
address.

      ediserv.company.com (1.101.2.34)

 2. Registering on network as server

    Connection identifier:     00000451

 3. Waiting for network events. Please initiate client-
side tests.

    Use the connection identifier shown above when 
starting the client-side.

The server side network test waits until it receives a valid 
connection from a client side network test.

on the Client

Step 4:    On the DEC/EDI Application Client node, run the client side 
network test:

DIGITAL UNIX, 
Sun Solaris,     
HP-UX

# obbntst -c 00000451 -n ediserv.company.com

OpenVMS using 
TCP/IP

$ APPLICATION/BROKER

OBB> TEST NETWORK CLIENT -

  /SERVER=(NODE=ediserv.company.com,CONNECT=00000451)-

  /TRANSPORT=TCPIP

OpenVMS using 
DECnet

$ APPLICATION/BROKER

OBB> TEST NETWORK CLIENT -

  /SERVER=(NODE=VMSERV,CONNECT=00000451)

This connects to the specified server node, and completes the 
network test. Verify that both the client and server network tests 
have completed successfully. For example, the following is 
displayed on the client node:

 ObjectBroker Network Tester for version OBB V2.7-11

 Client side tests will be performed.

 Time:               Thu Jul 24 15:54:37 1997

 Tests:              All

 Transport selected: TCP (TCPIP)

 Server nodename:    MYNODE.COMPANY.COM

 Connection id:      00000451

 Message size:       512

 Num. Sends:         1

 1. Loading the transport

    Please verify the local nodename and local node 
address.

      client.company.com (1.102.3.123)

 2. Connecting to the server.

 3. Sending the message to the specified server.

    001) Send: header=24 bytes; data=512 bytes; 
total=536 bytes.

         Receive: header=24 bytes; data=512 bytes; 
total=536 bytes.

 The test completed successfully.

Configuration Tasks - Server

The following configuration tasks must be performed on the DEC/EDI 
Server node, to enable connection from the DEC/EDI Application Client.

Step 1:    Check that all old methods are stopped by entering:

DIGITAL Unix

# obbmstp

or

OpenVMS

$ APPLICATION/BROKER STOP SERVER

Step 2:    Check you are using the NORMAL security model, by entering:

DIGITAL UNIX

# obbshsec

OpenVMS

$ APPLICATION/BROKER SHOW SECURITY

Step 3:    Check to see what remote nodes are already registered, by 
entering:

DIGITAL UNIX

# obbshpxy

OpenVMS

$ APPLICATION/BROKER SHOW PROXY

Step 4:    If the remote application client node is not already registered, then 
add a proxy to allow any account on the application client node to 
use the decedi account on the Server node. 



Specify the client node name exactly as given by the ObjectBroker 
agent on the application client node. On OpenVMS, if the node name is in 
lower case, specify the node name within quotes.

DIGITAL UNIX

# obbadpxy -h myclient.company.com -u `*' decedi

OpenVMS using 
TCP/IP

$ APPLICATION/BROKER

OBB> ADD PROXY DECEDI-

    /REMOTE_USER=(USER="*",HOST="myclient.company.com")

OpenVMS using 
DECnet

$ APPLICATION/BROKER

OBB> ADD PROXY DECEDI-

    /REMOTE_USER=(USER=*,HOST=MYCLI)

TCP/IP only

If you are using TCP/IP, you are recommended to add proxies for 
both the long and short forms of the application client node name:

# obbadpxy -h myclient.company.com -u `*' decedi

# obbadpxy -h myclient -u `*' decedi

If the application client node name is not registered with your 
domain name server, add the TCP/IP address of the client, along 
with both the long and short forms of the application client node 
name to the TCP/IP hosts file /etc/hosts.

Step 5:    Reset the system context for the ObjectBroker agent, to ensure that 
any changes to the proxy access list become effective.

DIGITAL UNIX

# obbmset -A -C

OpenVMS

$ APPLICATION/BROKER SET AGENT/NEW_CONTEXT

You need to repeat the above steps to enable access from all Application 
Client nodes.

Configuration Tasks - Application Client

The following configuration tasks must be performed on the DEC/EDI 
Application Client node, to enable the DEC/EDI Server to return any 
requested files back to the application client.

Step 1:    From a suitably privileged account, invoke the DEC/EDI 
Application Client configuration utility, to configure the 
ObjectBroker network interface.

DIGITAL UNIX, 
Sun Solaris,    
HP-UX

# decedi_config



1.      Configure TCP/IP Client-Server Link

2.      Configure ObjectBroker

3.      Exit Configuration



Select option [3] : 2

OpenVMS

$ @DECEDI$TOOLS:DECEDI$CONFIGURE_CLIENT.SERVER



DEC/EDI V3.2 Client/Server Configuration Utility



Copyright (C) 1995,1996,1997 DIGITAL Equipment 
Corporation. All rights reserved



1.   Configure ObjectBroker

2    Configure TCP/IP



Enter client/server interface type [2]: 1

all clients

You are asked to enter the name of the DEC/EDI Server. Enter the 
name of your DEC/EDI Server that you have configured in  
Configuration Tasks - Server on page 3-25.

Configuring ObjectBroker



Enter the name of the DEC/EDI Server 

                     [OBB_LOCAL] : myserver.company.com

...creating repository

...registering servers

...creating client object

...creating context object

ObjectBroker Configuration Complete

Press <Return> to continue.

Step 2:    Check you are using the NORMAL security model, by entering:

DIGITAL UNIX, 
Sun Solaris,    
HP-UX

# obbshsec

OpenVMS

$ APPLICATION/BROKER SHOW SECURITY

Step 3:    Check to see what remote nodes are already registered, by 
entering:

DIGITAL UNIX, 
Sun Solaris,     
HP-UX

# obbshpxy

OpenVMS

$ APPLICATION/BROKER SHOW PROXY

Step 4:    Determine or create the user accounts on the application client 
node under which you will run any DEC/EDI applications.

These user accounts must have sufficient privelege to access the 
DEC/EDI software, and to create files in the directory which is 
used for sending to and receiving files from DEC/EDI.

Step 5:    If the remote DEC/EDI Server node is not already registered, then 
add a proxy to allow decedi  account on the DEC/EDI Server 
node to use the user accounts for DEC/EDI applications.



Specify the server node name exactly as given by the ObjectBroker 
agent on the DEC/EDI Server node. On OpenVMS, if the node name is in 
lower case, specify the node name within quotes.

DIGITAL UNIX, 
Sun Solaris,    
HP-UX

# obbadpxy -h myserver.company.com -u decedi myuser

OpenVMS using 
TCP/IP

$ APPLICATION/BROKER

OBB> ADD PROXY MYUSER-

    /REMOTE_USER=(USER="decedi",HOST="myserver")

OpenVMS using 
DECnet

$ APPLICATION/BROKER

OBB> ADD PROXY MYUSER-

    /REMOTE_USER=(USER=DECEDI,HOST=MYCLI)

TCP/IP only

If you are using TCP/IP, you are recommended to add proxies for 
both the long and short forms of the server node name:

# obbadpxy -h myserver.company.com -u decedi myuser

# obbadpxy -h myserver -u decedi myuser

If the server node name is not registered with your domain name 
server, add the TCP/IP address of the server, along with both the 
long and short forms of the server node name to the TCP/IP hosts 
file /etc/hosts.

Step 6:    Reset the system context for the ObjectBroker agent, to ensure that 
any changes to the proxy access list become effective.

DIGITAL UNIX, 
Sun Solaris,    
HP-UX

# obbmset -A -C

OpenVMS

$ APPLICATION/BROKER SET AGENT/NEW_CONTEXT

Step 7:    Verify that the proxies on both the application client and DEC/EDI 
Server nodes are configured correctly, by using the proxy details to 
show the ObjectBroker agent on the remote node.

DIGITAL UNIX 
server

# obbmsho -A -n myclient.company.com

OpenVMS server

$ APPLICATION/BROKER

OBB> SHOW AGENT/NODE=MYCLI

DIGITAL UNIX, 
Sun Solaris,    
HP-UX client

# obbmsho -A -n myserver.company.com

OpenVMS client

$ APPLICATION/BROKER

OBB> SHOW AGENT/NODE="myserver.company.com"

If you receive the following error message, verify that the proxies 
have been configured correctly on the remote node:

OBB_INV_NOTAUTHORIZED (e), Client user is not 
authorized to access server.

The following example shows the expected output from an 
ObjectBroker agent running on the remote node:

# obbmsho -A -n myserver.company.com

Agent on node: myserver.company.com

  Version:      OBB V2.6-07

  Username:     root

  Time Started: Fri Jun  6 08:43:45 1997

  Pid:          528

  Log Filename: /tmp/obbagent.log

  Attributes:   Debug Server Startup

                AuthrWOAuthn is ENABLED

                Active transports are TCPIP

                OrbV12 style Agent

You need to repeat the above steps to enable communication with all 
required DEC/EDI Server nodes.

Post-Configuration Tasks

You should be able to issue the following Application Client command on 
each node where the Application Client is installed. This verifies the 
network link between  the Application Client node and the ObjectBroker 
configuration on the Server. You should be able to issue the following 
command:

DIGITAL UNIX, 
Sun Solaris,    
HP-UX

# trade track TEST -type=document

OpenVMS

$ TRADE TRACK TEST -TYPE=DOCUMENT

This command should produce the following message:

Not authorized to access the EDI Server System

This indicates that the network was correctly able to pass command 
information from the Application Client to the correct ObjectBroker 
function on the DEC/EDI Server. This means that the network is set up 
correctly, and that ObjectBroker on the Server is configured to allow proxy 
access from the Application Client.

If you encounter other errors, refer to the DEC/EDI: User's Guides 
(DIGITAL UNIX and Open VMS).

The not authorized message indicates that you haven't yet registered 
any business applications (in this case TEST) with the DEC/EDI Server. 
Registering business applications with the Server is described the DEC/EDI: 
User's Guides (DIGITAL UNIX and Open VMS).

For Further Information

For information on ObjectBroker security, refer to the DEC/EDI: User's 
Guides (DIGITAL UNIX and Open VMS).

For information on installing and configuring ObjectBroker, refer to the 
ObjectBroker Installation and Configuration book.


Chapter 4   Configuring the Database

This chapter describes the configuration of the database on the Server node 
by the Database Administrator.

Overview

Configuration takes place in two stages. In the first stage, the connectivity 
software which links the Application Client to the Server, or the Cockpit/ 
CommandCenter to the Server is initialized. In the case of the Server this 
phase will also include creating the DEC/EDI database and allowing access 
to it from the CommandCenter. 

The second phase of configuration is the detailed configuration of the Server 
by using the CommandCenter which is described in Chapter 9 Installing 
DEC/EDI Cockpit and CommandCenter. The alternative is to configure 
using INTERCHANGE when installed on OpenVMS servers.

This chapter describes the first of these stages.

Account Privileges

DIGITAL UNIX

Note that many of the activities described in this section that involve 
running decedi_config, assume you have access to the root account on 
the Server node.

Open VMS

You will need an account with full system manager privileges.

Configurations Covered

The following configurations are covered 

•	DIGITAL UNIX Oracle 7 

•	DIGITAL UNIX INFORMIX

•	DIGITAL UNIX Oracle Rdb

•	OpenVMS VAX/Alpha Oracle Rdb

Setting Up Process

The setting up process which happens after the chosen database application 
has been installed, has two parts as shown below:

•	A - Decision process for location of the database

•	B - Creation of the database

A - Deciding Where to Locate the Database

When locating the database it is important that a location with sufficient 
resource is chosen. A badly located database can significantly reduce the 
performance of a Server, meaning you need to consider the disk space and 
room for expansion. Factors that can decrease the performance are further 
detailed later in Performance Limiting Aspects on page 4-8.

Oracle7 

You need to specify a directory location on disk with enough spare disk 
space, use the following formula to calculate the required size:

maximum size = overhead + peak map size + peak doc size 
+ peak comms size + standards size

Where: overhead      = 18MB +(((maximum size -  18MB)* 
3)/10)

peak map size = (peak live maps + peak archive maps)* 
0.003 MB

peak doc size = (peak live docs + peak archive docs) * 
0.0015 MB

peak comms size = (peak live comms + peak archive comms) 
* 0.003 MB

standards size  = number of standards * 5MB

We recommend a minimum of 50MB for the Oracle7 database.

Typical Example

As an example, a user system which processes a 500 maps per weekday, 
generating or consuming 500 EDI documents which in turn go to, or come 
from 100 communications transmission files using two EDI standards, and 
where secondary archiving is done once a week, the calculation is as 
follows. We assume that be the end of the day all live documents are 
processed, so peak live size is peak daily rate, whilst the peak archive size is 
the cumulation of the five-day week's worth of data.

The calculation includes some contingency, so that we double the peak live 
counts in case everything fails due to some disaster and we take a day to fix 
it, and we double the archive size in case we forget one weekend to do the 
secondary archive.

We also double the number of standards we use to cater for near term         
expansion.

So, we end up with a calculation of:

maximum size = 18MB + (((maximum size -18MB) * 3) / 10) +

               (1000 + 5000) * 0.003 MB +

               (1000 + 5000) * 0.0015 MB +

               (200 + 1000) * 0.003 MB

               4 * 5MB;

             = 85 MB (approximately)

Having worked out the size, find a suitable directory, which resides on a disk 
with sufficient free space, and create a database directory for it. Set the 
ownership of this directory to be the main Oracle account. 

The main Oracle account is the account under which this instance of the 
Oracle7 RDBMS software was installed. For standard Oracle installations 
this is oracle by default, or if installed on behalf of another application it 
could be ora<application prefix> , for example orapd1.

Note that the database size can be increased later by adding extra datafiles to 
the relevant tablespaces if a particular tablespace becomes full.

NFS mounted 
disks

DIGITAL does not recommend placing the database for DEC/EDI onto an 
NFS mounted disk.

Access.

The database account needs to have write access to the directory where your 
database is to be created.



INFORMIX OnLine

If you are using INFORMIX® OnLine to provide your database, you need 
to create or specify a raw device for the database to occupy, before you can 
proceed to create the database. Creation of raw devices is a standard UNIX 
system management function. You should refer to your UNIX system 
documentation for more details of creating raw devices. In particular you 
should refer to the disklabel command.

You do need to decide how large to create the raw device, as this affects the 
size of the database and in consequence how much data it can contain. The 
database uses the whole device, destroying any other data on the device. 
When creating the database, you need to specify a device that is at least 40 
Mbytes. However this is a minimum size required to run a Server, and most 
systems will require considerably more disk space. 

It is important to ensure you create a database that is sufficiently large for 
your intended workload. If the database fills up, when the Server is running, 
the Server will fail.

In most DEC/EDI systems, the main consumers of space in the database are 
the various audit trail tables and EDI Standards tables. The following 
formula can be used to calculate the approximate size of database required 
for a specified workload. Note that this is intended as a guide, and actual 
requirements may differ. The value is calculated in MBytes.

DatabaseSize 

= 31 +EDIStandardSize +DocumentSize+TransmissionFileSize

Where:

EDIStandardSize is the amount of space required in the database to store 
EDI Standards information, and can be calculated from the expression:

5 x peak number of EDI standards versions

DocumentSize is the amount of space required in the database to store audit 
trail information about documents. This includes information about 
documents in the current audit trail and in the archive audit trail. This can be 
calculated from the following expression:

0.004 x (peak documents in current system

                     + peak documents in archive system)

TransmissionFileSize is the amount of space required in the database to store 
audit trail information about transmission files. This includes information 
about transmission files in the current audit trail and in the archive audit 
trail. This can be calculated  from the following expression:

0.007 x (peak transmission files in current system

            + peak transmission files in archive system)

Note that in the above equations it is important to calculate based on peak 
amounts for each of the values. This is because the database tables are 
expanded to the peak size used, and do not reduce if data is removed from 
the tables, for example by using the decedi_arch command.

Typical Example

For example, a DEC/EDI system that is to contain 2 EDI Standards, 500 
current documents, 20000 archive documents, 100 current transmission files 
and 4000 archive transmission files, would need a database of 152 Mbytes, 
calculated as follows:

 DatabaseSize = 31 + (5 x 2) + 0.004 x (500 + 20000)

                                    + 0.007 x (100 + 4000)

It should be noted that you should have knowledge of these peak values 
when you did an initial EDI planning exercise. These are the absolute 
maximums you intend your system to cope with. In general there should not 
be much in the current audit trail, as most things get moved to the archive 
audit trail as soon as possible. 

The number of current transmission files is controlled by how regularly 
outbound communications jobs run versus how many transmission files get 
built in that interval. If you have an export job which just runs once a day, 
but you send in 200 documents per hour with a transmission build interval 
of once every 10 minutes then you could expect to get a 144 transmission 
files and 4800 documents in the current audit trail before the export job ran. 

Similarly on inbound, the rate at which transmission files enter the system 
versus how often the Application Clients fetch them will control the amount 
of current documents in the system.

The count of the archive transmission files and documents is the total 
number of documents and transmission files the system is expected to cope 
with between the times that you perform a secondary archive onto tape, 
using the decedi_arch command. 

Using the above example, if you only ran decedi_arch in the above example 
once a week then the archive audit trail needs to cope with 1008 
transmission files, and 33600 documents.

Please note that this does not build in any safety factors for such cases as 
when something does not happen as expected so the actual peak values used 
should always be set higher than those expected.

DIGITAL UNIX Oracle Rdb

If you are using Oracle Rdb to provide your database, you need to specify a 
directory location on a disk with enough spare disk space. For example, 50 
Mbytes of disk space is sufficient to store information for:

Number of documents in the Current Audit Trail

Number of documents in the Archive Audit Trail

Number of transmission files in the Current Audit Trail

Number of transmission files in the Archive Audit Trail

1000

10000

500

5000

If you anticipate the need to store more than this, you should ensure extra 
space is available on the disk on which you locate your database. 

The tables within the database will automatically extend when you store 
more data in them that the original configuration can hold, but performance 
will be reduced the more the database becomes extended.

Performance Limiting Aspects

Disk speed.

The performance of your Server can easily be limited by the speed of access 
to the DEC/EDI database. This means that you should avoid placing the 
database on slow disks.

I/O bottlenecks.

During the software installation, you specified one or more disk locations 
for your store directories. These are directories used to hold the actual 
document and transmission files. By placing the database on a different 
physical disk to those holding store directories, you help to avoid the 
performance of individual disks being a bottleneck on overall system 
performance.

NFS mounted 
disks

DIGITAL does not recommend placing the database for DEC/EDI onto an 
NFS mounted disk.

Access.

The database account needs to have write access to the directory where your 
database is to be created.

OpenVMS Oracle Rdb

If you are on OpenVMS then Oracle Rdb will provide your database, and it 
will be created on the device on which you have elected as DEC/EDI's top 
level directory. The default database is created of approximately 20 Mbytes 
in size which will allow it to hold information for:

Number of documents in the Current Audit Trail

Number of documents in the Archive Audit Trail

Number of transmission files in the Current Audit Trail

Number of transmission files in the Archive Audit Trail

1000

1000

1000

1000

The tables within the database will automatically extend when you store 
more data in them that the original configuration can hold, but performance 
will be reduced the more the database becomes extended.

Should the database become too small or if you wish to move the database  
to another device then a tool, DECEDI$TOOLS:DECEDI$TAILOR.COM, 
is  provided to help you with this.

Performance Limiting Aspects

Disk Speed. 

The performance of your Server can easily be limited by the speed of  access 
to the DEC/EDI database. This means that you should avoid placing the 
database on slow disks.

I/O Bottlenecks. 

During the software installation, you specified one or more disk locations 
for your store directories. These are directories used to hold the actual 
document and transmission files. By placing the database on a different 
physical disk to those holding store directories, you help to avoid the 
performance of individual disks being a bottleneck on overall system 
performance.

NFS Mounted 
Disks

DIGITAL does not recommend placing the database for DEC/EDI onto an 
NFS mounted disk.

Access. 

The database account needs to have write access to the directory where  your 
database is to be created.

B - Creating the Database

•	DIGITAL UNIX Oracle 7 

•	DIGITAL UNIX INFORMIX

•	DIGITAL UNIX Oracle Rdb

•	OpenVMS VAX/Alpha Oracle Rdb

DIGITAL UNIX

All Databases

This task is performed by using the DEC/EDI configuration utility: 
decedi_config. To use this, you need to be logged in to your Server 
under the root account.

Questions, 
Getting Help

If you are unsure about how to reply to any of the questions asked by this 
utility, enter a question mark character <?> followed by <Return>. Help text 
is displayed giving you more information about any choices you can make.

Invoke the configuration utility, and select the option to configure the 
database, as in the following example:

# decedi_config

1. Configure TCP/IP Client-Server Link

2. Configure ObjectBroker

3. Configure database

4. Modify database users

5. Dump database

6. Load database

7. Manage database

8. Exit Configuration

Select Option [8] : 3

You are asked what product is to be used to provide the database, and where 
the database is to be located. The device or directory to contain the database 
must already exist. The location is either a raw device (for INFORMIX 
OnLine), or the name of the file that is to contain the database (for Oracle 
Rdb).

The database creation procedure displays each individual statement 
executed in setting up the database. The database creation procedure may 
take several minutes to complete.

Typical INFORMIX Example

Enter the database to be used (Rdb, Inf, Ora) [Inf] : 
Inf

Enter raw device on which to hold the database [ ] : 
/dev/rre1e

...Creating /usr/informix/etc/onconfig.decedi

...Starting new DEC/EDI database server

Database created.

Database closed.

...

...

Database Configuration Complete

 Typical Oracle7 Example 

Configuring Database

Enter the database to be used (Rdb, Inf, Ora) [Inf] : 
Ora

...Creating /var/adm/decedi/config.dat

Enter Oracle Home directory /usera/oracle] :

Enter DEC/EDI Oracle 7 database location 
[/var/adm/decedi/db] : /userb/oracle/db

...Modifying /etc/oratab

...Modifying /var/adm/decedi/config.dat

Enter DEC/EDI Oracle 7 database size in KB [182671] : 
100000

*******************************************************

Default oracle network templates have been generated

in /userb/oracle/db/. The files being:

      listener.ora

      tnsnav.ora

      tnsnames.ora

These files should be merged with those already on this 
server (in /etc), and those residing on any PC wishing 
to use the CommandCenter or Cockpit to access this 
server.

...Creating /usera/oracle/dbs/initdecedidb.ora

...Creating database /userb/oracle/db

...Loading system tables

...Creating schema

...Storing system version

...Setting DEC/EDI Oracle password.

Database Configuration Complete

Typical Oracle Rdb Example 

Configuring Database

Enter the database to be used (Rdb, Inf, Ora) [Inf] : 
Rdb

Enter Oracle Rdb database location : 
/usr/users/rdbdb/decedi_db.rdb

...Modifying //.dbsrc

...Modifying..

...

...

Database Configuration Complete



OpenVMS

The DEC/EDI database is created during the installation process. 

Typical Oracle Rdb Example

A typical installation detail example is provided below:

===================================================

The following versions of Rdb/VMS are available:

        V7.0-0

* Please enter the Rdb/VMS version to be used by DEC/EDI 
[V7.0-0]:

At this point the installation will list the installed databases. The default is 
selected by pressing <RETURN>, should you need to use one of the 
alternates (when available) enter the version as displayed followed by  
<RETURN>. 

The example continues below assuming acceptance of the default:

Current PROCESS Oracle Rdb environment is version V7.0-0 
(STANDARD)

Current PROCESS SQL environment is version V7.0-0 
(STANDARD)Current PROCESS Rdb/Dispatch environment is 
version V7.0-0 (STANDARD)

Database Version

It is essential that the database version on your system is the same as that 
used by DEC/EDI. 

Use the following command to establish the version currently in use:

$@sys$library:rdbvms_shover

To set the version, use the following command:

$@sys$library:rdbvms_setver

For example, to set the version to V7.0, use the following command:

$@sys$library:rdbvms_setver v70

Migrating the Database

If you are installing DEC/EDI over a previous version then the database 
structure needs migrating to the new structure.

DIGITAL UNIX

After installing DEC/EDI, run decedi_config from the root account. 
Select the option to configure the database. Select the database type being 
used and location of existing database, then select the [m]igrate option. The 
database is migrated to a structure compatible with the current version of the 
Server. 

If the current database is already in a compatible structure (that is, if there 
have not been any database structure changes between the version of the 
Server that was used to create/migrate the database to its current structure 
and the currently installed Server version) then no migration is needed and 
none takes take place. The database is then ready for use by the currently 
installed Server.

OpenVMS

The DEC/EDI database will normally be migrated during the installation 
process. If you are upgrading from DEC/EDI version 2.0 or older, a new 
empty database structure is created and the old version is kept safely. 
Messages similar to those shown below will appear:

Creating new database in DECEDI$TOP:[AUDIT_DB]...

Creating new database in DECEDI$TOP:[ARCHIVE_DB]...

WARNING:

The structure of all mapper databases needs to be 
modified. All previous FileBridge databases and DEC/EDI 
V2.0 mapper databases will need to be migrated before 
using the DEC/EDI V2.1 mapper.

To migrate the live and test databases in FBR$HOME run 
the post-installation task DECEDI$V21_MIGRATE.COM. 
Migration of all local test databases should be done 
using FBR$ARCHIVE.COM.  Read the release notes for 
details.

Execute the actions described in the second half of the Warning message to 
migrate the database if needed.

Creating User Accounts for Database Access

Each PC running either the CommandCenter or the Cockpit accesses the 
DEC/EDI database on the Server via ODBC™ on the PC. This needs to 
happen through an account on the Server. 

You can have a single account for all users of the CommandCenter and the 
Cockpit, or you can have individual accounts for each separate user of either 
PC product.   Having a single account is easier to set up and maintain, and 
though inherently less secure, allows you to be more selective about what 
individual users can access.

DEC/EDI Access Control Editor

This application, which is provided with the CommandCenter/Cockpit, 
enables you to define which users may access which data and the level of 
their access to the CommandCenter. 

DIGITAL UNIX Oracle Rdb and Informix

You create a user account on the Server by using the UNIX adduser utility. 
You should do this from the root account. Note that the account that you 
are creating need not be the same as the one that ObjectBroker uses. This 
means that you can have one account that ObjectBroker uses for proxy 
access to the Server, and multiple separate accounts for individual access to 
the database.

DIGITAL UNIX Oracle7

Oracle7 maintains its own usernames and passwords. It can also support 
server accounts and passwords, but as these apply only when making 
requests from the server, they are of no value to CommandCenter and 
Cockpit users. 

To create Oracle7 accounts, use the decedi_config option described in the 
following section, Granting Database Access to User Accounts. In addition 
to defining the users, you will be prompted for the passswords associated 
with any new users.

When you start any of the CommandCenter editors or the Cockpit, the 
account and password you are asked to specify are those of the user accounts 
you have now created on the Server.

OpenVMS Oracle Rdb

You create a user account on the Server by using the OpenVMS 
AUTHORIZE  utility. You should do this from the `system' account or 
another highly privileged account. 

Note that the account that you are creating need not be the same as the one 
that ObjectBroker uses. This means that you can have one account that 
ObjectBroker uses for proxy access to the Server, and multiple separate 
accounts for individual access to the database.



Oracle 7 User Registration

DIGITAL UNIX

All GUI users who log in, access an account on the Server machine which is 
authorized to access the database. 

Oracle7 is different in that it takes the username as being local to the 
machine from which the request was made; the GUI PC. This type of 
treatment reduces the effectiveness of the logging in procedure.

To deal with this situation, you (as system administator) need to create user 
accounts within the DEC/EDI Oracle database by using decedi_config. 
PC users can then use those accounts to access the database.

OpenVMS

Oracle SQL Services provides a number of mechanisms by which access to 
a  database can be granted or revoked. By default, the DEC/EDI database is  
protected via OpenVMS ACLs. To allow a user to access the DEC/EDI  
databases, the DEC/EDI INTERCHANGE command should be used to add 
the  user. This in turn grants the user's account the correct ACLs to allow  
access to the DEC/EDI database.

Oracle 7 and Enhanced C2-Security

Only the Oracle 7 database currently supports C2 Enhanced Security. 
Neither the Informix Online nor Oracle Rdb version that are compatible 
with this release of DEC/EDI support C2 Enhanced Security.

To determine whether your system is running with enhanced security, use 
the following command:

# setld -i | grep OSFC2SEC

OSFC2SEC350     installed       C2-Security (System 
Administration)

To set up enhanced security on your system, read the documentation and use 
the following command:

# /usr/sbin/secsetup

You need to reboot your system in order for enhanced security to become 
effective.

Granting Database Access to User Accounts

For each account you have created, you need to grant access to the 
DEC/EDI database. You use decedi_config, Option 4  to do this. 
This example grants access to a user account called ediusr:

# decedi_config

4. Modify database users

Select option [8] : 4

There are no DEC/EDI database users (other than decedi).

1. Add User

2. Remove User

3. Return

Select option [3] : 1

Enter user name : ediusr

Current DEC/EDI database users (other than decedi) are:

        ediusr

1. Add User

2. Remove User

3. Return

Select option [3] : 3

...Creating /var/adm/decedi/decedi_db_inf_users.sql

...Modifying database access

...

...

Database users updated.

Press <Return> to continue.

Note that by selecting the option to add users, you are creating a list of users 
to add. The database is updated only when you select the Return option.

Configuring the Database Network Connectivity

OpenVMS Oracle SQL Services

By default, when you install Oracle SQL Services it will create a class for 
the version of software you have installed, for instance, if installing Oracle 
Rdb V5.1 then a `V51' class will be automatically configured. As long as 
this class used by the CommandCenters and  Cockpits trying to access the 
database then no further configuration is  required.

Options are: GENERIC, V51, V60, V61. Specify GENERIC if you have 
standard SQL Services installed on your OpenVMS Server. Specify one of 
the other options if you have multi-version SQL installed, to tell it which 
version to use.

DIGITAL Unix SQL Services

Example SQL/Services scripts are supplied in files that can be found in the 
following location: /usr/examples/decedi/sqs/*.sqs. These are 
supplied as examples of what you need to do. If you are using SQL/Services 
on the Server only in conjunction with DEC/EDI, then you can use them 
almost unchanged. 

However, if you have other uses for SQL/Services, you have to merge the 
commands in these examples with those you are already using. The example 
scripts are called:

•	sqs_create.sqs - to be run ONCE to create the DEC/EDI service.

•	sqs_startup.sqs - to be executed on system startup.

•	sqs_shutdown.sqs - to be executed on system shutdown.

As a minimum, these examples need to be modified to add the password for 
the dbsmgr account, and then run from the root account, for example:

# sqs_manage -i sqs_startup.sqs

For more information on configuring SQL/Services refer to the Oracle 
SQL/Services Installation and Configuration Guide.

DIGITAL Unix Informix

No extra configuration is required.

DIGITAL Unix Oracle 7

As part of creating the DEC/EDI Oracle 7 database, the following was  
reported:

*******************************************************

Default oracle network templates have been generated

in /userb/oracle/db/. The files being:

listener.ora

tnsnav.ora

tnsnames.ora

These files should be merged with those already on this server 
(in /etc), and those residing on any PC wishing to use the 
CommandCenter or Cockpit to access this server.

This needs to be done, and the Oracle 7 TNS listener re-started for these to 
take effect.

Merging Files

Refer to the DEC/EDI: User's Guides (DIGITAL UNIX and Open VMS) for 
information on merging the files.



Backing up the DEC/EDI Database

OpenVMS

No DEC/EDI tools are provided on OpenVMS to achieve this, instead the 
user should refer to the Oracle Rdb RMU documentation, and in particular, 
the /BACKUP qualifier. 

Restoring the DEC/EDI Database From Backup

OpenVMS

No DEC/EDI tools are provided on OpenVMS to achieve this, instead the 
user should refer to the Oracle Rdb RMU documentation, and in particular,  
the /RESTORE qualifier. 

Starting and Stopping the DEC/EDI Database

OpenVMS

It is assumed Oracle Rdb is started before the Server, normally as part of 
system startup. Oracle Rdb can be started or stopped manually using the 
startup and shutdown procedures supplied with the version of Oracle Rdb 
you have installed. For further help on this command please refer to the 
Oracle Rdb documentation.

Similar procedures are supplied for starting and stopping the Oracle SQL 
Services.

Shutting Down 
Oracle Rdb

Please note that before shutting down Oracle Rdb, you should ensure that 
both DEC/EDI and SQL/Services have been shutdown.



DIGITAL UNIX  DECEDI_CONFIG Options

The decedi_config utility presents a number of other options. These are 
described in the following sections.

Saving a Copy of the Database By Using the Dump Database 
Option

This option dumps the contents of the DEC/EDI database to a file whose 
name you are prompted to specify.

You are most likely to use this option to take a copy of the data in your 
database before you perform any database maintenance. You may also use 
this option to take a copy of your database for transferring it to another 
Server.

This option utilises the database vendor's tools, and as such varies between 
the various databases supported. They are:

•	Oracle7 

 The exp utility to do a FULL database unload

•	Informix 

 The onunload utility to do a database unload

•	Oracle Rdb 

 The rmu -Backup utility to backup the entire database 	

Each of these has its own restrictions and the user should refer to the 
database vendor's documentation for more details.

For Oracle, database dumping and re-loading must be performed by an 
Oracle user who has `dba' privilege. You will be asked for the user and their 
password as part of this option.

Populating the Database  By Using the Load Database Option

This option loads a DEC/EDI database from a file previously created by 
using the Dump Database option. This operation destroys any existing data 
already in the database.

If you have many records in the database, this option can take many minutes 
to complete.

This option utilises the database vendor's tools, and as such varies between 
the various databases supported. They are:

•	Oracle Rdb

 The rmu -Restore utility to restore the entire database

•	Informix

 The onload utility to do a database load

•		Oracle7

 The imp utility to do a FULL database load

Each of these has its own restrictions, and you should refer to the database 
vendor's documentation for more details.

Oracle7

Database dumping and re-loading must be performed by an Oracle 7 user 
who has dba privilege. You will be asked for the user and their password as 
part of this option.

It is highly recommended that you recreate the Oracle7 database prior to 
performing a reload to ensure that no duplication of information occurs.

Starting and Stopping the Database Server By Using the 
Manage Database Option

This behaviour of this option depends on the database you are using.

INFORMIX OnLine only

If you are using INFORMIX OnLine, this option allows you to:

•	See whether the INFORMIX database server for DEC/EDI is started.

•	Start the INFORMIX database server.

•	Stop the INFORMIX database server.

Before you can run the Server or access the database by using Cockpit or 
CommandCenter, the database server must be started. The database server is 
normally started automatically when needed, for example when you start the 
Server, or when you use decedi_config to configure, dump or load the 
database. The Manage database option is provided in case you need to 
use it.

For further information on stopping or starting the INFORMIX database 
server see the INFORMIX OnLine Administrators Guide, Volume 1.

Oracle Rdb only

If your database is provided by Oracle Rdb, this option displays messages 
indicating whether the database server is started or not. It does not allow to 
start or stop the database server.

It is assumed Oracle Rdb is started before the Server, normally as part of 
system startup. Oracle Rdb can be started or stopped manually using the 
rmu command from the root account. For further help on this command 
please refer to the man entry on rmu.

Please note that before shutting down Oracle Rdb, you should ensure that 
both DEC/EDI and SQL/Services have been shutdown. See Configuring the 
Database Network Connectivity on page 4-19 for more information on 
shutting down SQL/Services.

Oracle7

If you are using the Oracle7, this option allows you to:    

•	See whether the Oracle7 database server for DEC/EDI is started    

•	Start the Oracle7 database server   

•	Stop the Oracle7 database server

Before you can run the Server or access the database by using Cockpit or 
CommandCenter, the database must be started. The database server is 
normally started automatically when needed, for example when to start the 
Server, or when you use decedi_config to configure, dump or load the 
database. 

The Manage Database option is provided in case you need to start or stop 
the database at other times.

For further information on stopping or starting the Oracle7 database server, 
see the Oracle7 Server Administrator's Guide.

Using DECEDI_CONFIG Again

Once you have a running Server, you may wish to use the decedi_config 
utility again, perhaps because you want to maintain the database, or perhaps 
because you suspect there are configuration problems with ObjectBroker.

The configuration options provided by decedi_config destroy any 
existing configuration. Before you run decedi_config, you should be 
sure that:

•	You have first stopped the Server. 

Oracle Rdb only

•	You have shut down SQL/Services. This ensures that there are no users 
of Cockpit or CommandCenter accessing the database. See Configuring 
the Database Network Connectivity on page 4-19 for information on 
shutting down SQL/Services.

•	You use the Dump database option to save a copy of your current 
database, before either re-creating or using the Load database option.
Chapter 5    UNIX - Installation of DEC/EDI 
Server and Application 
Client 

This chapter describes the preparation for and installation of DEC/EDI 
Server and Application Client by the System Manager or Administrator, 
onto a DIGITAL UNIX platform.

Introduction

This chapter is divided into sections as shown below:

•	Preparing to Install DEC/EDI on page 5-2

•	Installing DEC/EDI on page 5-26

•	After Installation on page 5-32

•	Setting Up the System on page 5-34

Preparing to Install DEC/EDI

Before attempting to proceed with the instructions contained within this 
book you should be familiar with the contents of DEC/EDI Introduction and 
have decided on which components will be installed on this and any other 
nodes. 

Before attempting to install DEC/EDI software on your system, complete 
the preparation requirements outlined in Chapters 1 and 2. You will need the 
Installation Checklist prepared from Chapter 2 to complete the preparation 
and installation described in this chapter.

This section describes the activities that must be completed before starting 
the installation:

•	Reading the Online Release Notes on page 5-3

•	Installation Options on page 5-4

•	Checking the Software Distribution Kit on page 5-8

•	Registering Your Software Licenses on DIGITAL Systems on page 5-8

•	Installation Pre-requisites on page 5-11

•	Deleting DEC/EDI from Your System on page 5-24

•	# setld -d DEDICLT311 DEDICLTMAN311 on page 5-24



Reading the Online Release Notes

DEC/EDI provides online release notes. DIGITALDIGITAL strongly 
recommends that you read the release notes before using the product. The 
release notes contain information about changes to the application that are 
not included in the standard published documentation set.

The release notes for DEC/EDI will be placed in the following location after 
installation: 

/usr/doc/DECEDI(subset_number).release_notes 

/usr/doc/DECEDI(subset_number)_release_notes.ps



Installation Options

Your media kit contains one or more DEC/EDI components which are as 
follow:

•		DEC/EDI Application Client.
Select if applications on the installation platform are to either exchange 
files with the DEC/EDI Server, or track files in the DEC/EDI Server 
using the DEC/EDI Application Programming Interface (API) or the 
DEC/EDI Command Line  Interface (CLI). Necessary whether or not the 
DEC/EDI Server is on the same platform as the applications. 

•		DEC/EDI Server.
Select to provide Communications Services, EDI Translation Services, 
or Mapping Services on the installation platform. Necessary even to only 
use this platform as the common connection point for Application-to-
Application routing.

•		DEC/EDI Message Update Service.
Select to install a new set of EDI message standards for use by the EDI 
Translation Services, or for use when developing mapping tables. It can 
only be installed on a platform with the DEC/EDI Server component. 
The components share some common subsets and have other subsets 
which are specific to themselves and which may be either mandatory or 
optional.

	The components, and their subsets are detailed below:.

Table 5-1	 DEC/EDI Component Subsets

	Component 
(DEC/EDI ...)  	

Application Client  

Server 

Message Update 
Service (MUS)

Subset 
(DEC/EDI ...)

Base

Client

Client Man Pages

Base

Server

Server Man Pages

EDI Translation Services

Mailbus 400 Gateway

OFTP Gateway

SMTP/MIME Communications Gateway

3780 (BISYNC) Communications Gateway

Message Updates Base

Message Updates EDIFACT IMPDEF files

Message Updates ODETTE IMPDEF files

Message Updates X12 files

Message Updates TDCC files

Message Updates TRADACOMS files

Install ?

Mandatory

Mandatory    

Optional     

Mandatory

Mandatory    

Optional

Optional     

Optional     

Optional     

Optional     

Optional     

Mandatory

Optional     

Optional     

Optional     

Optional     

Optional     

		Additional Information on DEC/EDI Subsets

	The following provides additional information on the DEC/EDI subsets:

•			The DEC/EDI Client Man Pages optional subset should be selected if the 
man pages for the DEC/EDI API and CLI calls are required.

•			The DEC/EDI Server Man Pages optional subset should be selected if 
the man pages for the DEC/EDI System Administrator Utilities, such as 
Secondary Archiving, are required.

•			The DEC/EDI EDI Translation Services optional subset should be 
selected if any EDI Translation is required for either outgoing or 
incoming files.

•			The DEC/EDI Mailbus 400 Gateway optional subset should be selected 
if the DEC/EDI Server is to provide X.400 or X.435 Communications 
Services.

•			The DEC/EDI OFTP Gateway optional subset should be selected if the 
DEC/EDI Server is to provide OFTP Communications Services.

•			The DEC/EDI SMTP/MIME Communications Gateway optional subset 
should be selected if the DEC/EDI Server is to provide SMTP/MIME 
Communications Services.

•			The DEC/EDI 3780 (BISYNC) Communications Gateway optional 
subset should be selected if the DEC/EDI Server is to provide 3780 
(BISYNC) Communications Services.

•			The DEC/EDI Message Updates Man Pages optional subset should be 
selected if the man pages for the DEC/EDI Message Updates Service are 
required.

•			The DEC/EDI Message Updates EDIFACT IMPDEF files optional 
subset should be selected if the DEC/EDI Server requires that new 
EDIFACT tables need to be installed on the system or to replace existing 
tables already on the system.

•			The DEC/EDI Message Updates ODETTE IMPDEF files optional subset 
should be selected if the DEC/EDI Server requires that new ODETTE 
tables need to be installed on the system or to replace existing tables 
already on the system.

•			The DEC/EDI Message Updates X12 files optional subset should be 
selected if the DEC/EDI Server requires that new X12 tables need to be 
installed on the system or to replace existing tables already on the 
system.

•			The DEC/EDI Message Updates TDCC files optional subset should be 
selected if the DEC/EDI Server requires that new TDCC tables need to 
be installed on the system or to replace existing tables already on the 
system.

•				The DEC/EDI Message Updates TRADACOMS files optional subset 
should be selected if the DEC/EDI Server requires that new 
TRADACOMS tables need to be installed on the system or to replace 
existing tables already on the system.

Checking the Software Distribution Kit

Use the Bill of Materials (BOM) to check the contents of your 		DEC/EDI 
software distribution kit.  If your software distribution kit is damaged or 
incomplete, contact your DIGITAL representative.

Registering Your Software Licenses on DIGITAL Systems

DEC/EDI includes support for the License Management Facility (LMF). 
You must register your License Product Authorization Key(s) (License 
PAK(s)) in the License Database (LDB) in order to use DEC/EDI on a 
newly-licensed node. 

If you ordered the licenses and media together then the License PAK(s) will 
be shipped along with the kit. Otherwise, the License PAK(s) are shipped 
separately to a location described on your license order. 

DEC/EDI supports a number of license types, depending on which 
DEC/EDI component subsets you wish to use. The individual License PAK 
names, and what they control are shown on the following table.

Table 5-2	 DEC/EDI Component Licensing            

Subset (DEC/EDI ...) 

Client 

Server

EDI Translation

Mailbus400 Gateway 

OFTP Gateway

SMTP/MIME 
Communications 
Gateway

3780 (BISYNC) 
Communications 
Gateway 

Functionality

Post, Fetch, Track via API or 
CLI This includes bypass trans-
lation

Import/Export Gateway. Run-
time Mapper, Application to- 
Application Routing

Convert to EDI Format, Build 
EDI Transmissions, Split EDI 
Transmissions, Translate from 
EDI Format

X.400 (84) P0 and P2, X.400 
(88) P0 and P2, X.435

OFTP send and receive

SMTP send and receive 

3780 send and receive

LMF_PAK_Name 

EDI- APP-SERV or EDI 
X400 PACKAGE or EDI 
OFTP PACKAGE 

No license required 

EDI-TRANSLATION-
SERV or EDI-X400- PACK-
AGE or EDI-OFTP-PACK-
AGE 

EDI  EDI-X400-SERV or 
X400-PACKAGE 

EDI-OFTP-SERV or EDI 
OFTP- PACKAGE 

EDI-SMTP LICENSE or 
EDI-SMTP-PACKAGE 
license 

EDI-BISYNC- LICENSE or 
EDI-BISYNC-PACKAGE 
license

	Important 

In addition, you must install the EDI-COMCEN license on the Server. This 
permits the DEC/EDI CommandCenter to manage the Server node.

If you are installing pre-requisite or optional software along with DEC/EDI, 
review the PAK status and install the PAKs for them before you install 
DEC/EDI.

	Registering Licenses on DIGITAL UNIX

To register a license under the DIGITAL UNIX operating system: 

1.	Log in as superuser.

2.	At the superuser prompt, enter the following command to edit your 
License PAK:

 		# lmf register

3.	An empty PAK template is displayed in a text editor. Enter all the 
information from the License PAK form supplied with your software.

4.	After you register your license, use the following command to copy the 
license details from the LDB to the kernel cache:

 		# lmf reset

For complete information on using the License Management Facility, see 
the Guide to Software License Management.

Installation Pre-requisites

This section discusses requirements for installing DEC/EDI. 

Login Privileges

You must have superuser privileges to install the DEC/EDI software and to 
register the license PAK(s).

Hardware Requirements

To run the DEC/EDI Application Client, DEC/EDI Server or DEC/EDI 
Message Update Service you need a DIGITAL machine running the 
DIGITAL UNIX Operating System. Please refer to the DEC/EDI Software 
Product Description (SPD) for the additional details of the hardware models 
and supported versions of the operating system.

		To perform the installation, you need the following hardware:

•		A software distribution device (if installing from media). 
You need a distribution device that corresponds with the software 
distribution media. For example, if you have a CD-ROM, you need a 
CD-ROM drive. The documentation for the tape or disk drive explains 
how to load the media supplied with the software distribution kit.

•		A terminal. 
You can use either a hardcopy or video terminal to communicate with the  
operating system and respond to prompts from the installation procedure.
If you wish to install the DEC/EDI Mailbus 400 Gateway subset, 		you 
may require additional hardware that supports specific communication 
protocols to provide external connectivity. See the Mailbus 400 Software 
Product Description (SPD) for more information on these requirements.
If you wish to install the DEC/EDI OFTP Gateway subset, you may 
require additional hardware to provide the X.25 connectivity. 

 See the DEC X.25 Software Product Description (SPD) for more 
information on these requirements.

Checking Software Requirements

		The software requirements for DEC/EDI are shown below.

Table 5-3	 DEC/EDI Software Requirements

Subset 
(DEC/EDI ...)

Base 

Client

Client Man Pages

Server

Server Man Pages 

Translation Services 

Mailbus 400 Gateway 

OFTP Gateway 

SMTP/MIME Communica-
tions Gateway 

3780 (BISYNC) Communi-
cations Gateway 

Message Updates Base 

Message Updates Man 
Pages 

Message Updates EDI-
FACT IMPDEF files 

Message Updates 
ODETTE IMPDEF files 

Message Updates X12 
IMPDEF files

Message Updates TDCC 
IMPDEF files

Message Updates TRADA-
COMS IMPDEF files

 Software

DIGITAL UNIX  

TCP/IP  

ObjectBroker

DEC/EDI Base

DIGITAL UNIX Documen-
tation Subset

DEC/EDI Base

Informix-OnLine runtime

Informix-ESQL/C runtime

Oracle Rdb  

Oracle SQL Services 

Oracle7  

Oracle SQL*NET V2 

DIGITAL UNIX Documen-
tation Subset 

DEC/EDI Server 

DEC/EDI Server 

 Mailbus 400 Base 

 DEC/EDI Server 

 DEC/EDI Server 

 DEC/EDI  

 DEC X.25 Base  

 DEC/EDI Server 

DIGITAL UNIX Documen-
tation Subset 

DEC/EDI Message Updates 
Base 

DEC/EDI Message Updates 
Base 

DEC/EDI Message Updates 
Base

DEC/EDI Message Updates 
Base

DEC/EDI Message Updates 
Base

 Install?

Mandatory

Mandatory 
(included with 
O/S)

Optional

Mandatory

Optional 

Mandatory

Mandatory if using 
Informix OnLine

Mandatory if using 
Informix OnLine

Mandatory if using 
Oracle Rdb

 Mandatory if 
using Oracle Rdb

Mandatory if using 
Oracle7

Mandatory if using 
Oracle7

Optional 

Optional 

Optional

 Optional

 Optional 

 Optional 

 Optional 

 Optional

 Optional 

 Optional 

 Optional 

 Optional 

 Optional

 Optional

 Optional 

Database Requirement

The Server requires a database to hold its definitions, one of the following 
database types must be installed:

•	Informix On-Line

•	Oracle Rdb

•	Oracle7

	See the DEC/EDI Software Product Description (SPD) for more information 
on software requirements such as version numbers.

Run Time Libraries

The following DIGITAL UNIX Run Time Libraries must be installed. These 
are provided with the DIGITAL UNIX operating system software 
distribution on CD-ROM:

Subset Name

DPORTL5nn

DFARTL3nn 

Description

DEC Pascal for DIGITAL UNIX Alpha 
Runtime Support

DEC Fortran for DIGITAL UNIX Alpha 
Runtime Support

For example, to determine whether the subset is installed, use the

following command:

# setld -i | grep DFARTL

DFARTL361       installed       

    DEC Fortran for DIGITAL UNIX Alpha Runtime Support

Network Interfaces

TCP/IP Link Checking

Check that the TCP/IP link works in both directions by pinging the other 
node you intend to use. The command is:

# ping [remote node name] 

Use CTRL C to stop the test.

Checking ObjectBroker Installation

Applicable only 
if ObjectBroker 
is installed

To check that ObjectBroker is installed,  log in as the superuser (root), and 
enter the following command:

		# setld -i | grep OBBBASE 

This produces an output with a mark against each version of the  
ObjectBroker Base System currently installed. 

Checking Client/Server Communication with ObjectBroker

Applicable only 
if ObjectBroker 
is installed

If the DEC/EDI Application Client and DEC/EDI Server are on different 
systems, the network between them should be tested as follows:

1.	On one node, invoke the ObjectBroker Network Tester as the Server by 
entering the following command:

 			# obbntst -s 

This will return a Server Connection Identifier which should be noted.

2.	On the other node, invoke the ObjectBroker Network Tester as the client 
by entering the following command but adding the name of the server the 
client is to connect to and the Connection Identifier from the previous 
step:

 	# obbntst -c [Server Connection Identifier] -n [Server 
Name] 

The server's Network Tester should return a Successful Test message.

Checking DIGITAL UNIX Documentation Subset is Installed

To check DIGITAL UNIX Documentation Subset is installed, log in as the 
superuser (root), and enter the following command:

# setld -i | grep OSFDCMT 

This produces an output, with a mark against each version of the DIGITAL 
UNIX Documentation Subset currently installed.

Checking that Oracle7 is Installed

Before you can check completely that all Oracle7 components have been 
installed, you need to set some environment variables specific to Oracle7. 

Ensure that the Listener Services have been started from the Oracle account 
using the following command:

# lsnrctl start

Setting Oracle7 Environment Variables

To set Oracle7 environment variables:

1.	Check the /etc/passwd file to make sure that an Oracle7 account has been 
created. Note that the name of the account starts with the letters, ora. By 
default, the name is oracle.

2.	Note the whole specification of its home directory, and switch to that 
user (for example, su - oracle).

3.	Set the following environment variables as specified:

•	ORACLE_HOME-to home directory specification

•	ORACLE_SID-to decedidb

•	ORACLE_TERM-to vt100

After setting the environment variables, there are two ways in which you 
can check that Oracle7 and its components are installed:

1.	Run the Oracle7 Installer  

 	This utility produces a listing of components and respective versions.

2.	Check for individual Oracle7 components by using specific commands. 
In checking an installation by this method, you need to know what 
components should be installed.

Running the Oracle7 Installer

The Oracle7 Installer is located on the Oracle CD-ROM disk. 

Run the utility to give you a listing (with respective locations) of Oracle7 
files installed on your system. This may take a few minutes.

Checking for Individual Oracle7 Components

You may check that individual components are installed by using commands  
that are specific to each one. You also have the option to list the version 
number of each component for which you check.

Checking for the Server Manager and DBMS

From the Oracle account, and with the environment variables set as 
described in Setting Oracle7 Environment Variables on page 5-17, enter the 
following command:

# svrmgrl 

This returns an output similar to the following:

	Server Manager: Release 2.0.3  Production

Copyright (c) Oracle Corporation 1994. All rights 
reserved. Oracle7 Server Release 7.1.4.1.1  Production 
Release 

SVRMGR> exit

Note that this shows that both the Server Manager and DBMS are installed. 
Their version numbers are also included in the output.

Checking for Oracle7 SQLPLUS 

To check that the PL/SQL package is installed, enter the following 
command:

migrgb.reo.dec.com> sqlplus 

An output similar to the following shows that it is installed:

SQL*Plus: Release 3.1.3.5.1  

Production on Sat Oct 26 12:08:24 1996

Copyright (c) Oracle Corporation 1979, 1994.  All rights 
reserved.

	Enter user-name: 

Press CTRL C to escape.

Checking for TCP/IP Services

To check for the TCP/IP Services, enter the following command: 

# $ORACLE_HOME/bin/drivers 

This returns an output listing the installed SQL*Net Drivers 

To get their versions, enter the following commands:

	# $ORACLE_HOME/bin/lsnrctl

	LSNRCTL> version

This produces an output listing the SQL*Net Drivers version numbers.

Checking Informix-OnLine is Installed

To check that Informix-OnLine is installed on DIGITAL UNIX log in as the 
superuser (root), and enter the following commands:

# setenv INFORMIXDIR <informix directory path>

# setenv PATH 	${PATH}:${INFORMIXDIR}/bin 

# onstat -V

This produces an output indicating the version of InformixOnLine and its 
serial number. 

Note that Informix-OnLine does not need to be started prior to starting 
DEC/EDI or running any of the DEC/EDI utilities such as decedi_config.

Checking Informix-ESQL/C is Installed

To check that Informix-ESQL/C is installed on DIGITAL UNIX log in as 
the superuser (root), and enter the following commands: 

# setenv INFORMIXDIR <informix directory path> 

# setenv PATH ${PATH}:${INFORMIXDIR}/bin 

# esql -V

This produces an output indicating the version of InformixESQL and its 
serial number. 

Note that Informix-ESQL/C does not need to be started prior to starting 
DEC/EDI or running any of the DEC/EDI utilities such as decedi_config.

Checking Oracle Rdb is Installed

To check that Oracle Rdb is installed on DIGITAL UNIX log in as the 
superuser (root), and enter the following command:

	# setld -i | grep RDBSRV

This produces an output with a mark against each version of the Oracle Rdb  
currently installed. 

To check that Oracle Rdb is running, enter the following command:

# rmu 

rmu> show system DEC Rdb V6.1-0 on node 
edisrv.edi.dec.com 16-MAY-1995 13:36:23.42  monitor log 
filename is "/usr/lib/dbs/rdb/v61/adm/rdmmon61.log" 
database /usr/users/rdbdb/decedi_db.rdb/rdb_system.rdb  
9 active database users 

rmu> exit #

Checking Oracle SQL Services is Installed

To check that Oracle SQL Services is installed on DIGITAL UNIX log in as 
the superuser (root), and enter the following command:

	# setld -i | grep RDBSQL

This produces an output with a mark against each version of the Oracle SQL 
Services subset currently installed. 

Checking Oracle SQL Services is Running

To check that Oracle SQL Services is running, enter the 	following 
commands:

# sqs_manage 

SQS manage> connect server sqs_default user `dbsmgr' 
using `password'; 

SQS manage> show server; 

The message detailing the server shows whether it is running or not.

Type exit to return to the command prompt.

	Checking Mailbus 400 is Installed

To check that Mailbus 400 is installed on DIGITAL UNIX log in as the 
superuser (root), and enter the following command:

	# setld -i | grep MTAABASE 

This produces an output with a mark against each version of the Mailbus 
400 Base subset currently installed.

Checking DEC X.25 is Installed

To check that DEC X.25 is installed on DIGITAL UNIX log in as the 
superuser (root), and enter the following command:

	# setld -i | grep XXAACC 

This produces an output with a mark against each version of the DEC X.25 
subset currently installed.

Checking the DEC/EDI account

When installing the DEC/EDI Server subset, some files will be assigned the 
ownership of decedi. This means that a decedi needs to be set up prior to 
installing the DEC/EDI Server subset.

To check that the decedi account has been set up, log in as the superuser 
(root), and enter the following command:

	# grep decedi /etc/passwd 

If the decedi account exists, then this will produce a line containing the 
account details. If no decedi account exists, no output will be generated.

Adding a DEC/EDI Account

To add a decedi account, enter the following command:

	# adduser 

This will take you through a series of questions and then sets up the decedi 
account.

Disk Space Requirements

The Table below lists the disk space requirements for loading each of the 
DEC/EDI software subsets. The figures shown in these tables are peak 
requirements. After installation, slightly less disk space is required.

Table 5-4	   Disk Space Requirements  

DEC/EDI Subset  

DEC/EDI Base

DEC/EDI Client

DEC/EDI Client Man Pages

DEC/EDI Server

DEC/EDI Server Man Pages

DEC/EDI Translation Services

DEC/EDI Mailbus 400 Gateway

DEC/EDI OFTP Gateway 

DEC/EDI SMTP Gateway 

DEC/EDI BISYNC (3780) Gateway

DEC/EDI Message Updates Base

DEC/EDI Message Updates Man Pages

DEC/EDI Message Updates TDCC files

DEC/EDI Message Updates X12 files

DEC/EDI Message Updates TRADACOMS files

DEC/EDI Message Updates EDIFACT IMPDEF files

DEC/EDI Message Updates ODETTE_IMPDEF_files

Space needed (Kb)

2,000

2,500

150

75,000

50

6,000 

1,500 

1,200

500

50 

1,200 

300 

8,000 

21,000 

500 

7,000 

200 

Compare the space required for subsets with the free space currently on the 
disks where DEC/EDI files will reside.

Determining Disk Space

To determine the amount of disk space available on your system, enter the  
following command:

# df -k /usr 

This will produce an output similar to the example below: 

Filesystem  1024-blocks   Used    Avail Capacity Mounted 
on /dev/re0g       1580378  970579  451761    68%     
/usr

Note that this display shows that there are 451,761 KiloBytes available.

Deleting DEC/EDI from Your System

If you already have a DEC/EDI subset installed on your system, and want to 
replace it with another version of that subset, you must delete the original 
subset first. For instance, if you are upgrading from one version of DEC/EDI 
to another. Note that deleting the subset does not cause any user data to be 
lost, so on deleting a subset, and then installing a new subset no data will be 
lost.  

If you already have a version of DEC/EDI from your system, and wish to re-
install it, or replace it with a newer version, then you must delete each 
DEC/EDI subset that you previously installed.

	To delete subsets:

	1. Log in as superuser (login name, root).

2. Make sure you are at the root directory (/) by entering the following 
command:

	# cd /

3. Enter the following setld command (you may need to use the Bourne shell 
sh to run setld):

# setld -i | grep DEDI 

This will return a list of subsets with a mark against installed items as shown 
in the following example:

DEDICLT311    installed DEC/EDI DIGITAL UNIX Client 

DEDICLTMAN311 installed DEC/EDI DIGITAL UNIX Client Man 
Pages

4. Look for the word "installed" in the listing produced, and then delete the 
installed subsets. For example:

# setld -d DEDICLT311 DEDICLTMAN311

Backing Up Your System Disk

DIGITAL recommends that you back up your file systems before installing 
any software. For information about backing up your file systems, see the 
DIGITAL UNIX system documentation.



	Installing DEC/EDI

This section describes how to install DEC/EDI. Before starting your 
installation, perform the pre-installation tasks listed in the previous section.

The beginning of this section describes how to enter setld to start the 
installation procedure. 

The way you do this depends on whether you are installing:

•	From local CD-ROM media, see Installing From CD-ROM Consolidated 
Distribution Media on page 5-27

•	From a Remote Installation Services (RIS) server area, see Installing 
From a Remote Installation Services (RIS) Distribution Area on page 
5-28 

It then explains the installation dialog during which you are prompted for 
details about how the installation is to take place.

Stopping the Installation

You can stop the installation procedure at any time by pressing Ctrl C. If 
you stop the installation, files created up to that point are not deleted. You 
must delete those files manually.

To find out which DEC/EDI files are on your system, enter the following 
command:

	# find / -name \*decedi\

Be careful of deleting data contained in /usr/var/adm/decedi or its sub-
directories as this may cause DEC/EDI configuration data to be lost.

Time Required for Complete Installation

The time taken to install each of the subsets from the DEC/EDI kit varies 
depending on the size of your CPU and whether you are installing using 
local media, or from a Remote Installation Services (RIS) server area. In 
most cases, each subset should take only a few minutes to install.



Installing From CD-ROM Consolidated Distribution Media

This procedure loads DEC/EDI files on to a disk belonging to the system 
where you perform the installation. When DEC/EDI is run, its executable  
images are mapped into memory on your system.

	Follow these steps to install DEC/EDI from CD-ROM media:

1.	Mount the media on the appropriate disk drive.

2.	Log in as superuser (login name, root)) to the system where you will 
install DEC/EDI.

3.	Make sure you are at the root (/) directory by entering the following 
command:

 		# cd /

4.	Specify the /cdrom) directory to be the mount point for the distribution 
file system on the drive. For example, if your drive is called ralc, enter 
the following command:

 		# mount -dr /dev/ralc /cdrom

5.	Enter a setld command that requests the load function (-l option)) and 
identifies the directory in the mounted file system where the DEC/EDI 
subsets are located. 

 	For example, if the directory location for these subsets is 

 	/cdrom/dedisubset_number)/kit), enter the following 
command: 

 	# setld -l /cdrom/dedisubset_number)/kit

 	The installation procedure now displays the names of the DEC/EDI 
subsets and asks you to specify the subsets you want to load.

 	See 	Running the Installation Procedure on page 5-29 to continue the 
installation.

Installing From a Remote Installation Services (RIS) 
Distribution Area

If you are installing DEC/EDI subsets that reside in /etc/ris RIS distribution 
area on a remote system, follow these steps: 

1.	Log in as superuser (login name, root)) to the system where you will 
install DEC/EDI.

2.	Make sure you are at the root directory (/) by entering the following 
command:

 		#cd /

3.	Enter a setld command that requests the load function (-l) option and 
identifies the system where the DEC/EDI subsets are located. For 
example, if you are loading DEC/EDI subsets from a RIS distribution 
area on a node called orion, enter the following: 

 	#setld -l orion:

 	RIS now displays a menu that lists all the software subsets available to 
you and asks you to specify the subsets you want to load. 

See Running the Installation Procedure on page 5-29 to continue the 
installation.

Running the Installation Procedure

Once you have entered the setld command to install the software, the system 
takes you through a dialog in which you are prompted for details about how 
the installation is to take place. These prompts are described on the 
following pages.

At each prompt during the dialog, you can do any of the following: Enter 
your reply and press Return. Enter ? for more information about what is 
required. Abort the installation by pressing Ctrl/C. If you encounter any 
failures during the installation dialog, refer to Problems During Product 
Installation on page 5-31.

Specifying Subsets

You are prompted to specify which DEC/EDI subsets you want to load. For 
example, when installing DEC/EDI on DIGITAL UNIX, the dialog is as 
follows:

#	setld -l /cdrom/dedi320/kit

The subsets listed below are optional: There may be more 
optional subsets than can be presented on a single 
screen. If this is the case, you can choose subsets 
screen by screen or all at once on the last screen. All 
of the choices you make will be collected for your 
confirmation before any subsets are installed.

1)	DEC/EDI 3780 Gateway

2)	DEC/EDI Base

3)	DEC/EDI Client Man Pages

4)	DEC/EDI Client

5)	DEC/EDI Internet SMTP/MIME Gateway

6)	DEC/EDI Mailbus 400 Gateway

7)	DEC/EDI Message Updates Base

8)	DEC/EDI Message Updates EDIFACT IMPDEF files

9)	DEC/EDI Message Updates Man Pages

	--MORE TO FOLLOW

Enter your choices or press RETURN to display the next screen. Choices	
(for example, 1 2 4-6): 2-4

10)  DEC/EDI Message Updates ODETTE IMPDEF files

11)  DEC/EDI Message Updates TDCC IMPDEF files

12)  DEC/EDI Message Updates TRADACOMS IMPDEF files

13)  DEC/EDI Message Updates X12 IMPDEF files

14)  DEC/EDI OFTP Gateway

15)  DEC/EDI Server Man Pages

16)  DEC/EDI Server

17)  DEC/EDI Translation Services

The following choices override your previous selections: 
18)  ALL of the above

19)  CANCEL selections and redisplay menus

20)  EXIT without installing any subsets

Add to your choices, choose an overriding action or 
press RETURN to confirm previous selections.

Choices (for example, 1 2 4-6):  2-4

You are installing the following optional subsets: 
DEC/EDI Base DEC/EDI Client Man 

Pages DEC/EDI Client Is this correct? (y/n): y

Checking file system space required to install selected 
subsets:

File system space checked OK.

If you specify more than one number at the prompt, separate each number 
with a space, not a comma.

Note

If you are installing from a RIS distribution area, the number of subsets can 
vary, depending on which products are available in the RIS area, and on how 
many subsets they have. Also, if the subsets are already installed, they will 
not appear as a selectable option.

Next, the dialog lets you verify your choice. For example, if you enter 18) in 
response to the previous prompt, you will see the following display:

DEC/EDI 3780 Gateway DEC/EDI Base DEC/EDI Client Man 
Pages DEC/EDI Client DEC/EDI 

Internet SMTP/MIME Gateway DEC/EDI Mailbus 400 Gateway 
DEC/EDI Message Updates Base 

DEC/EDI Message Updates EDIFACT IMPDEF files DEC/EDI 
Message Updates Man Pages 

DEC/EDI Message Updates ODETTE IMPDEF files DEC/EDI 
Message Updates TDCC IMPDEF 

files DEC/EDI Message Updates TRADACOMS IMPDEF files 
DEC/EDI Message Updates X12 

IMPDEF files DEC/EDI OFTP Gateway DEC/EDI Server Man 
Pages DEC/EDI Server DEC/EDI 

Translation Services

If the displayed subsets are the ones you want to load, enter y.

If the displayed subsets are not the ones you intended to choose, enter n. In 
this case, the Subset Selection menu is displayed again, and you can correct 
your choice of optional subsets.

Messages Displayed During the Loading Process

The installation procedure loads and verifies the selected DEC/EDI subsets. 
During this process, several messages are displayed.

When you see the "Verifying" message during the subset installation, the 
installation procedure is checking that the files are copied correctly. 

Note that this is not an Installation Verification Procedure (IVP) message.

If you see the "Broken pipe" message during the subsetinstallation, then this 
can be ignored as the subset will continue to be installed successfully

Problems During Product Installation

If errors occur during the installation, the system displays failure messages. 
For example, if the installation fails due to insufficient disk space, the 
following message appears:

There is not enough space for subset 
DEDISERVsubset_number) 

DEDISERVsubset_number) will not be loaded.

Errors can occur during the installation if any of the	following conditions 
exist:

•	The version of the operating system is incorrect. 

•	A prerequisite software version is incorrect. 

•	There is insufficient disk space. 

•	The system parameter values for successful installation are insufficient.

For descriptions of error messages generated by these conditions, refer to 
the relevant documentation on system messages, recovery procedures, and 
software installation. For information on system software requirements, 
refer to Table 5-3 DEC/EDI Software Requirements on page 5-12

Files Created During Installation

For more details of the files installed by an installation of DEC/EDI,  please 
refer to Appendix I UNIX Installation - Directory and File Listing.

After Installation

This Section explains what you need to do after the installation to make 
DEC/EDI ready for use.

Installation Checking

Satisfactory installation is assumed if the files selected for the particular 
customer installation are found to be installed. The procedure for checking 
this is shown in Running the Installation Verification Procedure on page 
5-33.

Running the Installation Verification Procedure

After installing DEC/EDI, you should run the Installation Verification 
Procedure (IVP) independently to verify that the software is available on 
your system. You might also want to run the IVP after a system failure to be 
sure that users can access DEC/EDI.

The DEC/EDI IVP verifies the installation by checking which DEC/EDI 
subsets are installed.

To run the IVP after an installation, enter the following command, where 
subsetname can be any DEC/EDI subset:

	# setld -v subsetname

If the verification process fails, look in the /var/adm/smlogs/fverify.log file 
for information to help diagnose the problem.

Setting Up the System

Before the system can be used for the first time, or after parts of the system 
have been changed, it must be set up. 

The DEC/EDI system is comprised of both Application Clients, Servers, and 
PCs which monitor or configure the DEC/EDI system. 

The setup activities need to be performed on the separate parts of the system 
in a particular order. 

The setup procedures are described in Part 3, Database Administration.

Problems After Installation

U.S. customers who encounter a problem while using DEC/EDI can report it 
to DIGITAL by telephoning the DIGITAL Customer Support Center (CSC) 
at 1-800-354-9000. Customers with service contracts can also use an 
electronic means such as DSNlink. Customers without a service contract can 
arrange for per-call support.

•	The CSC will need the following information:

•	The name and version number of the operating system you are using.

•	The version of DEC/EDI you are using.

•	The hardware system you are using (such as a model number).

•	A brief description of the problem (one sentence if possible).

•	Whether the problem is critical.

•	Any other information that may be helpful in trying to reproduce the 
problem, such as the specific commands you used to run the software, 
the error messages displayed, and source listings of the relevant software 
module or lines of code.

If the problem is related to DEC/EDI documentation, then report the 
problem to the CSC (if you have a service contract and the problem is 
severe).


Chapter 6   OpenVMS - Installation of Server and 
Client

This chapter describes the process of installing Server and Application 
Client, by a system manager or administrator, onto a DIGITAL OpenVMS 
VAX or Alpha platform. 

Preparation

The following possibilities when installing DEC/EDI Version 3.2 onto an 
OpenVMS system are described in this chapter:

•	it is a new installation onto a clean system

•	you  are upgrading an earlier version

DEC/EDI Version 3.2  Server and Application Client can be installed 
together or separately, the Server can be on the same node as the Application 
Client, or could be on a different one.

General

It is assumed that the preparations detailed in Parts 1 and 2 have been 
completed satisfactorily, so that you have a checklist of the desired 
configuration.  Check the Installation Kit is correct against the Bill of 
Materials (BOM) and indented bills report (BIL) which specify the number 
and contents of your media.  If your kit is damaged or if you find that parts 
of it are missing, contact your DIGITAL representative.

Upgrading

When upgrading your system to DEC/EDI Version 3.2, existing files will be 
modified during the upgrade process. Backing up is recommended in the 
following instructions when appropriate.

Examples

All examples provided in this chapter are typical and are provided for 
information only.

Prerequisites - All Installations

Operating System

One of the following versions of OpenVMS is needed for DEC/EDI V3.2:

•	OpenVMS VAX Version 6.1

•	OpenVMS Alpha Version 6.1

Software Products

The information contained in the following sections define which software 
products you will need in addition to DEC/EDI for your selected 
configuration of the DEC/EDI V3.2 products.

More about 
Software 
Versions

Software versions defined within this document were correct at time of 
publication, late changes are detailed in the Release Notes.

For more information, contact your DIGITAL Support representative.

Mapping Services

The Mapping Services are a separately licensed component of DEC/EDI, 
and was previously called Filebridge. 

OpenVMS VAX Server

This section describes the layered products which are needed to run a Server 
on an OpenVMS VAX platform. Some products are mandatory, others are 
optional and depend on which configuration options you select.

Mandatory

The following products are a mandatory requirement for all OpenVMS VAX 
server installations:

•	OpenVMS VAX

•	DECforms runtime

•	Oracle Rdb runtime

Optional

The following products are optional, depending on the network interface 
and communications options being used:

TCP/IP

•	DEC TCP/IP Services

ObjectBroker

•	DEC TCP/IP Servers, DECnet or DECnet Plus (DECnet/OSI)

•	BEA ObjectBroker

In addition the DEC/EDI Mapping Service may extract record layouts from 
Oracle CDD/Repository, although this is optional.

Gateway 

You will need to run DECnet Plus (DECnet/OSI) if you are expecting to run 
any of the following DEC/EDI gateways:

•	X.25

•	OFTP

•	X.400

•	Pedi (X.435)

X.400

If you are using the X.400 Gateway, you will need to have VAX Message 
Router and VAX Message Router X.400 Gateway products installed.

Pedi

If you are using the Pedi Gateway, you would normally require the 
MAILbus 400 Message Transfer Agent. 

However there is no version of this currently available which supports the 
version of OpenVMS VAX required by DEC/EDI V3.2. 

To work around this, the Server contains an X.API component within the kit 
which needs to be separately installed. This X.API component allows 
DEC/EDI to connect to a MAILbus 400 Message Transfer Agent (MTA) on 
another CPU.

Bisync

If you are using the Bisync gateway, you will need the VAX 2780/3780 
Protocol Emulator product.

3780Plus Gateway

If you are using the 3780Plus Gateway, you will need the CLEO 3780Plus 
product.

Application Interface

Your applications may interface to the DEC/EDI V2.1 server on OpenVMS 
VAX using one or more of the following interfaces:

•	Using a DEC/EDI V2 Application Client, either on the same node as the 
server or on a separate node.

•	Using the DEC/EDI V1 'data label' API interface on the same node as the 
DEC/EDI V2 server

•	Using the DEC/EDI Mapping Service CLI or API interfaces on the same 
node as the DEC/EDI V2 server

•	Using DEC/EDI V1.3A Application Services on a separate node to the 
OpenVMS VAX server. This option requires DECnet (or DECnet/OSI) 
to link the OpenVMS VAX server node to the node running DEC/EDI 
V1.3A Application Services.

DEC ObjectBroker will be required to link the DEC/EDI V2 Application 
Clients to the server (even if the clients and server are on the same node. 
DEC ObjectBroker requires a network layer over which it can connect 
clients and the server. 

This network layer can be provided by DEC TCP/IP Services, DECnet or 
DECnet/OSI, however other constraints will often influence your choice.

If you wish to connect any of the DEC/EDI V2 Application Clients on the 
following platforms to the OpenVMS VAX server, then DEC ObjectBroker 
requires that all Application Clients use TCP/IP as the network layer to 
connect to the server:

•	DIGITAL UNIX

•	HP-UX

•	Sun Solaris

If you are not expecting to use any of the above listed Application Clients, 
the choice of network layer to use will be influenced by which DEC/EDI 
gateways you expect to run (or more specifically whether or not those 
gateways require DECnet/OSI). However all Application Clients must be 
connected using the same network layer.

Supported Software Versions

The table below shows the versions of software products that are supported 
for use with DEC/EDI V3.2 on OpenVMS VAX.

Table 6-1	 OpenVMS VAX Software Product Versions 

Product Name

OpenVMS VAX           

DECforms runtime      

BEA ObjectBroker  

Oracle Rdb runtime   

DEC TCP/IP Services   

Oracle DD Repository               

DECnet Plus for Open-
VMS VAX            

CLEO 3780Plus                

Mailbus 400 MTA

X500 Directory Services

SPD* Number

25.01    

29.90    

44.12   

n/a  

46.46    

n/a  

50.45    

n/a

42.83

40.77

Supported Versions

6.1, 6.2, 7.0, 7.1

2.1A, 2.2

2.6, 2.7

5.1, 6.0, EC01, 6.1, 7.0

3.3, 4.1

6.1, 7.0

6.2, 7.0, 7.1

04

1.4, 2.0

2.0A, 3.1

* = Software Product Description

OpenVMS Alpha Server 

This section describes the layered products which may be needed to run a 
DEC/EDI server on an OpenVMS Alpha platform. Some products are 
mandatory, others are optional and depend on which configuration options 
you select.

Mandatory 

The following products are a mandatory requirement for all OpenVMS 
Alpha server installations:

•	OpenVMS Alpha

•	DECforms runtime

•	Oracle Rdb runtime

Optional

The following products are optional, depending on the network interface 
and communications options being used:

TCP/IP

•	DEC TCP/IP Services

ObjectBroker

•	DEC TCP/IP Servers, DECnet or DECnet Plus (DECnet/OSI)

•	BEA ObjectBroker

In addition the DEC/EDI Mapping Service may optionally extract record 
layouts from Oracle CDD/Repository.

Gateway

If you are using either of the OFTP or X.25 gateways, you need to have 
installed one of the following:

•	DECnet/OSI and X.25

•	DECnet and DEC X.25 Client

Pedi Gateway

If you are using the Pedi Gateway, you would normally require the 
MAILbus 400 Message Transfer Agent. As there is no version of this 
currently available for OpenVMS Alpha, the Server contains an X.API 
component within the kit which needs to be separately installed. 

This X.API component allows DEC/EDI to connect to a MAILbus 400 
Message Transfer Agent (MTA) on another CPU using DECnet/OSI.

3780Plus Gateway

When using the 3780Plus Gateway, you will need CLEO 3780Plus.

Application Interface

Your applications may interface to the V3.2 server on OpenVMS Alpha 
using one or more of the following interfaces:

•	Using a DEC/EDI V3.2 Application Client, either on the same node as 
the server or on a separate node.

•	Using DEC/EDI V1.3A Application Services on a separate node to the 
OpenVMS Alpha server. This option requires DECnet (or DECnet/OSI) 
to link the OpenVMS Alpha server node to the node running DEC/EDI 
V1.3A Application Services.

ObjectBroker will be required to link the V3.2 Application Clients to the 
server using  a network layer over which it can connect clients and the 
server. This is required even if clients are on the same node as the server. 
This network layer may be provided by TCP/IP Services, DECnet or 
DECnet/OSI.

If you wish to connect any of the DEC/EDI V3.2 Application Clients on the 
following platforms to the OpenVMS Alpha server, then ObjectBroker 
requires that all Application Clients use TCP/IP as the network layer to 
connect to the server:

•	DIGITAL UNIX

•	Sun Solaris

•	HP-UX

If you are not expecting to use any of the above listed Application Clients, 
the choice of network layer to use will be influenced by which DEC/EDI 
gateways you expect to run (or more specifically whether or not those 
gateways require DECnet/OSI).  However all Application Clients must be 
connected using the same network layer.

Supported Software Versions

The table below shows versions of software products that are supported for 
use with DEC/EDI V3.2 on OpenVMS Alpha.

Table 6-2	 OpenVMS Alpha Software Product Versions

Product Name

OpenVMS VAX           

DECforms runtime      

BEA ObjectBroker  

Oracle Rdb runtime   

DEC TCP/IP Services   

Oracle CDD Repository               

DECnet Plus for Open-
VMS VAX            

DEC X.25 Client

X.25

CLEO 3780Plus                

Mailbus 400 MTA

X500 Directory Services

SPD* Number

25.01    

29.90    

44.12   

n/a  

46.46    

n/a  

50.45    

46.37

47.37

n/a

54.67

40.77

Supported Versions

6.1, 6.2, 7.0, 7.1

2.1A, 2.2

2.6, 2.7

5.1, 6.0, EC01, 6.1, 7.0

3.3, 4.1

6.1, 6.2, 7.0, 7.1

1.1, 1.2

1.1, 1.1b

04

1.4, 2.0

2.0A, 3.1

 * = Software Product Description

OpenVMS VAX or Alpha Application Clients

This section describes the layered products which are needed to run a 
Application Client on either an OpenVMS VAX or OpenVMS Alpha 
platform. Some products are mandatory, others are optional and depend on 
which configuration options you select.

Mandatory

The following products are a mandatory requirement for all OpenVMS VAX 
or OpenVMS Alpha Application Client installations: 

•	OpenVMS (for VAX or Alpha respectively)

•	A network transport: 

 provided by DEC TCP/IP Services or DECnet or DECnet/OSI

 or

 ObjectBroker 

Note that ObjectBroker requires all Application Clients connected to a 
single server use the same network transport.

Software Licensing

General

Before you install and run DEC/EDI V3.2 on a newly licensed node or 
cluster, you must first register a License Product Authorization Key 
(License PAK) using the License Management Facility (LMF).

License PAK

The License PAK may be shipped along with the kit if you ordered the 
license and media together; otherwise, it is shipped separately to a location 
based on your license order.

If you are installing prerequisite or optional software along with DEC/EDI, 
review the PAK status and install the PAKs for any prerequisite or optional 
software before you install DEC/EDI. You should register your DEC/EDI 
license before you do the installation. During the installation, the licenses 
are checked, and if any is missing you are asked if you want to continue.  
You can complete the installation, and run the IVP without having the 
license installed.  However, you will not be able to run the DEC/EDI 
software. Once you perform the license registration and have loaded an 
authorization key, you can use DEC/EDI.

Checking for 
Installed 
Licenses

To check to see what licenses you already have loaded, use the command:

$LICENSE LIST

Registering a 
License

To register a license under OpenVMS, first log in to the system manager's 
account, SYSTEM. You then have a choice of two ways to perform the 
registration:

1.	Invoke the SYS$UPDATE:VMSLICENSE.COM procedure. When it 
prompts you for information, respond with data from your Product 
Authorization Key (PAK). When it asks if you want to load the license, 
answer `Yes'.

2.	Issue the DCL command LICENSE REGISTER with the appropriate 
qualifiers that correspond to information on the PAK.  If you choose this 
method, you must then use the LICENSE LOAD command to activate 
the license.

More about 
License 
Management 
Facility

For complete information on using LMF, see the manual on the License 
Management Utility in the OpenVMS documentation set.

Privileges For The Installing Account

To install DEC/EDI, you must be logged in to an account that has SETPRV, 
this will normally be the SYSTEM account. The installing account must 
have the process rights identifier OBB$MANAGER because the installation 
procedure has to shut down and restart ObjectBroker.

About the 
Examples

Command examples used in this section assume that the installing account is 
SYSTEM.

Checking 
Privileges

To check to see what privileges you have, you can use the following 
command:

$ SHOW PROCESS /PRIVILEGES

Note that VMSINSTAL turns off BYPASS privilege at the start of the 
installation.



	Disk Space Requirement

During installation working space is needed on the disk in excess of the 
space required just for the application. 

These requirements are detailed below:

Table 6-3	 Disk Space Requirements

Server/Client

OpenVMS VAX Server

OpenVMS VAX Client

OpenVMS Alpha Server

OpenVMS Alpha Client

Disk

System

... for EDI data

... for Mapper

System

... for EDI data

System

... for EDI data

... for Mapper

System

... for EDI data           

During 
Installation 

65,000

none

none

6,000

none

90,000

none

none

9,000 

        none

After 
Installation  

50,000

25,000

22,000

1,600

100

75,000

25,000

22,000

1,800

100

Determining Diskspace

To determine the number of free disk blocks on the current system disk, 
enter the following command at the DCL prompt:

$ SHOW DEVICE SYS$SYSDEVICE

System Parameters

Minimum values for the System Parameters when running DEC/EDI are 
shown below. 

Higher values may be needed depending on other applications running at 
your site.

Table 6-4	 Minimum System Parameter Values

System Parameter

CHANNELCNT   

CLISYMTBL  

DEFMBXMXMSG 

DEFMBXBUFQUO

GBLPAGES 

GBLPAGFIL

GBLSECTIONS

WSMAX 

MAXBUF 

MAXPROCESSCNT                  

VIRTUALPAGECNT             

Client & Server

255

500

256

2,048

3,350 free global pages

9,216

84 free global sections

8,192

2,048

64

60,000

Client Only

100

250

256

1,024

1,500 free global pages

 8,192

60 free global sections

 2,048

 1,024

20

30,000

 The following paragraphs show you how to:

•	Check system parameter values with the OpenVMS System Generation 
Utility (SYSGEN)

•	Calculate values for the GBLPAGES and GBLSECTIONS system 
parameters

•	Change parameter values with the OpenVMS AUTOGEN command 
procedure

Checking System Parameter Values

The SYSGEN utility is used to check the system parameters. 

1.	Run the SYSGEN utility by using the following command:

 	$ RUN SYS$SYSTEM:SYSGEN 

 	This will bring up the SYSGEN> prompt

2.	Use the SHOW command to display selected parameter values with the 
following command:

 	SYSGEN> SHOW nnnnnnn

 	where nnnnnnn is the parameter name, for instance:

 	SYSGEN> SHOW MAXBUF

 	will give you the maximum buffer size.

 	Repeat this process for all of the parameters listed in Table 6-4 Minimum 
System Parameter Values, noting the values which should equal or 
exceed the minimum values listed.

3.	Type EXIT at the SYSGEN prompt to return to DCL level when you 
have finished checking the parameter values.

More About 
SYSGEN

For more information about using SYSGEN, see `Guide to Setting Up an 
OpenVMS System' in the OpenVMS documentation on system 
management.



Calculating Values for GBLPAGES and GBLSECTIONS

The values for GBLPAGES and GBLSECTIONS in Table 6-4 Minimum 
System Parameter Values, indicate how many unused pages or sections 
areavailable on your system. 

To check  how many unused global pages and global sections your system 
has, carry out the following:

1.	 Use F$GETSYI to find out the number of global pages and global 
sections that are unused:

 	$ unused_pages = f$getsyi("free_gblpages") 

 	$ unused_sections = f$getsyi("free_gblsects")

2.	To display a summary of unused global pages and global sections, enter 
the following:

 	$ WRITE sys$output unused_pages 

 	$ WRITE sys$output unused_sections

3.	Determine if the number of unused pages is equal to or greater than the 
number specified in Table 6-4 Minimum System Parameter Values. If the 
number of unused pages is less than the number listed in the table, you 
need to increase the value for GBLPAGES.

4.	Subtract the current free GBLSECTIONS value from the value shown in 
Table 6-4 Minimum System Parameter Values. The difference between 
the two is the amount by which you need to increase the current value 
obtained in Step 2. 



Changing System Parameter Values

Changes made to the System Parameters do not actioned until the 
AUTOGEN utility has been used. Next login after the AUTOGEN will use 
the updated values.

Procedure

To change value to the minimum value listed in Table 6-4 Minimum System 
Parameter Values:

1.	Edit the file SYS$SYSTEM:MODPARAMS.DAT and add the following 
line for each parameter that needs changing:

 	MIN_PARAMETERNAME = VALUE

 	for example:

 	MIN_MAXBUF = 2048

 	MIN_WSMAX = 8192

2.	Run the AUTOGEN procedure to reset your system parameters. Note 
that AUTOGEN performs an automatic system shutdown and reboots 
when it has finished. Rebooting your system makes the new parameter 
values active. Enter the following command at the DCL prompt:

 	$ @SYS$UPDATE:AUTOGEN GETDATA REBOOT NOFEEDBACK

More About 
Autogen

For more information about using AUTOGEN, see `Guide to Setting Up an 
OpenVMS System' in the OpenVMS documentation on system 
management.

Account Quotas For The Installing Account

The account you use to install DEC/EDI must have sufficient quotas to 
enable you to perform the installation, these values are detailed below:

Table 6-5	 Process Account Quotas

Account             

ASTLM   

BIOLM     

BYTLM     

DIOLM       

ENQLM        

FILLM         

JTQUOTA  

PGFLQ      

PRCLM       

TQELM      

WSDEF    

WSEXTENT 

WSQUO   

Server

2,000

 300

140,000

300

3,000

1,000

2,048

 60,000

20

1,000

2,048

8,192

4,096  

Client

25

20

20,000

20

200

100

1,024

10,240

5

10

1,024

4,096

2,048



Changing Account Quotas

User account quotas are stored in the file SYSUAF.DAT. You use the 
OpenVMS Authorize Utility to verify and change user account quotas. 

Changes are made using the following procedure:

1.	Set your directory to SYS$SYSTEM and then run AUTHORIZE:

 	$ SET DEFAULT SYS$SYSTEM 

 	$ RUN AUTHORIZE 

 	UAF>

2.	At the AUTHORIZE prompt (UAF>), use the SHOW command with the 
account you are going to use to install DEC/EDI in order to check the 
particular account. For example:

 	UAF> SHOW SYSTEM

3.	To change a quota, use the MODIFY command at the UAF> prompt. 
MODIFY has the following format:

 	MODIFY account-name /quota-name=nnnn

4.	The example below changes the FILLM quota for the SYSTEM account 
and then exits from the Authorize Utility:

 	UAF> MODIFY SYSTEM /FILLM=1000 

 	UAF> EXIT

5.	After you exit from the utility, the OpenVMS system displays messages 
indicating whether or not changes were made. Once the changes have 
been made, you must log out and log in again for the new quotas to take 
effect.

More about 
Account Quotas

For more information on modifying account quotas, see the description of 
the AUTHORIZE utility in the OpenVMS System Manager's Manual.

Other Pre-Installation Information

	Accessing the Online Release Notes

DEC/EDI provides online Release Notes. If you specify OPTIONS N when 
you invoke VMSINSTAL, the installation procedure asks you if you want to 
display or print the Release Notes. The Release Notes question comes near 
the beginning of the installation. You should read the Release Notes before 
continuing with the installation.

After DEC/EDI has been installed, the Release Notes are in the file:

SYS$HELP:DECEDI032.RELEASE_NOTES

Files and Logical Names Added to Your System

See Appendix I UNIX Installation - Directory and File Listing and 
Appendix J OpenVMS Installation - Directory and File Listing for lists of all 
the files and logical names the installation procedure adds to your system.

Running the Installation Verification Procedure (IVP)

The Installation Verification Procedure (IVP) for DEC/EDI checks that the 
installation has been successful. During the installation, you are asked if you 
want to run the IVP as part of the installation. If you respond YES, 
VMSINSTAL runs the IVP. DIGITAL recommends that you run the IVP to 
be sure that DEC/EDI is installed correctly.

After DEC/EDI is installed, you can run the IVP independently to verify that 
the software is available on your system. You might also want to run the IVP 
after a system failure to be sure that DEC/EDI is still installed correctly.

Use the following command to run the IVP independently:

$ @SYS$TEST:DECEDI$IVP.COM

VMSINSTAL Requirements

When you invoke VMSINSTAL, it checks the following:

•	Whether you are logged in to a privileged account

•	Whether you have adequate quotas for installation

•	Whether any users are logged in to the system

If VMSINSTAL detects any problems during the installation, it notifies you 
of the problem and asks if you want to continue the installation. In some 
instances, you can enter YES to continue. 

Stopping the 
Installation

To stop the installation process and correct the situation, enter NO or press 
RETURN. Then correct the problem and restart the installation.

Backing Up 
Your System 
Disk

At the beginning of the installation, VMSINSTAL asks if you have backed 
up your system disk. DIGITAL recommends that you do a system disk 
backup before installing any software on top of the operating system.

Use the backup procedures that have been established at your site. 

More about 
Backup

For details on performing a system disk backup, see the section on the 
Backup Utility in the OpenVMS System Manager's Manual.

Aborting the Installation

To abort the installation procedure at any time, press CTRL/Y. When you 
press CTRL/Y, the installation procedure deletes all files it has created up to 
that point and exits. You can then start the installation again.

Time to Install

The table below shows the approximate time it takes to carry out the 
installation. This varies depending on the type of media and system 
configuration. 

Table 6-6	 Time taken to Instal

Type of Installation      

OpenVMS VAX Server and Client   

OpenVMS VAX Client only         

OpenVMS Alpha Server and Client   

OpenVMS Alpha Client only     

Time to Install (minutes) 

30 to 90

5 to 15

7 to 15 

2 to 5

Information Needed During Installation

DEC/EDI 
Account 
Details (UIC)

The installation creates an account for use by DEC/EDI. You must specify a 
unique user identification code (UIC) for the account. If the account already 
exists, because you are upgrading, then you are not asked to specify a UIC.

Where To Put 
Files

If you install the Server, the installation procedure asks you where to put the 
Server and the Mapper files. See Table 6-3 Disk Space Requirements, for 
details of how much space you need for these.

Name of Server 
Node

If you are installing a Client-only system, the installation procedure asks you 
for the name of the Server node and the name of the operating system the 
Server is running.

Upgrades Only

Shutting Down 
DEC/EDI

If you already have DEC/EDI installed, you must shut down your DEC/EDI 
system. The command to shut down DEC/EDI is:

$ @SYS$STARTUP:DECEDI$SHUTDOWN FULL

Installation: Client On Top Of Server

You can install the Client on to a system that currently runs the Server and 
Client. Then when you configure ObjectBroker, it will be configured for a 
remote Server and you get a system that is configured to be a Client-only 
system.

If you do install the Client on to a Server node, the installation procedure 
warns you and asks if you want to continue:

WARNING

* Do you still want to proceed with this installation 
[YES]?

Note that, if you choose to run the IVP after installing the Client on to a Server 
system, the IVP finds both the new Client files and the existing Server files, 
so that the total number of files it finds is much larger than for a normal Client-
only system.

Installation: Server On Client-Only System

You can install the Server on to a system that currently runs just the Client. 

When you do this, the installation procedures warns you that the Client is 
already installed and asks you if you want to continue.

Client already exists on this node. Upgrading Client 
V2.1 to Server V3.2 

* Do you still want to proceed with this installation 
[YES]?

Upgrading to V3.2 

General 

Restrictions

You cannot install DEC/EDI Version 3.2 on to a system that has a version of 
DEC/EDI earlier than 1.3A.

About Logicals

DEC/EDI stores logical names in two files: 

•	SYS$MANAGER:DECEDI$LOGICALS.COM this file will be 
overwritten by future installations of DEC/EDI. Do not change this file.

•	SYS$MANAGER:DECEDI$SYLOGICALS.COM this file will not be 
touched by future installations of DEC/EDI. If you ever want to change 
any DEC/EDI logical names, define them in this file.

Procedure

The procedure for upgrading by installing DEC/EDI V3.2 over an earlier 
version is similar to the procedure for installing onto a `clean' system. The 
process is detailed in The Installation on page 6-28.

Installing on a Cluster

You can install and run DEC/EDI on only a single node in a cluster. You 
cannot run DEC/EDI on more than one node in a cluster.

Migration Sequence

If you have a DEC/EDI V2.0 environment, the order of ugrading to DEC/EDI 
V3.2,  is to upgrade any Cockpit installations, then the server followed by any 
remote application clients. After the installation of the server you need to 
migrate your audit database.

If you have a DEC/EDI V1.3A environment the upgrade path depends on the 
configuration of your system. For any configuration there are tasks which 
must be performed after the installation in order to migrate your audit database 
and applications. 

All Services on a Single Node

Upgrade to a V3.2 server.

Multinode System with Translation and Communications all on One Node

Upgrade the server node (i.e. the node running translation and 
communications services) to a V3.2 server.

The new V3.2 server will support connections from the remote V1.3 
Application Service nodes where the remote node is not part of the same 
OpenVMS cluster.

These remote V1.3 Application Service nodes can then be upgraded to V3.2 
client nodes as required.

Multinode System with Distributed Translation and Communications

This configuration is not supported. You need to move the translation and 
communications services onto a single node before you can upgrade to a V3.2 
server.

Contact your support centre if you require more information.

Migration from V1.3A

Before installing DEC/EDI V3.2, a V1.3A system must be in an idle state 
with no failed documents or transmission files, and all File Server 
ripplebacks and copies completed. In addition, you are strongly 
recommended to empty the system of EDI data as far as is possible.

Dealing with 
Failed 
Documents

The first step is to deal with any failed documents or transmission files. 
They should be either reprocessed or cancelled. This is because certain 
failed statuses no longer exist on V3.2 and you may not be able to cancel 
them after the migration.

Stopping 
Processing of 
New Documents

The next step is to stop DEC/EDI processing any new documents. To 
achieve this do the following:-

1.	Stop creating any new documents.

2.	Stop fetching available documents.

3.	Disable all gateways and connections.

4.	Stop all TFB build intervals.

5.	Then let the system run until no documents are being processed. When 
this has happened the Interchange commands:-

 	LIST DOC/STATUS=WORKING/SERVICE=TRANS,

 	and

 	LIST TRANS/STATUS=WORKING

 	should show no records.

About 
Completing 
Ripplebacks

To get all of the ripplebacks to complete, you need to do the following:-

1.	Run DECEDI$TOOLS:DECEDI$CHECK_WF.EXE to force the 
population of the File Server work files with all history entries with 'Y' 
flags.

2.	Run DECEDI$TOOLS:DECEDI$WHIP to force the File Server to 
process the work files.

3.	Wait until the system is quiet and issue the command:

 	$ SEARCH/NOOUT/STAT DECEDI$DATA:DECEDI$%FSWF.DAT EDI 

 	and, if all three files (SFSWF.DAT, TFSWF.DAT and CFSWF.DAT) are 
not empty then return to step 1 and repeat steps 1 and 2 until the files are 
empty

4.	Shutdown your system and it is now ready for migration to V3.2.

 	It is strongly recommended that you create a log file of the installation by 
logging in with:

 	$set host 0 /log

as the migration may output messages which you will want to refer to when 
examining your node configuration after the installation.

The Installation

This section describes the questions that appear during the installation of a 
Server and Client. 

Each question in the installation is marked with an asterisk (*) at the 
beginning of the line. Some questions show the default response in brackets, 
for example [YES]. If you want to give the default response, press the 
<RETURN> key.

The following information is `generic' and is intended to provide guidance 
through the installation process. Assistance is given when choices have to be 
made, but be aware that displayed information will vary from that provided 
both here and in the Appendices log examples.

More about 
VMSINSTAL 
Options

For further information on other VMSINSTAL options, see the OpenVMS 
documentation on software installation.

Starting the Installation

1.	To start the installation, log in to a privileged account, such as the 
SYSTEM account. 

2.	Type in the VMSInstall command line using the syntax described below: 

 	@SYS$UPDATE:VMSINSTAL [product] [device] OPTIONS N 

 	[product] - the installation name for the product.  For DEC/EDI Version 
3.2, use the following installation names:

 	On OpenVMS VAX:  DECEDI032

 	On OpenVMS Alpha:  DECEDIA032

 	[device] - the name of the device on which you have mounted the media 
which contains the product to install. For example, MTA0: is the device 
name for a tape drive. Note that [device] can also be a directory 
specification, if you have the save-sets on disk.

 	Press <Return> to commence the installation. 

The installation will now continue with prompts being displayed when user 
input is required.

* Are you satisfied with the backup of your system disk 
[YES]?

You should always backup your system disk before performing an 
installation. 

If you are satisfied with the backup of your system disk, press the 
<RETURN> key. If not enter NO to terminate the installation. You will need 
to go back to Step 1 to restart the installation after you have completed 
backing up.

* Where will the distribution volumes be mounted:

Enter the device name. Note that the DEC/EDI disk must be mounted.

Release Notes Options:

1. Display release notes 

2. Print release notes 

3. Both 1 and 2 

4. None of the above

Select option [2]:

Press <RETURN> to send the file to print,  VMSINSTAL prompts you for a 
queue name, or you can accept the default print device. 

Enter 1 to display the Release Notes immediately on the console terminal. 
You can terminate the display at any time by pressing CTRL/C.

Enter 3 to display the Release Notes immediately on the console terminal 
and then print the Release Notes. VMSINSTAL prompts you for a queue 
name for the printed version.

Enter 4 followed by <RETURN> to ignore the Release Notes for the time 
being.

* Do you want to continue the installation [NO]?:

The default at this point is to abort installation by pressing <RETURN>.

To continue, enter YES followed by  <RETURN>. The Release Notes are 
then copied to a file in the SYS$HELP directory. For example:

* Do you want to continue the installation [NO]?: 

YES %VMSINSTAL-I-RELMOVED, The products release notes 
have been successfully moved to SYS$HELP.

The Release Notes are in the following file:

SYS$HELP:DECEDI021.RELEASE_NOTES

The name of the Release Notes file installed by VMSINSTAL consists of 
the current product name and version number.

Do you want to purge files replaced by this installation 
[YES]?

Purging of files superseded by this installation is recommended; however, if 
you need to keep files from previous installations, enter NO in response to 
the question. You may need to keep some of the files in the DECEDI$DATA 
directory. 

* Do you want to run the IVP after the installation 
[YES]?

It is recommended that you run the IVP; enter YES to do so, or NO if you do 
not want to run it.

* Do you want to install the server [YES]?

Press <RETURN> to accept the default and install the Server and Client, or 
type NO  <RETURN> to install just the client.

About Client-Only Installation

If you have opted to install the only the Client, after identifying the directory 
device and UIC, you will be asked to identify where the Server will run. 
Once you have entered that location, the VMSInstall procedure will 
continue without any more input from you.

The following DEC/EDI component(s) are not licensed on 
this node 

DEC/EDI OFTP Services V3.2 

DEC/EDI OFTP-Package Services V3.2

Note that the message does not necessarily mean that there is an error; the 
procedure checks both optional and mandatory software and licenses.  When 
it has completed the checks, the installation procedure asks if you want to 
continue 

* Do you still want to proceed with this installation 
[YES]?

Press <RETURN> to accept the default and continue, or type NO followed 
by <RETURN> to abort the installation.

Warning if you are Upgrading

If you are upgrading, you get a warning message at this point, telling you 
that the new installation will retain the integrity of existing data, because 
DEC/EDI already exists on this node 

Press <RETURN> to accept the default and continue, or type NO followed 
by <RETURN> to abort the installation.

You must have RDB/OpenVMS version 6.1 or later installed on your system 
to use DEC/EDI V3.2, consequently you must take the default value by 
pressing <RETURN>.

On what device should the DECEDI directories reside?

Specify the Device and press <RETURN>.

Data 
Directories 
Creation

Once you have specified the device, VMSINSTAL creates a directory called 
[DECEDI] on that device, and then the data directories are created in that 
directory. In further questions in the installation procedure, the logical 
DECEDI$TOP points to the [DECEDI] directory.

Directory/Disk 
Space

See Table 6-3 Disk Space Requirements on page 6-13  to find out how much 
space you need for the files that the installation procedure puts in these 
directories. You need more space once your DEC/EDI system is running.

When 
Upgrading

If the DECEDI account already exists, then the installation procedure uses 
the existing DECEDI directory specification.

Enter the device and directory specification for 
FBR$HOME.

*   Directory name  [SYS$SYSDEVICE:[FILEBRIDGE]]:

Press <RETURN> to accept the default . Note that the logical name 
FBR$HOME specifies the top-level directory under which the Mapping 
Service audit databases and history directories reside.

This installation procedure creates the directories (if they do not exist), and 
assigns an ACL list to the directories to allow access to the Mapper, and to 
users on this Server node who have been granted one of the Mapper rights 
identifiers: 

FBR$SUPERVISOR

FBR$OPERATIONS

FBR$DEVELOPMENT.

Initial Mapping 
Service 
Installation

The first time you install Mapping Service, you are must specify a location 
for FBR$HOME. VMSINSTAL then creates a LIVE database using a 
directory name created from a timestamp and a TEST database using the 
directory name TEST DB.

DEC/EDI Mapping Service stores its audit database files and its history files 
in directories below that pointed to by FBR$HOME. The size of these files 
can grow significantly as you use the system.

* What is the UIC to be used for the DEC/EDI account: 

Type in the UIC in the form [x,y]. For example: [123,4], and then press 
<RETURN> to action it and continue the installation.

About the UIC

The UIC chosen must:

•	 not have a rights identifier already allocated to it

•	 not be used by anything else.

•	 be valid.

•	have a  group number (the first value)greater than the SYSGEN 
parameter MAXSYSGROUP. This has a default value of 8. Any group 
number less than or equal to this value is regarded as a system UIC and 
DEC/EDI will reject it.

Remainder of the Installation

The installation procedure displays a number of informational messages that 
report on the progress of the installation, and there are no further questions.

If the installation procedure has been successful up to this point, 
VMSINSTAL moves the new or modified files to their target directories, 
updates help files, and updates DCL tables, if necessary. 

If you asked for files to be purged, they are purged now.

On completion of a satisfactory installation the following message is 
displayed:

Installation of DEC/EDI succeeded.

Installation Failure

If errors occur during the installation, VMSINSTAL displays failure 
messages. If the installation fails, the following message is displayed:

%VMSINSTAL-E-INSFAIL, The installation of DEC/EDI 3.2 
has failed.

About the IVP

If you chose to run the IVP, VMSINSTAL runs it now and checks that all the 
specified files have been installed. One of the following messages will 
display:

IVP was successful.

or

IVP for DEC/EDI V3.2 has failed

If the IVP fails, the following messages are displayed:

IVP for DEC/EDI V3.2 has failed to execute to 
completion.

%VMSINSTAL-E-IVPFAIL, The IVP for DEC/EDI V3.2 has 
failed.

Errors can occur during the installation if any of the following conditions 
exist:

•	The operating system version is incorrect

•	A prerequisite software version is incorrect

•	Quotas necessary for successful installation are insufficient

•	System parameter values for successful installation are insufficient

•	The OpenVMS help library is currently in use

More about 
Error Messages

For descriptions of the error messages generated by these conditions, see the 
OpenVMS documentation on system messages, recovery procedures, and 
OpenVMS software installation. 

If you are notified that any of these conditions exist, you should take the 
appropriate action as described in the message. (You might need to change a 
system parameter or increase an authorized quota value). 

Displayed Files 
with Errors

The IVP only displays files that have errors; it does not list them all. For 
each file that has an error, the IVP describes briefly what the problem is.

If the IVP fails and displays too many files to be seen on a video terminal, 
you can restart it and output the results to a file with the following 
command:

$ @SYS$TEST:DECEDI$IVP.COM /OUTPUT="file.ext"

Completing the Installation Procedure

Informational messages (similar to example below) indicate the  installation 
procedure is complete:

Installation of DECEDIA V3.2 completed at 14:05

Adding history entry in 
VMI$ROOT:[SYSUPD]VMSINSTAL.HISTORY

Creating installation data file: 
VMI$ROOT:[SYSUPD]DECEDIA032.VMI DATA

VMSINSTAL procedure done at 14:06

You can now log out of the privileged account:

$ LOGOUT SYSTEM logged out at 31-JUN-1997 25:09:17.62

VMSINSTAL deletes or changes entries in the process symbol tables during 
the installation, to continue using the System Manager's account and you 
want to restore these symbols, you should log-out and log-in.

 	

Installing the Message Update Kit

To install the Message Update Kit, repeat the installation procedure detailed 
in Starting the Installation on page 6-29. 

After Step 2 you will see a message similar to the following:

Please select: 

1 - To install EDI standards definitions. 

2 - To re install DEC/EDI T3.2.

3 - To abort this installation.

*    Option [1]:

Press <Return> to accept the default and install the Standards Definitions.

You can now select which standards you install from the steps that follow. 
When the selections have been completed, the installation will continue and 
complete itself without further input.

After Installation

After installing DEC/EDI and the document standards , you may need to 
perform the following tasks:

•	Configure a Client/Server service

•	Edit the system startup and shutdown files

•	Reboot the system

•	Change account details for those people who are going to use the 
DEC/EDI INTERCHANGE command

•	Migrate data if upgrading from a previous version of DEC/EDI.

Configuring Client/Server Services for DEC/EDI

If you want to use the client you need to configure a Client/Server service 
for DEC/EDI by running the following command file:

@DECEDI$TOOLS:DECEDI$CONFIGURE_CLIENT_SERVER.COM





Editing the System Files

This section applies to Server systems.

You must edit the system startup and shutdown files to provide for 
automatic startup and shutdown of DEC/EDI when your system is rebooted.

There are three possible DEC/EDI modes of startup shown below:

Table 6-7	 Startup Modes

Mode       

Full startup [1]  

Partial startup  

Mapper only      

Startup Command              

@SYS$STARTUP:DECEDI$STARTUP FULL

@SYS$STARTUP:DECEDI$STARTUP

@SYS$STARTUP:DECEDI$STARTUP MAPPER

 [1] The command for a full startup must come after the command that starts 
Rdb Monitor. Add the command line that starts DEC/EDI to the system 
startup file. You must position this new command line after the line that 
invokes the network startup command procedure.

System Startup

The following  is the system startup command:

SYS$MANAGER:SYSTARTUP_VMS.COM

Network and Rdb Monitor Startup

The following example shows the network startup and Rdb Monitor startup 
command lines, followed by the startup command line for DEC/EDI:

@SYS$MANAGER:STARTNET.COM 

@SYS$STARTUP:RMONSTART.COM 

@SYS$STARTUP:DECEDI$STARTUP.COM FULL

You need to add the following command line to the system shutdown file, 
SYS$MANAGER:SYSHUTDWN.COM:

$ @SYS$STARTUP:DECEDI$SHUTDOWN.COM FULL

Note that when you shutdown your system you must ensure that DEC/EDI 
closes down before DECnet and/or P.S.I., and before Rdb Monitor.

DEC/EDI uses the symbols DECEDI$DEFINE and DECEDI$DEASSIGN 
to define and de-assign its logical names. 

The symbols and logical names, are defined by the command procedure 
SYS$MANAGER:DECEDI$LOGICALS.COM.

Defining DEC/EDI Logical Names

DEC/EDI stores logical names in two files:

•	SYS$MANAGER:DECEDI$LOGICALS.COM this file will be 
overwritten by future installations of DEC/EDI. Do not change this file.

•	SYS$MANAGER:DECEDI$SYLOGICALS.COM this file will not be 
touched by future installations of DEC/EDI. If you ever want to change 
any DEC/EDI logical names, define them in this file.

Using the Correct Pascal Run-Time Library

You must have a Pascal run-time library if you intend to send or receive X12 
or TDCC documents. OpenVMS Alpha Version 6.1 does not provide a 
Pascal run-time library.

To find out if you have the Pascal run-time library on your system, give the 
following command:

$ DIRECTORY SYS$LIBRARY:PAS$RTL.EXE

If the file does not exist, contact your DIGITAL support center.

Enhancing DEC/EDI Security

This section applies to:

•	Server systems.

DEC/EDI provides a high level of security, through the use of access rights, 
but you can provide a still greater level of security by using OpenVMS 
Access Control Lists (ACLs) on the Application Server mailbox, 
DECEDI$AFS MBX. 

By restricting access to this mailbox, you ensure that an application cannot 
access DEC/EDI data unless the user running the application has access to 
the mailbox.

To protect the mailbox, use an access control list (ACL). Create an access 
control entry (ACE) in the ACL for each user or group of users that require 
access to the mailbox. To avoid setting an ACL each time you start up your 
system, include the ACL definition in the system startup file.

Typical 
Protection

Typical protection to set up might be:

System: READ + WRITE + EXECUTE +DELETE + CONTROL

DECEDI: READ + WRITE + EXECUTE + DELETE

Specified user accounts: READ + WRITE

All other accounts: Deny all access

•	A Client that is on the same node as the Server accesses the mailbox 
using the account that issued the Client calls. 

•	A Client that is on a remote node from the Server uses the DECEDI 
account to access the mailbox.

Enabling the 
Protection

To make sure that that the protection applies as soon as possible after the 
mailbox is created, put the commands to create the ACL immediately after 
the DEC/EDI startup command:

$ @SYS$STARTUP:DECEDI$STARTUP FULL

Some Examples

An example set of commands to do this follows:

$ SET ACL /OBJECT=DEVICE DECEDI$AFS_	MBX 
/ACL=(IDENTIFIER=*, ACCESS=NONE)) 

$ SET ACL /OBJECT=DEVICE DECEDI$AFS_MBX 
/ACL=(IDENTIFIER=SYSTEM, 
ACCESS=READ+WRITE+EXECUTE+DELETE+CONTROL) 

$ SET ACL /OBJECT=DEVICE DECEDI$AFS_MBX 
/ACL=(IDENTIFIER=DECEDI, ACCESS=READ+WRITE+DELETE) 

$ SET ACL /OBJECT=DEVICE DECEDI$AFS_MBX 
/ACL=(IDENTIFIER=TIMG, ACCESS=READ+WRITE) 

$ SET ACL /OBJECT=DEVICE DECEDI$AFS_MBX 
/ACL=(IDENTIFIER=LSMITH, ACCESS=READ+WRITE)

More About 
ACLs and ACEs

See the Introduction to OpenVMS System Management and the OpenVMS 
VAX Guide to System Security for more information about ACLs and 
ACEs.

Modifying the System Page File Size

This section applies to:

•	Server systems.

To maintain system performance, you should increase the size of your 
system page file. You should increase the page file size by 1000 blocks for 
each DEC/EDI process that you run, up to a maximum of 20,000 blocks for 
20 processes. 

You cannot do this until you have DEC/EDI running, because the number of 
DEC/EDI processes depends on your configuration.

Once you have DEC/EDI configured, you can find out how many DEC/EDI 
processes there are on your system by using the DCL command SHOW 
SYSTEM. 

The name of every DEC/EDI process begins with DECEDI$ so you need to 
count how many such processes you have.

To change the size of the your page file, enter the following command:

$ @SYS$UPDATE:SWAPFILES

and at the following prompt:

Enter the new size for paging file

enter the required value.

The new page file will take effect when you next boot your system. Once 
you have set the new page file size, run your system for a few days and then 
use AUTOGEN to provide values tailored to your particular system. 



Re-booting the System

A system reboot:

•	Enables you to get DEC/EDI ready for use

•	(Server systems only) Ensures that the edits to the system startup 
command file are correct

•	Establishes any new parameter settings

Note, however, that rebooting is optional. You can reboot your system after 
you have installed DEC/EDI, edited the system startup and shutdown files, 
and reset the system parameters if necessary.

Re-naming the DEC/EDI Error Log

This section applies to:

Server systems.

DEC/EDI's main error log file on the Server is 
DECEDI$ERROR:DECEDI$ERRORS.LOG. This file can become quite 
large, so it is a good idea for you to rename it whenever you reboot your 
system. You may want to add a suitable command to your system startup 
procedure so that it renames this file.

You can reduce the speed with which the error log grows by defining the 
logical name DECEDI$LOG SEVERITY to be "WARNING". This restricts 
DEC/EDI to logging only those errors of severity WARNING and higher. 
You must add your definition to the following file:

SYS$MANAGER:DECEDI$SYLOGICALS.COM

Modifying User Accounts

This section applies to Server systems.

Page File Quota

You must make sure that the account for each person who is going to use the 
DEC/EDI INTERCHANGE command has a paging file quota of at least 
60,000.

Access From a Local Client

If you intend to use a local Client to communicate with the Server, then all 
user accounts that will use the Client interface must have the following:

The DEC/EDI FBR$OPERATIONS process rights identifier.

The same minimum account quotas as for the DECEDI account, see 
Table 6-5 Process Account Quotas

See Defining Mapping Service Rights on page 6-51 for a description of the 
following process rights identifiers:

FBR$SUPERVISOR 

FBR$DEVELOPMENT 

FBR$OPERATIONS

Adding Symbols to User's LOGIN.COM

For the DEC/EDI Mapper to function properly, each user must have the 
following symbol in the login.com file:

$ FBR$DECEDI_EXTRACT :== $SYS$SHARE:FBR$DECEDI_EXTRACT

Determining and Reporting Problems

If an error occurs while DEC/EDI is being used and you believe that the 
error is caused by a problem with DEC/EDI, take one of the following 
actions:

•	If you have a BASIC or DECsupport Software Agreement, you should 
call your Customer Support Center. (With these services, you receive 
telephone support that provides high-level advisory and remedial 
assistance.)

•	If you have a Self-Maintenance Software Agreement, you can submit a 
Software Performance Report (SPR).

•	If you purchased DEC/EDI within the past 90 days and you think the 
problem is caused by a software error, you can submit a Software 
Performance Report (SPR).

When you find an error in the DEC/EDI documentation, please fill out and 
submit the Reader's Comments form at the back of the document in which 
the error was found. Include the section and page numbers where the errors 
were found.

The DECEDI Account

This section applies to both Server and Client systems.

The installation creates an account with a username of DECEDI. This 
account has only network access, and has the quotas listed below that are 
required to run DEC/EDI. Note, the DECEDI account is used only by 
DEC/EDI processes, not DEC/EDI users.

Table 6-8	 Quotas for the DECEDI Account          

Quota      

ASTLM              

BIOLM                

BYTLM            

DIOLM                

ENQLM             

FILLM              

JTQUOTA            

PGFLQ             

PRCLM                 

TQELM              

WSDEF              

WSEXTENT           

WSQUO       

Value                   

2,000

300

200,000

300

10,000

1,000

4,096

60,000

20

1,000

2,048

8,192

4,096   

If you are planning to use the V3.2 Support Services, it may be necessary to 
increase the value of the DECEDI account quotas to suit the traffic.

For a busy system where the maximum number of extra Copy, Rippleback, 
DECnet or Application fileserver processes is 1 or more, then it is 
recommended to at least double the account quotas, and possibly increase 
some of the system parameters.

If messages appear in the error log file from any of the fileserver processes 
complaining that quotas are too low, or serious unexpected errors appear, for 
example from RMS or RDB, these are likely symptoms of low quotas.

Increasing Disk Quota

This section applies to Server systems.

If disk quotas are enabled on the system disk, or any disk that you use for 
DEC/EDI data, you need to make sure that the DECEDI account has a 
suitable amount of disk quota for those disks. 

The value depends on how busy your DEC/EDI system is, but 100,000 free 
blocks is probably enough to start with.

If you need to find out how much quota the DECEDI account has, or change 
its quota, use DISKQUOTA. 

For example, to find out the current quota:

$RUN SYS$SYSTEM:DISKQUOTA 

DISKQ>SHOW DECEDI 

DISKQ>EXIT

To give the DECEDI account a permanent quota of 100,000 blocks:

$RUN SYS$SYSTEM:SYSMAN 

SYSMAN>DISKQUOTA MODIFY DECEDI/PERMANENT=100000 

SYSMAN>EXIT

Calculating the Required Number of Processes

Once you have installed DEC/EDI you may need to modify the quota 
depending upon the number of processes you wish to run. 

To calculate the required number of processes, determine the required 
number of extra: 

•	Application file servers (XAFS) 

•	EDIFACT converters (XEDIFC) and translators (XEDIFT)

•	X12 converters (XX12C) and translators(XX12T)

•	TRADACOMS converters (XTCOMC) and translators (XTCOMT)

•	Gateways

The total number of DEC/EDI processes is the sum of the processes in 
Table 6-9 DEC/EDI Processes:

Table 6-9	 DEC/EDI Processes 

Process   

Data Server          

Communication    

Import/Export     

3780Plus Gateway  

X.400 Gateway    

OFTP Gateway       

X.25 Gateway       

X.435 Gateway        

Bisync Gateway 

EDIFACT Service

X12 Services 

TRADACOMS             

Application File     

Number 

1

1 Control

1 (optional) Gateway

1 (optional)

1 (optional)

1 (optional)

1 (optional)

 1 (optional)

1 (optional)

4 + XEDIFC + XEDIFT (optional) (incl. ODETTE)

(incl. 3 + XX12C + XX12T (optional) TDCC)

2 + XTCOMC + XTCOMT (optional)

1 + XAFS (optional) Server                           

You should add this total to the number of processes you normally run on 
your system and then add any extra processes required for layered products 
that you have installed with DEC/EDI. 

Compare this total with your current setting for the maximum number of 
processes (MAXPROCESSCNT). If necessary, increase the values of 
MAXPROCESSCNT to the total you have just calculated.

Minimum 
Recommended 
Value  

We recommend that the minimum value for MAXPROCESSCNT is 64.

Modifying Quota for the DECEDI Account

When you have calculated the number of processes you need, you may need 
to increase some of the quotas. The following sections describe how to 
calculate certain quotas on Server systems.

Calculating the WSEXTENT Value

To calculate the value of WSEXTENT, do the following:

To make sure the DEC/EDI Converter has access to enough virtual memory, 
you should set the WSEXTENT value for the DECEDI account to at least 
the following value:

•	WSEXTENT =  8,192 + (external document size * 100)

 where:

 WSEXTENT sizes are in pages (512 bytes)

 external document size is the size, in Kbytes, of the external format file 
created by the converter.

For example, for DEC/EDI to handle a 70 kilobyte document efficiently, the 
quota should be as follows:

WSEXTENT = 8,192 + (70*100) =  15192 pages



If the value of WSEXTENT that you need is larger than the default values 
for the DECEDI account, see Table 6-5 Process Account Quotas, you should 
increase the DECEDI account value. If it is smaller, keep the default value 
because other DEC/EDI components needs at least the default value for this 
process quota.

If WSEXTENT exceeds the system parameter WSMAX you should 
increase WSMAX by adding the new value to MODPARAMS.DAT and use 
AUTOGEN to modify WSMAX.

Calculating the ENQLM Value

The EDIFACT and X12 transmission file builders lock each document when 
they place it in a transmission file. The lock is released when the file is 
successfully built. 

The ENQLM quota must be large enough to cope with the maximum 
number of documents allowed in a transmission file.

EDIT PROFILE sets up various parameters which control the number of 
documents that can be placed in a transmission file. 

These are:

•	TPF MDPG L, Maximum documents per group

•	TPF MGPI L, Maximum groups per interchange

•	TPF MIPF L, Maximum interchanges per transmission

The maximum number of locks therefore needed by the transmission file 
builder for a transmission to a particular trading partner is:

MIPF l * MGPI L * MDPG L +1 (for the transmission file)

For EDIFACT, if functional groups are not used, then MGPI  L=1

Ownership of the DECEDI Account

The installation procedure creates the DECEDI account with an owner of 
"DECEDI". You should not need to change this, but if you do so, do not 
include spaces in the name of the owner. If you put spaces there, any 
subsequent reinstallation of DEC/EDI will fail.

Account privileges on the DECEDI Account

The installation procedure grants the following privileges to the DECEDI 
account:

•	NETMBX TMPBMX

The NETMBX privilege is required so that DEC/EDI processes can 
communicate.

You should not need to modify the privileges granted to the DECEDI 
account.

Defining Mapping Service Rights

Mapping Service security facilities prevent accidental insertion or loss of 
documents and reduce the risk of fraudulent use of Mapping Service 
processing. Mapping Service security facilities make use of OpenVMS 
rights identifiers.

You will need to make sure that each person who is going to use Mapping 
Service has been assigned at least one of the following rights. 

The installation procedure has already added them to the OpenVMS rights 
database, but they must be assigned to each Mapping Service user manually.

•	FBR$SUPERVISOR

•	FBR$DEVELOPMENT

•	FBR$OPERATIONS

More on 
Authorize

The OpenVMS documentation on the AUTHORIZE Utility explains how to 
assign an identifier to a user.

The Rights Database

The OpenVMS rights database provides the security facilities for Mapping 
Service. At most sites, the rights facility's system manager maintains this 
database. 

To use Mapping Service, you must be assigned one or more of the three 
Mapping Service rights categories:

1.	FBR$SUPERVISOR

 	This is the most privileged category. It provides special supervisory 
rights. With this assignment, you also have the rights permitted in the 
other two categories.

2.	FBR$DEVELOPMENT

 	This provides the next level of access development rights. This user can 
modify the Mapping Service table and run test runs, but cannot perform 
production tasks.

3.	FBR$OPERATIONS

 	Users assigned to this category generally only process documents in a 
production environment, preferably a production library.

FBR$SUPERVISOR

When assigned FBR$SUPERVISOR, you can edit the Mapping Service 
tables and set the TEST INDICATOR to LIVE. The FBR$SUPERVISOR 
category also includes the rights assigned by the FBR$DEVELOPMENT 
and FBR$OPERATIONS categories.

A user with FBR$SUPERVISOR rights is the only one who can set the 
TEST INDICATOR to LIVE, and therefore allow a Mapping Service table 
to be used for production. As such, you must create and maintain one or 
more directories that contain specifications for the files and images used in 
processing. These specifications are listed below. 

Set the protection on this directory or set of directories with the DCL SET 
PROTECTION.

Production specifications affect the following files and images:

•	Mapping Service tables. 

 The TEST INDICATOR option in the Mapping Service table should not 
be set to LIVE until the table has been copied from the development 
environment into the production library. This should not be 
FBR$LIBRARY directory but could be a subdirectory under 
FBR$HOME. The supervisor must also set the options to enable the 
audit and history points as required by the installation, and then compile 
the Mapping Service table.

•	Audit Database. 

 The audit database resides in the directory identified by the system 
logical, FBR$LIBRARY, which is defined at installation time. This 
directory should have READ permission for those with Mapping Service 
rights, plus any access for FBR$SUPERVISOR. The database must be 
created with granted rights of INSERT and READ for the EVENT 
relation.

•	Hook Shared Images. 

 Since part of Mapping Service processing can be performed in the 
customization routines at hook points, these hook shared images must be 
protected from unauthorized modification. Put these images into their 
own directory. This should not be the FBR$LIBRARY directory but 
could be a subdirectory under FBR$HOME. You can define a system 
logical, for example FBR HOOKS, to point to this directory. The 
supervisor must set the Shared Image filename in the Mapping Service 
table to point to the appropriate directory before compiling the table.

•	History files. 

 A directory should be created that has WRITE access for those with 
FBR$DEVELOPMENT and FBR$OPERATIONS rights. Specify this 
directory in the logical FBR$HISTORY to indicate where history files 
are to be written.

FBR$DEVELOPMENT

Assignment to the FBR$DEVELOPMENT category allows the user to 
create and modify Mapping Service tables using the User Interface, but the 
TEST INDICATOR option cannot be set to LIVE. This user can also 
execute the Mapping Service runtime program, but cannot use it with a 
Mapping Service table that has the TEST INDICATOR option set to LIVE. 
If for any reason a fetch for DEC/EDI obtains a LIVE document, the 
document is assigned QUIT (allowing it to be placed back in the DEC /EDI 
Application Server Available Documents Pool) and the program is aborted 
with an error message.

FBR$OPERATIONS

With this right, the user can execute the Mapping Service runtime program 
using a Mapping Service table that has the TEST INDICATOR set to LIVE. 
If the Mapping Service runtime program gets a document with a TEST 
INDICATOR not set to LIVE while processing documents with a Mapping 
Service table whose TEST INDICATOR is set to LIVE, the document will 
be aborted.

This right does not imply FBR$DEVELOPMENT rights. If this user must 
also process TEST data, then the FBR$DEVELOPMENT right must also be 
granted.

Upgrades - Data Migration

Important!

During upgrades from versions later than 1.3, the database is automatically 
migrated during the upgrade to V3.2. If upgrading from V1.3, empty files are 
created during the upgrade process, and the existing data needs to be migrated 
using the process described in this section. 

Migration Process

The following migration needs to be performed when upgrading from V1.3  
to V3.2:

•	Audit database

•	Archive database

•	Mapper database

•	TRAX gateway

A command file DECEDI$TOOLS:DECEDI$V32_MIGRATE.COM has 
been provided for this. It is strongly recommended that you create a log of 
any output produced by the migration by logging in using:

set host 0 /log 

before issuing the command.

The command file takes a single parameter which can be one of the 
following :-

•	AUDIT DB Only the audit database migration will be performed.

•	ARCHIVE DB Only the archive database migration will be performed.

•	MAPPER DB Only the mapper database migration will be performed.

•	TRAX Only the TRAX gateway will be migrated.

If no parameter is specified all actions will be performed.

Using the AUDIT DB Option

The following logicals need to be defined in 
SYS$MANAGER:DECEDI$SYLOGICALS.COM :-

•	DECEDI$AUDIT_DB must point to the new V2.1 Rdb database.

•	DECEDI$AUDIT_DB_OLD must point to the old Rdb database.

•	DECEDI$PREVIOUS_VERSION must point to the previous EDI 
version, e.g. "1.3", "2.0", etc.

These logicals should have been set up by the installation itself.

The V3.2 database, by default is created in the directory 
DECEDI$TOP:[AUDIT DB]. 

This is different from the default location of DECEDI$TOP:[AUDIT 
DATABASE] for the V1.3 or V2.0 database.

If the migration fails your old database will be unchanged so the procedure 
can be re-run after creating a new empty V3.2 database by running 
DECEDI$TOOLS:DECEDI$DB_CREATE.EXE.

Migrating from a Distributed V1.3 System

This configuration is not fully supported by the migration so there are some 
manual tasks that need to be done if you have been running with a 
distributed V1.3 system and haven't removed all documents and 
transmission files which have gone to, or originated from, remote translation 
or communication services. 

There are two possible outcomes from the migration :-

1.	Documents and transmission files identified by the migration

 	For those that can be identified from the audit trail you will see messages 
saying that these documents and transmission files have been rejected. If 
this is the case no entry will have been made for them in the V3.2 
database. When you have completed the migration all files for these 
documents and transmission files will need to be manually removed from 
the store directories.

2.	Transmission files not identified by the migration

 	If you have transmission files which are migrated to the V3.2 database 
but already exist on another node you need to cancel them if possible or, 
if they are not PURGEABLE, manually remove then using SQL before 
starting up the gateway. Otherwise you could get duplicate files sent to a 
partner or duplicate documents processed by applications.

 	Contact your support centre for more information.

Using the ARCHIVE DB Option

This parses the contents of the existing Archive Files in DECEDI$ARCH 
DATA and moves any document and/or transmission file records to the new 
Rdb Archive Database whose root is indicated by the logical 
DECEDI$ARCHIVE DB.

The files themselves remain in the Archive Store Directories, although V3.2 
does not add any further files to these directories. After performing an 
Interchange Archive these directories become empty and you should remove 
them from your system together with the archive store logicals.

Because the Archive Server now leaves archived files in the live store 
directories, you should consider increasing the number of store directories 
using the Tailoring Tool.

Using the MAPPER DB Option

This will migrate the live and test Mapper databases.

All previous FileBridge/Mapping Service databases and DEC/EDI V2.0 
Mapper databases will need to be migrated before using the DEC/EDI V3.2 
Mapper. The following logicals need to be defined:

•	FBR$LIBRARY must point to the live Mapper Rdb Database

•	FBR$TESTLIB must point to the test Mapper Rdb Database

The above logicals are defined when a minimal startup of the EDI server is 
performed, and they will remain defined after a full shutdown. 

Alternatively run the following command files:

$ @SYS$STARTUP:DECEDI$DEFINE_MAPPER_LOGICALS.COM 

$ @SYS$STARTUP:DECEDI$SET_MAPPER_DATABASE.COM

The installation procedure places the definition of FBR$LIBRARY in 
SYS$STARTUP:DECEDI$SET_MAPPER_DATABASE.COM. 

If you change the live database, the definition must be changed in this 
command file. 

FBR$TESTLIB is defined in 
SYS$STARTUP:DECEDI$DEFINE_MAPPER_LOGICALS.COM. 

If you change the test database, the definition must be changed in this 
command file.

Before viewing or using any Mapper databases, other than the two abve, 
they must be migrated using the following command:

$ @FBR$EXE:FBR$ARCHIVE_MIGRATE

All new databases created with FBR$EXE:FBR$ARCHIVE.COM will be 
of the new structure.

Using the TRAX Option

This option modifies existing TRAX transmission files to enable automatic 
tracking of transmission files versus TRADANET document references. To 
perform the migration you must have your TRADANET User Number 
(TUN).

Additional Post Installation Tasks for Migration from V1.3A

Node Configuration

It is recommended that you check your node configuration using the 
Interchange command EDIT CONFIGURATION as follows :-

•	Select Maintain Services
This should list the services you require on the V3.2 server. An entry for 
application services is no longer required for running applications so this 
will have been removed. If the installation detected remote V1.3 
application service nodes it will have added an entry for V3.2 support 
services. Any remote application nodes will have been registered (see 
Register Nodes below).

•	Select Register Applications
This will show the applications which supply documents to the 
translation services as on your V1.3 system. The node name no longer 
appears, instead the application will have been registered for the node 
(see Register Nodes below).

•	Select Register Site To Site Agreements
This is a new option in EDIT CONFIGURATION which replaces the 
ROUTE commands used in V1.3. All entries on this display will be 
handled as site to site documents. Any entries in your V1.3 Site Routing 
Table which were identified as not being site to site will have been 
removed. As above, the node name no longer appears, instead the partner 
application will have been registered for the node (see Register Nodes 
below).

•	Select Register Nodes
This is a new option in EDIT CONFIGURATION which is used to 
register remote nodes together with the applications which will run on 
those nodes. The current node also has an entry. Select each node and 
then select the Register Client Applications option. This list of 
applications should include all applications for that node and if the node 
is a remote V1.3 node they will be marked as V1.3.

EDIFACT UNS Segment Handling Changes

DEC/EDI document definitions now cater for changes in document areas 
that are not denoted by a UNS segment. This has been done by including the 
UNS segments in the document definition itself. The EDIFACT Converter 
now uses the document definition to determine if the UNS segment needs to 
be inserted in between areas. 

The areas in the document definition can now exactly match those specified 
by the Edifact standard.

When upgrading to DEC/EDI V3.2 the UNS segments are added to all 
EDIFACT document definition tables. 

All standard tables will have the UNS segment located as defined by the 
EDIFACT standard. 

For private and trading partner specific document definitions the UNS 
segment will be inserted between the areas in the document.

The Table Extract and Load (TEL) Utility will add the UNS segments when 
loading a document from a V1.3 system.

As a result of this the number of areas in the standard definition for certain 
documents will have changed. 

In order that existing applications do not fail, private copies of these 
documents are created during the installation unless one already exists.

For Edifact 91.1, 91.2 and 92.1 the documents concerned are :-

BANSTA    CREEXT   DOCINF   PAYDUC   REMADV  CONEST 

DELJIT      INVOIC     PAYEXT   REQOTE  CONNIT    DESADV

INVRPT     PAYMUL   SLSRPT   CONPVA  DIRDEB     ORDCHG

PRICAT     STATAC    CONQVA  DOCADV  ORDERS    QALITY

SUPMAN   CONTEN   DOCAPP  ORDRSP   QUOTES 

You should change the applications to reflect the correct definition of the 
document. 

If you are using the data label API interface this means making sure that the 
$GROUP/$SEND _GROUP levels match the areas as defined by the 
EDIFACT standard.  The private definition can then be deleted. 

If you are using Mapping Service, you need to re-import the document 
definitions.

Files Created During Installation

For more details of the files installed by the installation of DEC/EDI,  please 
refer to Appendix J OpenVMS Installation - Directory and File Listing.
Chapter 7   Other Platforms - Installation of 
DEC/EDI Application Client   

This chapter describes installation of DEC/EDI Application Client onto the 
following platforms:

•	Sun  Solaris

•	HP-UX

Introduction

The preparations necessary for a successful installation are described and 
then the installation process is detailed. Some post-installation tasks are 
included for information.

			Preparing to Install on HP-UX

This chapter describes the tasks that you should carry out before installing 
the DEC/EDI Client on an HP-UX system. It also describes the prerequisites 
for installing the DEC/EDI Client.

Reading the Online Release Notes

DEC/EDI Application Client provides online release notes. DIGITAL 
strongly recommends that you read the release notes before using the 
product. The release notes may contain information about changes to the 
application.The release notes for DEC/EDI Application Client are in the 
following file:

	/usr/doc/decedi_client_release_notes.txt

You can use the following command to read the release notes after 
DEC/EDI Application Client is installed:

# more /usr/doc/decedi_client_release_notes.txt

Checking the Software Distribution Kit

Use the Bill of Materials (BOM) to check the contents of your DEC/EDI 
Application Client software distribution kit.

If your software distribution kit is damaged or incomplete, contact your 
DIGITAL representative.

Checking Installation Procedure Requirements

This Chapter discusses requirements for installing DEC/EDI Application 
Client. Installing DEC/EDI Application Client, including running the 
Installation Verification Procedure (IVP), which takes approximately 2 
minutes, depending on your type of media and system configuration.

Checking Login Privileges

You must have superuser privileges to install the DEC/EDI Application 
Client software.

	Checking Hardware Requirements

To install DEC/EDI Application Client, you need the following hardware:

•	Terminal

You can use either a hardcopy or video terminal to communicate with the 
operating system and respond to prompts from the installation procedure. 
See the DEC/EDI Application Client Software Product Description (SPD) 
for additional hardware requirements.

Checking Software Requirements

DEC/EDI Application Client V3.2 requires the HP-UX operating system 
(ux_n) or Version 10.01.

This operating system includes TCP/IP, which must be configured as 
described in an applicable HP UNIX installation guide. DEC/EDI 
Application Client also requires that an Network Interface subset is loaded 
on the system where you install DEC/EDI Application Client.

Refer to the Software Product Description (SPD) for details about the 
version number required for this release. If you wish to use the old ACAS-
style interfaces, you also need to install the ACAS compatibility subset: 
acas.obj. Refer to the SPD for details of the version number.

CORBA Support

For DEC/EDI V2.1D OpenVMS and DEC/EDI 3.1A DIGITAL UNIX 
Servers onwards, only CORBA based clients are supported. DIGITAL 
strongly recommends not to install the ACAS compatibility kits, or to select 
the ACAS based clients unless you absolutely have to connect to an older 
version of the DEC/EDI Server.

Determining Which Subsets to Load

You must choose which DEC/EDI Application Client subsets you want to 
load. The subsets have the following titles:

•	DEC/EDI V3.2 HP-UX Client.

 The Client software.

•	DEC/EDI V3.2 HP-UX Client Man Pages.

 Reference manual pages for Client's command line interface. 

Determining Disk Space Requirements

The Table below list the disk space requirements for loading DEC/EDI 
Application Client software subsets: you need this space available on the 
disks where you choose to load the software subsets. The figures shown are 
peak requirements. After installation, slightly less disk space is required.  
The tables list the disk space requirements per directory which is relevant if 
you are doing installations on systems where these directories are mount-
points for different disk partitions.

Table 7-1	 Space Required for Client and Client Man Pages	

Directory	

/usr

/var

/etc

Total

Client (Kb)

500

110

50

660

Client Man Pages (Kb)

100

-

-

100

Using these disk space requirements, total the values for the subsets you will 
load in each directory. Compare the space required for subsets with the free 
space currently on the disks where DEC/EDI Application Client files will 
reside.

To determine the amount of disk space available on your system, enter the df 
command. The available spacelisted  must accommodate the requirements 
listed in the tables above.

Backing Up Your System Disk

DIGITAL recommends that you back up your file systems before installing 
any software. For information about backing up your file systems, see the 
HP-UX system documentation.

Preparing to Install on Sun Solaris

This section describes the tasks that you should carry out before installing 
the DEC/EDI Client on an Sun Solaris system. It also describes the 
prereqisites for installing the DEC/EDI Client.

Reading the Online Release Notes

DEC/EDI Application Client provides online release notes. DIGITAL 
strongly recommends that you read the release notes before using the 
product. The release notes may contain information about changes to the 
application.

The release notes for DEC/EDI Application Client are in the following file:

	/usr/doc/decedi_client_release_notes.txt

You can use the following command to read the release notes after 
DEC/EDI Application Client is installed:

# more /usr/doc/decedi_client_release_notes.txt

Checking the Software Distribution Kit

Use the Bill of Materials (BOM) to check the contents of your DEC/EDI 
Application Client software distribution kit. If your software distribution kit 
is damaged or incomplete, contact your DIGITAL representative.

Checking Installation Procedure Requirements

This Chapter discusses requirements for installing DEC/EDI Application 
Client.  Installing DEC/EDI Application Client, including running the 
Installation Verification Procedure (IVP), takes approximately 1 minute, 
depending on your type of media and system configuration.

Checking Login Privileges

You must have superuser privileges to install the DEC/EDI Application 
Client software.



Checking Hardware Requirements

To install DEC/EDI Application Client, you need the following hardware:

•	Terminal

You can use either a hardcopy or video terminal to communicate with the 
operating system and respond to prompts from the installation procedure. 
See the DEC/EDI Application Client Software Product Description (SPD) 
for additional hardware requirements.

Checking Software Requirements

DEC/EDI Application Client V3.2 requires the Sun Solaris operating system 
V2.4.

This operating system includes TCP/IP, which must be configured as 
described in the applicable Sun Solaris installation guidebook.

DEC/EDI Application Client also requires that ObjectBroker is loaded on 
the system where you install DEC/EDI Application Client. Refer to the 
Software Product Description (SPD) for details on the version number that 
you require with this release.

Checking Whether These Subsets Are Loaded

To check whether the required subsets are loaded, do the following:

1.	Log in to the system where you will install DEC/EDI Application Client.

2.	To see if Network Interface is installed, for example, enter the following 
command:

 		# pkginfo | grep OBB

 	Check the displayed row for "ObjectBroker Run-Time". If it is not 
installed, then you must install it before installation of the DEC/EDI 
client.

Determining Which Subsets to Load

You must choose which DEC/EDI Application Client subsets you want to 
load. 

The subsets have the following titles:

•	DEC/EDI V3.2 Sun Solaris Client.

 The Client software.

•	DEC/EDI V3.2 Sun Solaris Client Man Pages. 

 Reference manual pages for Client's command line interface. 

Determining Disk Space Requirements

The tables below list the disk space requirements for loading DEC/EDI 
Application Client software subsets: you need this space available on the 
disks where you choose to load the software subsets.

The figures shown in these tables are peak requirements. After installation, 
slightly less disk space is required. The tables list the disk space 
requirements per directory. This is relevant if you are doing installations on 
systems where these directories are mount points for different disk 
partitions.

Table 7-2	 Space Required for Client and Client Man Pages

Directory	

/usr

/var

/etc

Total

Client (Kb)

500

110

50

660

Client Man Pages (Kb)

100

-

-

100

Using these disk space requirements, total the values for the subsets you will 
load in each directory. Compare the space required for subsets with the free 
space currently on the disks where DEC/EDI Application Client files will 
reside. To determine the amount of disk space available on your system, 
enter the df command. 

Backing Up Your System Disk

DIGITAL recommends that you back up your file systems before installing 
any software. For information about backing up your file systems, see the 
Sun Solaris system documentation.

	Installing the DEC/EDI Client

This section describes how to install the DEC/EDI Application Client.

Before you start the installation, read Chapter 5 UNIX - Installation of 
DEC/EDI Server and Application Client, The first part of this chapter 
describes how to enter (setld) to start the installation procedure. The 
way you do this depends on whether you are installing:

•	Locally, using CD-ROM media

•	From a server area 

•	From tape 



Installing From CD-ROM Consolidated Distribution Media

This procedure is for Sun Solaris only. It loads DEC/EDI Application Client 
files on to a disk belonging to the system where you perform the installation. 
When DEC/EDI Application Client is run, its executable images are mapped 
into memory on your system.

Follow these steps to install DEC/EDI Application Client from CDROM 
media:

1. Mount the media on the appropriate disk drive.

2. Log in as superuser (login name root) to the system where you will install 
the DEC/EDI Application Client.

3. Move to an area on disk (for example, /kits) where you have some space 
to unpack the tar file. 	# cd /kits You need approximately 800 Kb.

4. Copy the files from the CD-ROM onto disk by using the tar command:

 	# tar -
xvf/cdrom/sun_solaris/decedi0320_sun_client.tar

This creates an output directory from which you can install the kit. The tar 
command also puts a copy of the setld command in the /etc area. Use it to 
install the client software, as follows:

 		# /etc/setld -l output

The installation procedure now displays the names of the DEC/EDI 
Application Client subsets, and asks you to specify the subsets you want to 
load.

	See Chapter 4 to continue the installation.

Installing From an RIS Distribution Area

If you are installing DEC/EDI Application Client subsets that reside in an 
etc/ris RIS distribution area on a remote system, follow these steps:

1.	Log in as superuser (login name  root) to the system where you will 
install DEC/EDI Application Client.

2.	Make sure you are at the root directory (/) by entering the following 
command:

 		#cd /

3.	Enter a setld command that requests the load function -l option and 
identifies the system where the DEC/EDI Application Client subsets are 
located. For example, if you are loading DEC/EDI Application Client 
subsets from a RIS distribution area on node orion, enter the following:

 		#setld -l orion:

 	Remote Installation Services now displays a menu that lists all the 
software subsets available to you and asks you to specify the subsets you 
want to load.

See Running the Installation Procedure on page 7-13 to continue the 
installation.

Installing From Tape

The Application Client software may be supplied on tape: 4mm DDS DAT 
or QIC tape. Before installing from either of these tapes, you have to move 
the tape contents onto disk, using the tar) command. You then install the 
DEC/EDI Application Client subsets, using the setld) command.

You do all this as follows:

1.		Insert the tape into the tape drive, and make sure it is rewound.

 	For example, if your drive is called nrmt0h), you would enter the 
following command:

 		·		# mt -f /dev/nrmt0h rewind

2.				Log in as superuser (login name root)) to the system where you will 			
install the DEC/EDI Application Client.

3.				Create a directory called /kit) on a disk where there is enough space to 
hold the software; then move to this directory:

 		·		# mkdir /kit # cd /kit

4.				Restore the tape contents onto disk. For example, if your drive is called 
nrmt0h), you would enter the following command:

 		·		# tar -xvf /dev/nrmt0h 	·		This creates a disk directory 
called /output) from which you will 			install the 
software.

5.				Enter a setld) command that requests the load function (-l)), and 
identifies the directory in the mounted file system where DEC/EDI 
Application Client subsets are located. For example:

 		·		# setld -l /kit/output

 	You may need to use the Bourne shell sh) to run setld). You may need 			to 
specify the full pathname (/etc/setld) to run setld) as well. (The setld) 
command is provided as part of the DEC/EDI Client software).

	See Running the Installation Procedure on page 7-13 to continue the 
installation.

Running the Installation Procedure

	Once you have entered the setld) command to install the software, the 
system takes you through a dialogue in which you are prompted for details 
about how the installation is to take place. 

At each prompt during the dialogue, you can do any of the following:

1.	Enter your reply and press <KEY>(Return).

2.	Enter ? for more information about what is required.

3.	Abort the installation by pressing <KEY>(Ctrl/Y).

There are  some minor differences in the Sun Solaris and HP-UX dialogues. 
For a full  listing of the dialogues, see Appendix G Sun Solaris Client or 
Appendix H HP-UX Client, depending on which platform you are installing 
on.

If you encounter any failures during the installation dialogue, see 
(error_messages_app).

Specifying Subsets

You are prompted to specify which DEC/EDI Application Client subsets 
you want to load. For example, when installing the DEC/EDI Client on Sun 
Solaris, the dialogue is as follows:

		Enter Subset Selections

	The subsets listed below are optional:

 	1 DEC/EDI V3.2 Sun Solaris Client      

 	2 DEC/EDI V3.2 Sun Solaris Man Pages

 	3 All of the Above

 	4 None of the Above

 	5 Exit without installing subsets

Enter your choice(s):

If you specify more than one number at the prompt, separate each number 
with a space, not a comma.

	Note

Note that if you are installing from a RIS distribution area, the number of 
subsets can vary, depending on what products are available in the RIS area 
and how many subsets they have.

Next, the dialogue lets you verify your choice. For example, if you enter 

3) in response to the previous prompt, you will see the following display:

 	You are installing the following optional subsets:

 	DEC/EDI V3.2 Sun Solaris Client         DEC/EDI V3.2 
Sun Solaris Man Pages	Is this correct? (y/n):

If the displayed subsets are the ones you want to load, enter y.

If the displayed subsets are not the ones you intended to choose, enter n. 

In this case, the subset selection menu is again displayed and you can correct 
your choice of optional subsets.

	Specifying Name and Type of Server

You are prompted to specify the name of the DEC/EDI Server to which the 
DEC/EDI Client is to be linked.

Configuring ObjectBroker

Enter the name of the DEC/EDI Server [OBB_LOCAL] : server.node.com 

...creating repository ...registering servers 	
...creating client object ...creating context object

	ObjectBroker Configuration Complete

	Press <Return> to continue.

If the name of the DEC/EDI Server node has already been entered on an 
earlier installation, then you are prompted to say whether these details have 
changed since then. Enter y if the details have changed; you are then 
prompted for the new details. For the name of the Server, you need to enter 
the full node name.

If this were an HP-UX client installation, and you specified that ACAS-style 
interfaces were to be used, you would be prompted for the type of server as 
well as the name of the server. 

For example:

1.	OpenVMS (AXP)

2.	OpenVMS (VAX)

3.	DIGITAL UNIX

 	Enter the type of the server (1-3) 

Messages Displayed During the Loading Process

The installation procedure loads and verifies the selected DEC/EDI 
Application Client subsets. During this process, you see a sequence of 
messages on the screen.

When you see the "Verifying" message during the subset installation, the 
installation procedure is checking to see that the files are copied correctly; it 
is not an Installation Verification Procedure (IVP) message.

After Client Installation

This section explains what you need to do after the installation to make   
DEC/EDI Application Client ready for use.

After the Client Installation

After installing the DEC/EDI Client, you must:

•	Set up proxies for ObjectBroker

	You are strongly advised to:

•	Run the DEC/EDI Installation Verification Procedure (IVP) ·    

•	Delete any older DEC/EDI client from your system

Refer to Part 3 for advice on any database migration tasks that you may need 
to complete

Set up Proxies for Client to Server for ObjectBroker

Proxy access must be set up for any remote Application Client nodes that 
will be used to access the DEC/EDI server. This proxy access also allows 
files to be copied between the client and the server.

First, you must ensure that the server node may be reached using the name 
or the alias by the ObjectBroker agent. You can test this by using the 
ObjectBroker network test, obbntst. You run obbntst on both the client and 
the server at the same time as follows.

On the Server node, enter the following command:

# obbntst -s

This gives you a connection identifier that you will use on the client side.

On the Client node, enter the following command:

# obbntst -n server-node-name -c connection-id

If this test fails, verify the network addresses on both the client and server. 
Also check that the server-node-name (or alias) is defined on the client.

Next, initiate these tests again in the opposite direction. That is, run the 
server node test on the client and the client node test on the server. This is 
important because it verifies that data can be passed in either direction, 
which the TRADE POST and TRADE FETCH commands do.

Once you have verified that the client and server recognize each other at the 
network level, you can add the proxies. Note that proxies need to be added 
on both the client and server side.

If you are a UNIX-based requester, proxies may not be recognised by name. 
If this happens, you need to use your user's id (uid). To obtain the uid from 
the UNIX system, use the id command. On the client node, you must add a 
proxy for decedi, so that it may access the client files to be copied to or from 
the server. You need to ensure that the local user account has the following 
access privileges:

•	Read access to any application files

•	Write access to the directory

It may be necessary to enter the node name in both the long and short forms. 
It is safer to make this a habit.

For example, to add a proxy for the server, edisrv.reo.dec.com, on the client 
node, ediclt.vbo.dec.com, for client user, gesshoo, enter the following 
commands. 

On the client node:

# obbadpxy -h edisrv.reo.dec.com -u decedi johnb # 
obbadpxy -h edisrv -u decedi gesshoo

	On the server node:

# obbadpxy -h ediclt.vbo.dec.com -u `*' decedi # 
obbadpxy -h ediclt -u `*' decedi

You can show the proxies by using the ObjectBroker command, 
obbshTesting Proxies

To test that your proxy works, try a simple request to the agent on the node 
to which you have added proxy access. For example:

	# obbmsho -A -n <remote_node_name>

If you have set up your proxies successfully to <remote_node_name>, 
the reply to your request should tell you the agent's details.If your proxy has 
not been set correctly, the reply will tell you that you are not authorized.

Running the Installation Verification Procedure

After installing DEC/EDI Application Client, you can run the Installation 
Verification Procedure (IVP) independently to verify that the software is 
available on your system. You might also want to run the IVP after a system 
failure to be sure that users can access DEC/EDI Application Client.

The DEC/EDI Application Client IVP verifies the installation as follows:

·    Checks that the client subset is installed.

To run the IVP after an installation, enter the following command, where 
subsetname can be any DEC/EDI Application Client subset:

	# setld -v subsetname

For a sample DEC/EDI Application Client IVP, see appropriate: 

•	(sample_listing_ivp_osf) 

•	(sample_listing_ivp_ux).

If the verification process fails, look in the 
/var/adm/smlogs/fverify.log file for information to help 
diagnose the problem.

Deleting DEC/EDI Application Client from Your System

If you must remove a version of DEC/EDI Application Client from your 
system, delete each subset that you previously installed. To delete subsets:

1.	Log in as superuser (login name root)).

2.	Make sure you are at the root directory (/) by entering the following 
command:

 	# cd /

3.	Enter the following setld) command (you may need to use the Bourne 
shell sh to run setld):

 	# setld -i | grep DEDI

For example:

 	# setld -i | grep DEDI DEDICLT200 DEC/EDI OSF/1 UNIX 
Client DEDICLT210 DEC/EDI V2.1 OSF/1 UNIX Client 

DEDICLT310 installed DEC/EDI V3.1 DIGITAL UNIX Client 

 	DEDIMAN200 DEC/EDI OSF/1 UNIX Client Man Pages 
DEDIMAN210 DEC/EDI V2.1 OSF/1 UNIX Client Man Pages 
DEDIMAN310 	installed DEC/EDI V3.1 DIGITAL UNIX Client 
Man Pages

4.	Look for the word "installed" in the listing produced, and then delete the 
installed subsets. 

 For example:

 		# setld -d DEDICLT310 DEDIMAN310

 	DEC/EDI Client Man Pages (DIGITAL UNIX):- Removing 
softlinks 	... done.

 	Deleting "DEC/EDI V3.1 DIGITAL UNIX Client Man Pages"

 		(DEDIMAN310).

 		**DEC/EDI Client Man Pages (DIGITAL UNIX) has been 
deleted

 	**DEC/EDI Client (DIGITAL UNIX):- Removing softlinks  
... done. Deleting 

 	"DEC/EDI V3.1 DIGITAL UNIX Client" (DEDICLT310). 
**DEC/EDI Client (DIGITAL UNIX) has been deleted

 		** #
Chapter 8   Managing  Message Updates

This chapter describes the installation of DEC/EDI Message Updates by the 
System Manager or Administrator, onto the following platforms:

•	DIGITAL UNIX

•	OpenVMS

Introduction

Messaging standards are normally input during the installation process. This 
is covered in the following chapters:

•	Chapter 5 UNIX - Installation of DEC/EDI Server and Application Client

•	Chapter 6 OpenVMS - Installation of Server and Client

The following features which are provided through the Message Update 
Services are covered in this chapter as shown below:

•	Installing new versions of an EDI Standard. See Installing New Versions 
of EDI Standards on page 8-3.

•	Creating a new version from an existing version. See Copying Existing 
Versions to New Ones on page 8-4.

•	Copying data labels for a version of a standard to a different versions. 
See Copying Data Labels Between Versions on page 8-4.

•	Deleting a version of an EDI standard. See Deleting a Version of an EDI 
Standard on page 8-4.

Using the Message Update Services

DIGITAL UNIX

The Message Update Service Tool  is installed in the directory /usr/sbin 
with the name decedi_must.

To invoke the Message Update Service Tool:

•	The DEC/EDI database must exist.

•	You must be logged into the root account

# decedi_must

When you run the tool, you are presented with a menu of options (See 
DIGITAL UNIX and OpenVMS on page 8-3).

OpenVMS

To invoke the Message Update Service Tool:

•	The DEC/EDI data server must be running.

•	You must be logged into an authorised account

$ RUN DECEDI$TOOLS:DECEDI$MESSAGE_UPDATES.EXE

When you run the tool, you are presented with a menu of options (See 
DIGITAL UNIX and OpenVMS on page 8-3).

DIGITAL UNIX and OpenVMS

The following sections describe each of the options.

Installing New Versions of EDI Standards

If you elect to install new versions of EDI standards from the messages 
directory you are presented with a menu of all of the standard version files 
installed on your Server:

You can choose to install one version of a standard at a time, or all versions 
of a standard. Installation of a version of standard involves translating the 
standard definition in the supplied IMPDEF message file into DEC/EDI 
format. This may be time consuming.

If multiple versions of a standard are required, it can be more efficient to 
select ALL versions of a standard, and leave the installation running. 
Versions of standards that are not required can be removed by using the 
delete version option.

If a selected version already exists in the database, then you are asked if the 
installation should continue.

Once a version of a standard has been installed, that version can not be used 
by DEC/EDI until Data Labels have been defined for that version. This is 
done by using the Data Label Generator. When the exit option is selected 
from the install menu, a reminder about Data Labels is displayed on the 
screen.

If a problem is detected during the installation of a version of a standard 
then the Message Update Service Tool ensures that the standards database is 
not left in a corrupt state. It does this by removing any parts of the standard 
definition that had been installed by the installation process.

Copying Existing Versions to New Ones

If you elect to copy an existing version of a standard to a new version of the 
same standard then a menu listing all of the versions currently installed on 
DEC/EDI is displayed.

On selecting a version of a standard to copy you are prompted for the name 
of the new version to be created. The DEC/EDI Message Update Service 
Tool then copies the existing version of the standard to the new version.

Copying Data Labels Between Versions

If you elect to copy the Data Labels associated with one version of a 
standard to a different version of the same standard, a menu is displayed, 
listing all of the versions currently installed.

On selecting a version to copy from, you are prompted for a version to copy 
to.

Deleting a Version of an EDI Standard

If you elect to delete a version of a standard, then a menu is displayed, 
listing all of the versions that are currently installed.

On selecting a version to delete, the specified version is deleted, and a menu 
of remaining standards and versions is displayed. Enter the menu number of 
the standard and version to remove.Before deleting the a version of a 
standard, the Message Update Service Tool searches all of the trading 
partner profiles on the Server for any that use the specified standard and 
version. 

If any profiles are found then the tool displays a warning message, and 
prompts you to indicate whether the delete processing should continue.

Dealing with Recovery

The DEC/EDI Message Update Service Tool has built-in recovery 
processing to prevent standards definitions in the database from becoming 
corrupt.

If, for any reason, execution of the Message Update Service Tool is halted 
while it is updating the database, then it is likely that the database will have 
been corrupted. 

When it is next run, the tool detects that the database is corrupt. You are 
offered the choice of continuing with the action that the tool was performing 
at the time of interruption, or removing the corrupt version from the 
database.

Where to Look If Things Go Wrong

If problems occur while you are using the Message Update Service Tool, 
error messages are recorded in the Message Update Services Log File. This 
file is named DECEDI_MUS.LOG and it is created in your default directory.

If the Message Update Service Tool detects an error, and a log file does not 
already exist in your directory, a new log file is created, and the error 
message appended to the new file. 

If a log file does exist in your default directory, then the error is appended to 
the existing file.

The log file may contain the following classes of message:

•	%MUS-E- : Error Messages.

•	%MUS-W- : Warning Messages.

•	%MUS-I- : Informational Messages.

The main use of the log file is to aid your DEC/EDI Support centre in 
solving any problems that occur. 

If a log file is created during the execution of the DEC/EDI Message Update 
Service Tool, and it contains messages other than informational messages, 
then it is recommended that you contact your DEC/EDI Support centre.
Chapter 9   Installing DEC/EDI Cockpit and 
CommandCenter

This chapter describes the installation of DEC/EDI Cockpit and 
CommandCenter, by the System Manager or Administrator, onto PCs 
running the following:

•	Windows 3.1, 3.11

•	Windows 95/NT

Pre-Installation Tasks

In preparing to install a Cockpit or a CommandCenter kit, there are three 
groups of tasks to complete:

•	Check the contents of your Cockpit or CommandCenter kit

•	Make sure that you have at least the pre-requisite hardware to run 
Cockpit or CommandCenter 

•	Make sure that pre-requisite software applications are installed correctly 
on your computer setup.

Check your Cockpit or CommandCenter Kit

There are two kits:

•	The CommandCenter kit

•	The Cockpit kit

There are two options in each kit: a 16-bit option and a 32-bit option. You 
use the 16-bit option in a Windows 3.1 or Windows for Workgroups setup. 
You use the 32-bit option in a Windows 95 or NT setup.

Note that Cockpit and Commandcenter kits are separately ordered items.

CommandCenter Kit

The CommandCenter kit contains the following components: 

•	CommandCenter  (including Cockpit)

•	Online Documentation (for the server) 

•	Acrobat Reader (for access to the online documentation)

•	InstallShield Express Professional (for installing/deinstalling DEC/EDI 
CommandCenter components) 

•	Win32s.

Cockpit Kit

The Cockpit kit contains the following components:

•	Cockpit

•	InstallShield Express Professional



Check for Prerequisite Hardware

The products have the following hardware requirements:

•	80486sx processor or better.

•	VGA monitor or better (SVGA is recommended for CommandCenter).

•	8 Mb or more of main memory (RAM) for either Windows V3.1 or 3.11 
or Windows 95. 16 Mb are recommended.

 16 Mb of main memory for Windows NT. 32 Mb are recommended.

•	Sufficient hard disk space to `unpack' the DEC/EDI components before 
they are installed. The demand for disk space during installation is 
approximately double that occupied by each component when 
installation is complete. The disk space requirements are:

–	 Cockpit requires 3 Mb. Therefore, during installation, you need 6 
Mb.

–	 CommandCenter requires 8 Mb, plus 3 Mb for the Win32s software, 
if this is not already installed. Therefore, you may require up to 22 
Mb.

 In total, you may require up to 28 Mb of hard disk space during 
installation.

•	A CD-ROM reader (for CommandCenter only)

•	A LAN connection.

•	A mouse or compatible pointing device.

Check for Prerequisite Software

The following software must be installed and running on the personal 
computer before you install Cockpit or CommandCenter. You should install 
these products in the order in which they are listed:

•	MS-DOS, Version 6.0 or later (not required for Windows 95 or Windows 
NT platforms).

•	Microsoft Windows Version 3.1, Windows for Workgroups Version 3.11, 
Windows 95 or Windows NT.

 If you intend to use Windows Version 3.1 or Windows for Workgroups 
Version 3.11, you must install Microsoft Win32s. The 32-bit 
environment is required by CommandCenter.

 If you intend to use either Windows 95 or Windows NT, you do not need 
to install Win32s. (These platforms are 32-bit platforms.)   

•	Pathworks for DOS and Windows, Version 5.0 or later, configured to 
provide TCP/IP networking services.  You do not need this if you are 
using Windows 95 or Windows NT: these platforms provide their own 
TCP/IP support.

 It is possible to use networking products other than Pathworks to provide 
the TCP/IP network, provided the product presents an interface 
compatible with the Windows Sockets specification. Contact your 
DEC/EDI service provider for more details.

•	(Optional) ObjectBroker Version 2.6.

Rdb

•	Oracle ODBC driver for Rdb,  Version 2.10.11 for Microsoft Windows.

OnLine...

•	INFORMIX-NET for Windows, Version 5.01.

...OnLine

•	INTERSOLV DataDirect ODBC driver for INFORMIX5. Version 2.10 
for a 16-bit environment. The version for a 32-bit environment is 
INFORMIX CLI Version 2.50.

Oracle7

Supported Oracle7 and SQL*NET combinations are outlined in the 
following short sections:

On Windows 3.1:

•	Oracle7 ODBC driver, Version 1.11.1.5 or higher 	

•	Oracle SQL*NET V2, Version 2.2.2.0.1A or higher 

•		Oracle TCP/IP Protocol Adapter (V2), Version 2.2.2.0.2C or higher

On Windows95:

•	Oracle7 ODBC driver (32 bit), Version 1.13.5.0.0A or higher 	

•	Oracle SQL*NET Client, Version 2.2.2.1.0A or higher 	Oracle TCP/IP, 
Version 1.1.6.9 or higher 	

•	Oracle7 Required Support Files 7.2.2.3.1 or higher

On Windows NT:

•		Oracle 7 ODBC driver, Version 1.13.5.0.0A or higher 	

•	Oracle SQL*NET Client, Version 2.2.2.1.0 or higher 	

•	Oracle TCP/IP Protocol Adapter (V2), Version 2.2.2.1.0 or higher

Backup your Hard Disk

Before installing Cockpit or CommandCenter on your PC, it is  
recommended that you backup the disk or disks on to which you will do the 
installation.

In addition to the above, you need to ensure that your DEC/EDI Server node 
already has the DEC/EDI V3.2 software correctly installed.

The following section provides some additional notes on installing the 
database access components.

Additional Notes on Installing Pre-requisite Software

OnLine...

The information in this section applies only to Windows V3.1and 3.11 
platforms.

If you are using an INFORMIX-OnLine database for your Server, you must 
install the INFORMIX-NET product before installing the Informix ODBC 
driver.

Instructions for installing INFORMIX-NET are provided in the INFORMIX 
Windows Products Installation Guide.

After you have installed INFORMIX-NET, you need to configure it. You do 
this by running the Informix setnet utility. 

Note: If you are using a 32-bit environment, you need to have INFORMIX 
CLI Version 2.50. Its configuration is not described in this guide. Instead, 
refer to the documentation supplied with the product.

Running  Informix Setnet Utility

Run the utility by selecting its icon from the Informix products program 
group created when you installed INFORMIX-NET. The utility presents a 
dialog box. Take the following action:

1.	On the first screen select tcp-ip from the values provided for 
Protocolname. All other fields on this screen should be blanked out.

2.	Select the More button to get a new set of fields.

3.	Enable the following two fields: ConnChecker and ShowCheckerIcon. 

 	These settings instruct the INFORMIX-NET software to perform regular 
checks on network connections that are in use when you run 
CommandCenter or Cockpit. The ConnChecker looks for any 
connections that have become redundant because the application that 
was using them has terminated unexpectedly; for example, because you 
pressed <CTRL-ALT-DELETE>. Any such connections are terminated 
and the resources used by the connection are made available to other 
applications. Without making these settings, you can find the network 
resources on your PC become used up, and other PC applications may be 
prevented from running.

4.	Save these changes.

These are all you should need to configure for INFORMIX-NET.

Further Information on INFORMIX-NET Software

For more information on configuring, using, and troubleshooting the 
INFORMIX-NET software. see the INFORMIX-NET for Windows 
Configuration Guide.

Before you install the ODBC driver for INFORMIX5, you should restart 
your PC. This allows the INFORMIX-NET installation changes to take 
effect.

Installation of the ODBC driver for INFORMIX5 is described in the 
readme.hlp file provided on the first disk of the INTERSOLV DataDirect 
Database Drivers kit. Read the information provided in that file for 
information on performing the installation.

During the installation, you are presented with a dialog that lists the Install 
Directory and several other options. From this dialog, pressing Select 
produces a list of all the ODBC drivers available in the kit. Select Clear All 
and then select the INTERSOLV INFORMIX5 driver. Press OK to continue.  
You may see file conflict errors appearing if you have other ODBC drivers 
installed on your PC. If this happens press skip.

At the end of the installation, you are asked whether you wish to Configure 
Data Sources. Do not select this option. When you install Cockpit or 
CommandCenter, the ODBC driver is configured automatically for use with 
DEC/EDI.

...OnLine

If you install, ObjectBroker you must set the correct current network 
configuration. A dialog with a list of network configurations will be 
presented to you. Do the following:

•	Select the Microsoft TCP/IP-Only Configuration option to make it 
current.

Pre-installation Tasks for Informix on the PC 

If you wish to use Informix as your database, you will need to carry out the 
following pre-installation tasks:

1.	Run the SetNet utility

 	Select the "Server Information" Tab and enter the following details. The 
node name should be the long form, including the domain name.

 	    Informix Server     decedi_db

 	    HostName            <nodename>.company.com

 	    Protocolname        select onsoctcp from the drop-down list

 	    Service Name        decedi_pc

2.	Press the "Make Default Server" button, and press "Apply".

 	Answer "Yes" to Define New Informix Server.

3.	Select the "Environment" tab, scroll down and select the 
INFORMIXSQLHOSTS environment variable.

 	In the Edit Environment variable box, enter the name of your PC, 
preceded by two backslashes. For example, if your PC host name is 
mynode, enter the following:

 	\\mynode and press the "Set" button.

4.	Click OK to confirm, and select No, as you do not wish to set up the 
ODBC data sources at this stage.

5.	After rebooting the PC, and installing the CommandCenter, you should 
define or edit the server definition from within the CommandCenter 
configuration utility, or one of the CommandCenter applications, which 
will automatically set up the required ODBC data sources.

6.	Remember to add the entry for the decedi_pc service to the TCP/IP 
services file, as described in the Post-Installation tasks. 

Pre-Installation Tasks for Oracle 7 on the PC

 	If you want to use Oracle 7 as your preferred database, you will need to 
carry out the following pre-installation tasks:

1.	Run the SQL*Net Easy Configuration utility, which is part of the Oracle 
for Windows program group, to add an alias for the DEC/EDI database 
as follows:

2.	Select the "Add Database Alias" option, and click OK

3.	Enter the following details, substituting the actual host name of the 
DEC/EDI server node in place of <nodename>

 	Database Alias: <nodename>_decedidb

 	The node name should be the short form. For example, for 
edipc.domain.com, use edipc.

4.	Enter the full address of the TCP/IP Host name, and the database 
instance.

 	TCP/IP Host Name:  <nodename>.domain.com

 	Database Instance: decedidb

5.	Click OK to add the alias

6.	Select Exit SQL*Net Easy configuration, and click OK.

Pre-Installation Tasks for Oracle Rdb on the PC

 	If you want to use Oracle Rdb as your preferred datanase, you will need 
to carry out the following pre-installation tasks:

1.	Modify the RDBODBC.INI file, which is normally located in the 
Windows directory, to change the FetchAhead setting as follows:

 	FetchAhead=NO

Checking for the Prerequisite Software

Before proceeding with the installation of Cockpit or CommandCenter, you 
are recommended to perform the checks listed in this section. These help 
you to verify that the software on your PC, and the network link to your 
DEC/EDI Server are correctly set up. You should be able to complete each 
of these tests before installing and using Cockpit or CommandCenter.

You should be able to do the following:

•	If you are installing Cockpit, and you are using DECnet networking 
services, test your DECnet connection. Refer to your DECnet 
documentation for more information about this.

•	If you are using TCP/IP networking services, test the TCP/IP network 
connection between your PC and the DEC/EDI Server by using ping.

•	If you intend to use ObjectBroker and it is installed on your PC, and on 
the DEC/EDI Server node,  test this by using the ObjectBroker Network 
Tester utility (described in Part 4, Verification). 

Time to Install 

The amount of time to install Cockpit or CommandCenter depends on the 
speed of your PC and hard disks that you are using. However the installation 
of Cockpit should take no longer than 5 minutes. 

Installation of both the Win32s software and CommandCenter together 
should take no longer than 10 minutes. 

Installing the Software

This section describes how to install Cockpit and CommandCenter, and lists 
some of the more common problems that may be encountered during the 
installation. It covers the installation processes for Windows Version 3.1, 
3.11 and Windows 95 or NT.

Additionally it describes how to install Microsoft Win32s because, if you 
intend to use Microsoft Windows Version 3.1 or 3.11, you need to provide 
the additional 32-bit environment to run CommandCenter that Win32s 
provides.



Install Win32s only if you have not got it on your PC, and you intend 
to use Windows Version 3.1 or 3.11.

Installing on Windows V3.1

If you intend to use Windows Version 3.1or 3.11, you need the 16-bit kit. If 
installing CommandCenter, you also need Win32s; Cockpit does not need 
Win32s. Your first task is to check whether Win32s is installed on your PC, 
and then install it, if necessary.

Install Win32s only if you have not got it on your PC. Your PC may already 
have the Win32s software installed from another source. If you are unsure 
whether you have Win32s installed, proceed with the installation as 
described in this section. You are warned if you already have the software 
installed, or if you have a more recent version of Win32s than that supplied 
with CommandCenter.

Installing on Windows 95 or NT

If you are using Windows 95 or Windows NT, you need the 32-bit kit. You 
do not install Win32s. 

Installing Win32s

The Win32s software, supplied on CD-ROM together with the 
CommandCenter kit, provides software services essential to 
CommandCenter. This software is not required for use with Cockpit.

1.	Start Windows and insert the CD-ROM in the drive.

2.	Select the Run... option from the File menu in the Program Manager.

 	Note that you will be asked to specify the drive from which you want to 
install the software. 

3.	Enter <drive>:\setup; for example, d:\win32s\disk1\setup

Installation Procedure

The following are the stages in installing the software. Each stage requires 
you to make a choice or enter information on a screen dialog:

To install Cockpit or CommandCenter:

Step 1:    Locate the software

Step 2:    Select the software to install (16 or 32 bit)

Step 3:    Run the appropriate SETUP.EXE file

Step 4:    Follow the Installshield instructions.

Questions and Answers for Instalshield   

Installation Type

InstallShield lets you choose the type of installation you want: Typical, 
Compact or Custom. A Typical or a Compact installation loads a 
predetermined amount of software onto your PC. A Custom installation 
allows you to choose from the Select Components screen.

Server 
Configuration

As the installation continues, you are prompted to configure the server. If 
you wish, you may postpone this task until after the installation.You may 
also terminate the installation at this point. 

If you decide to configure the server, select one of two options:

Add.. to configure a new server

Edit.. to configure a listed server that you need to select

The Edit Server Setup dialog is displayed. 

Use the following information to help you enter the correct information in 
each field on your setup screen:

Installation 
directory. 

This is the directory where files are installed. You can change the default 
value offered if you wish. The Setup program creates the specified directory 
if it does not already exist.

Computer 
Name. 

This is the name of your PC, for example, edipc. 

Server Name. 

This is the name of the DEC/EDI Server you want to use. Note that this 
name is not the nodename (although it can be). It is any name you wish to 
use to refer to a particular Server. If you expect to use more than one Server, 
enter the name of one of them here. You may add more definitions when you 
first run Cockpit or CommandCenter.

Server 
Nodename. 

This is the nodename of the Server you want to use. It must be a name that 
your network understands. You should enter the full name of the Server, 
unless your PC and the Server are operating on a common network segment.

Server Type. 

Select from either DIGITAL UNIX or OpenVMS.

Server Version

Supported Servers for DIGITAL UNIX are V3.0, V3.1, V3.1A and V3.2.

Supported Servers for Open VMS are V2.0, V2.1, V2.1A to V2.1D and 
V3.2.

Network. 

For DIGITAL UNIX, the supported network is TCP/IP, OpenVMS servers 
may use either TCP/IP or ObjectBroker and DECnet .

16bit database 
drivers: Informix 
CLI                

Select this if you are using an Informix database with an Informix CLI 
ODBC driver (16bit). 

Informix CLI 2.50           

Select this if you are using an Informix database with an Informix CLI 
V3.50 ODBC driver (16bit). 

Oracle 7 1.11.1.5           

Select this if you are using an Oracle 7 database (16bit). 

INTERSOLV 
INFORMIX5 etc.    

Select this if you are using an Intersolv Informix V5 database with ODBC 
driver V2.10. Use INTERSOLV 2.11 INFORMIX for V2.11 and 
INTERSOLV V2.12 for V2.12 (16bit). 8)	

Database 
Driver. 

This field defines the database product that you are using on the PC and on 
the Server, as well as the ODBC driver used on the PC.

Oracle ODBC 
driver for Rdb 

Select this if you are using an OracleRdb database.

INTERSOLV 
2.12 32-bit 
INFORMIX5 

Select this if you are using an Intersolv Informix Version 5 database with 
ODBC driver Version 2.12 for a 32-bit platform. (See also the User Defined 
item).

Informix CLI 

Select this if you are using an Informix CLI database.

Informix CLI  
V2.5 32-bit 

Select this if you are using an Informix database.

Microsoft Access 

Do not select this. It is reserved by DIGITAL for demonstration versions of 
the Cockpit and CommandCenter.

User Defined 

Select this if the database you are using does not match one of the options 
above.  Unlike the other options, the ODBC datasource isn't automatically 
configured by the installation. The installation will tell you the name of the 
datasource, which should be noted,  and you must configure it yourself. See 
the section in Post Installation Tasks for a description of how to do this.

Oracle73 

Select this if you are using an Oracle73 database.

Account. 

This is the name of an account on the Server that you intend to use to access 
the DEC/EDI Server data. If you know the name of this account, enter the 
value now. If you don't know the name, enter any value: you will be able to 
change it, or use other accounts when you use CommandCenter or Cockpit. 
Note that this value is case-sensitive. That is, values like JONES and jones 
are regarded as different accounts.

Database 
Name. 

This is only relevant with an Informix or Oracle 7 database.

OnLine

This is the name of the DEC/EDI database on the DEC/EDI Server system. 
With Oracle 7, leave this value set to its default value of decedi_db.

Rdb

This is the SQL/Services™ classname of your DEC/EDI Server system. 

Class

Options are: GENERIC, V51, V60, V61. Specify GENERIC if you have 
standard SQL Services installed on your OpenVMS Server. Specify one of 
the other options if you have multi-version SQL installed, to tell it which 
version to use.

OnLine Service. 

This is the name of the network service to use to connect to the named  
database on the DEC/EDI Server. This should be set to decedi_pc.

Use ObjectBroker

Select if you intend to connect to a server using a version before 3.2 or one 
not using TCP/IP.

Readme Files

As the installation nears completion, you are prompted to decide whether to 
read the Readme file. 

Reboot Options

When the installation is complete you may be prompted to reboot your PC.

You do not have to reboot at this time, but note that you must do this 
eventually to register any new server configuration. 

Release Notes

By default, the installation creates a Program Manager group called 
DEC/EDI Cockpit or DEC/EDI CommandCenter, depending on which kit 
you are installing. One of the icons within that group displays release notes 
about the software. You should review these notes before proceeding with 
the post-installation tasks described in the next chapter.

TCP/IP Tracing

•	If you are using the TCP/IP network interface (not Objectbroker), use 
this button to `trace' the requests and traffic across the network between 
the PC and Server into a file on the PC. Further information on using the 
tool is provided in the DEC/EDI: User's Guides (DIGITAL UNIX and 
OpenVMS).



Dealing with Installation Errors 

OnLine...

•	"The ODBC datasource could not be configured."

 This is most likely due to the ODBC software not being installed on the 
PC.  After correcting this problem you should reinstall Cockpit or 
CommandCenter.

•	"Failed to configure ODBC driver."

 You may not have installed the INFORMIX-NET software, or it is 
missing one or more environment variables. Re-install the INFORMIX-
NET software, and remember to restart your PC immediately after you 
have completed the installation.

...OnLine

 This error can also occur if you have not installed the ODBC driver for 
INFORMIX5.

•	You are set to communicate with at least one of your servers using 
ObjectBroker, but it is not installed.

After installation you should either instal ObjectBroker or set all servers to 
use the TCP/IP interface.

Post-Installation

This chapter assumes that you have now completed the installation of 
Cockpit or CommandCenter, as described in the previous chapter. Before 
you can use the software, you need to perform a number of post-installation 
tasks. Some of these tasks involve configuration work on the DEC/EDI 
Server node or nodes that you are using. The tasks are summarized here.

Post-Installation Tasks

After you install CommandCenter or Cockpit, your post-installation tasks 
include the following:

•	PC Configuration 

•	Server Configuration 

•	Running the DEC/EDI Network Tester

These tasks are described in the following sections.

PC Configuration Activities

OnLine...

You need to add an entry to the network services file on your PC to register 
the network service you use to access the database on your DEC/EDI Server.

If you are using Pathworks to provide the TCP/IP network layer, the file you 
need to add a line to is c:\pw\services (or wherever you have your Pathworks 
network files installed).

Use Notepad to add a line to this file of the form:

service      portnumber/protocol # service data

These details must match the details on your server. On a DIGITAL UNIX 
server this line must match the corresponding line in the /etc/services file:

On the Server, this entry is created automatically by decedi_config. See the 
DEC/EDI: User's Guide for more details. The service field must also match 
the value you entered into the corresponding field in the Cockpit or 
CommandCenter edit server setup dialog. An example of this line is:

...OnLine

decedi_pc      1500/tcp     # service data

Server Configuration Activities

On each DEC/EDI Server, you need to complete the following before you 
can use Cockpit or CommandCenter to connect to the Server. These 
activities are described in more detail in the DEC/EDI: User's Guide, unless 
indicated otherwise:

•	Install the CommandCenter LMF license PAK on a DEC/EDI Server. 
The CommandCenter needs to find a valid license on at least one Server 
node. The license does not need to be installed on each Server. If you are 
using CommandCenter to connect to more than one Server, install the 
license on the Server you use most often. 

•	If using ObjectBroker, onfigure it to allow access by your PC. This 
normally implies setting up ObjectBroker proxies such that your PC has 
access to the required ObjectBroker methods for DEC/EDI. However, 
the details of this task depend on the ObjectBroker security model in use 
on the Server.

•	Create a user account that your PC uses to access the DEC/EDI database. 
When you use Cockpit or CommandCenter to connect to the Server, you 
are asked to enter the name of this account and its password.

•	Grant access to the DEC/EDI database for this user account.

Rdb

•	Configure SQL/Services.

Unless stated otherwise, you need to repeat these Server configuration 
activities on each DEC/EDI Server that you are using. The next section 
describes how you can test the resulting configuration.

Configuring User-Defined ODBC DataSources

If the database type for the Server you specified in the installation was User- 
Defined, you need to configure the ODBC datasource manually. You do this 
using the ODBC Administrator. 

If you are using the 16-bit CommandCenter or Cockpit, you need to use the 
16-bit ODBC Administrator. Similarly, if you are using the 32-bit version, 
use the 32-bit Administrator. Typically, you will find the ODBC 
Administrator in the Control Panel, although it may be in other `ODBC' 
program groups. Do the following:

1.	Start the Administrator and select the Add... button.

2.	Select the ODBC driver you are using. (for example, INTERSOLV 2.11 
INFORMIX5) and select the OK button.

 	The fields displayed vary with the database type you have selected. 
However, the following fields should contain entries: 

–	 Data Source Name 

 The name the CommandCenter or Cockpit installation gave you for 
the datasource. Enter it exactly as given. 

–	 Description 

 This is not crucial, but typically the same information as for the data 
source name is entered.

–	 Database Name or Class 

 Enter decedi_db.

–	 Database List

 Leave blank.

–	 Default User Name or User ID

 Enter the user name of the account used to access the Server.

–	 Host Name

 The nodename of the Server. This must be a name that your network 
understands.

–	 Service name

 Enter the DEC/EDI service on the server: decedi_pc.

–	 Protocol Type

 Select tcp-ip.

–	 SQL + Net connect string

 A name of the form: <node>_decedidb, e.g. ediserv_decedidb

 The other fields should remain as they are.

The reason for having the User-Defined database type is that the interface to 
the ODBC drivers changes with different versions of the driver. It is 
impossible to predict what the interface will be for new versions. This 
option allows any interface to be configured.

Post-Installation Tasks

This section explains how to do the post-installation configuration tasks to 
link DEC/EDI CommandCenter and Cockpit on your personal computer to 
your DEC/EDI Server. The tasks include:

•	Configure your Server to accept a link from your personal computer.     

•	Setup your Server account.

If you have already installed the DEC/EDI CommandCenter or Cockpit 
before, and you have configured your Server to accept a link from your 
personal computer, there is no need to repeat the last two steps mentioned 
above.

Configuring ObjectBroker on your Personal Computer

There is very little configuration required for ObjectBroker on your PC. 
Please ensure you have chosen the correct LAN connection when you 
installed ObjectBroker. You can check this with the ObjectBroker System 
Administrator: select View | Configurations, and make sure your LAN is the 
one with the keyword (Current) next to it.

Configuring your DEC/EDI Server

You will need to be logged into your DEC/EDI Server to perform these 
operations.

If using ObjectBroker, your DEC/EDI Server needs to be configured before 
it can grant access to the DEC/EDI CommandCenter or Cockpit. The 
configuration involves registering the personal computer node name with 
DEC/EDI with ObjectBroker.

ObjectBroker Setup

DIGITAL UNIX

1.	On the Server, add a proxy for your PC:

 	# obbadpxy -h <node.location> -u '*' root

 	# obbadpxy -h <node> -u '*' root

For example:

 	# obbadpxy -h henry.ford.chicago -u '*' root

 	# obbadpxy -h henry -u '*' root

OpenVMS 

1.	On the Server, enter ObjectBroker:

 	$APPLICATION/BROKER

2.	 Add a proxy for your PC:

 	OBB> ADD PROXY DECEDI/REMOTE_HOST=(USER=*, HOST=<node>)

Testing

Use the Network Test defined in Part 5 Verifying, to test the setup.





Problem Solving

There are two main sections in this section:

•	General Problems

 Information on general problems 

•	Getting More Information

 This section outlines the range of error logs and diagnostic tools that you 
can use to obtain more detailed information about problems you may 
encounter. Some of these tools are specific to a particular version of the 
CommandCenter or Cockpit, and they are marked as such. The section 
also contains advice on how to report problems to DIGITAL.

General Problems

•	You are not licensed for DEC/EDI on server nodename: <server name>.

 This message may be displayed when running any of the 
CommandCenter editors or when using the version of Cockpit from the 
CommandCenter kit. The license allowing you to use the 
CommandCenter with this Server has expired or has not been installed. 
See the DEC/EDI: Installation book for information on installing the 
CommandCenter license.

•	Failed to read mapper Compiler results: No such file or directory.

 This may be proceeded by the screen briefly blanking out and redrawing.

 This error may occur only when compiling Mapping Tables by using the 
Mapping Table editor contained within the CommandCenter.

 This means the Win32s kit hasn't been installed. After you have 
completed this, you can test this by compiling one of the example 
Mapping Table files shipped for use with the Mapping Table editor. See 
the help provided with the Mapping Table editor for more details of how 
to do this.

•	Using <CTRL-ALT-DELETE> to abort Cockpit or CommandCenter.

 There are situations where the Cockpit or CommandCenter can hang the 
DEC/EDI Server. These occur when either Cockpit or one of the 
CommandCenter editors has been aborted abnormally, either by a fault in 
the code, by you having pressed <CTRL-ALT-DELETE>, or by some 
other abnormal exit. It is recommended that you avoid using <CTRL-
ALT-DELETE> to abort the applications whilst they are reading the 
DEC/EDI Server database.

 In this situation, if the application was in the middle of an operation, 
links to the Server will still be active, waiting for the application to 
terminate the transaction explicitly. Starting the application again does 
not clear this. The result may be a protected read lock on the DEC/EDI 
Server database which may affect the components of the DEC/EDI 
Server eventually.

Rdb

 If this occurs, you should restart Windows on your PC to release the 
offending network links that may be holding locks.

OnLine

 If you have enabled the INFORMIX-NET ConnChecker function by 
using the setup utility, these outstanding links should be recovered, when 
the ConnChecker next runs. Enabling this feature is described in the 
INFORMIX-NET for Windows Configuration Guide, Version 5.01. If you 
have not already enabled this feature, you should do so now. You should 
restart your PC for these changes to take effect.

•	Problems running several CommandCenter editors.

 The CommandCenter does not place any explicit limitations on the 
number of separate editors you can run concurrently. However, in 
practice, there are limitations that you may reach.

 As you run any Windows application, you consume various Windows 
resources. Windows places a fixed limit on certain resources that the 
Cockpit and CommandCenter editors use in common with other 
applications. It is possible for you to attempt to exceed the available 
resources by running many applications. However, there is no simple 
method of predicting the point at which resources will run out.

 To help avoid Windows resource problems, it is recommended that you 
try not to run more than two CommandCenter editors at the same time. 
Also, avoid running too many other applications at the same time as 
running the Cockpit or CommandCenter. 

Error When 
Connecting to 
Server

Normally seen when attempting to log on when the Port Server has not been 
started. Startup the Port Server and try again.

DIGITAL Unix Server - Problem Solving

In general, these sections of problems are reported by the DEC/EDI 
Network Tester. 

TCP/IP Network Interface related Problems

•	`Error when connecting to Server'

 `The specified address is not available from the local machine'

 You will receive this error message when attempting to connect to the 
Server, if you have not manually added the decedi_csg service to the 
services file on your PC. You must add this entry to the services 
file prior to connecting to the DEC/EDI Server, as described in Network 
Tester on page 9-37.

ObjectBroker-related Problems

•	'File Error' Cannot find OBB.DLL.

 Possibly followed by other file not found messages.

 This indicates ObjectBroker has not been installed. Either install 
ObjectBroker or use the TCP/IP interface.

•	OBB_INV_HOSTNOTFND (e), A host node could not be found to 
execute the request.

 One of the following may be true:

–	 The DEC/EDI Server node (the host node) does not exist.

–	 You typed the wrong Server node name.

–	 The Server node is not switched on or started up.

–	 The Server node does not have ObjectBroker installed.

–	 ObjectBroker is not started on the Server.

–	 One of the ObjectBroker Server processes started for DEC/EDI has 
failed on the Server, because of a problem on the Server.

 This error can also occur if you have insufficient network links. See the 
description of TRANSERR below.

•	OBB_INV_NOTAUTHORIZED (e), Client user is not authorized to 
access server.

 ObjectBroker on the Server has not been configured to allow your PC to 
access the system. Refer to DEC/EDI: User's Guide for details on how to 
correct this.

•	OBB_INV_TRANSERR (e), Transport error `No buffer space available'.

 This indicates that your PC has run out of network links and cannot 
provide an extra one that ObjectBroker now requires. You should either 
shut down other applications which are already running, and which are 
using network links, or you can increase the number of network links 
your PC can provide. Details of creating extra links on your PC vary 
depending on the networking software that you are using on your PC. 
Refer to the documentation for your networking software for details on 
how to increase the number of network links. You should expect to have 
to reboot your PC for any changes to take effect.

 If you are using Pathworks to provide your network layer, you can 
increase network resources (at the expense of some conventional 
memory) as follows:

–	 Use Notepad to open the file c:\pw\pwtcp.ini. (You may have 
installed your Pathworks files in a different directory to this one).

–	 Find the line that defines the number of network links, as in the 
following example:

    TCPMaxSock  =  8        ; max tcp connections

–	 Increase the value (set to 8 in this example) to the number of links 
you want, and save the file.

–	 Restart your network.

•	OBB_INV_CNTGETHOSTID (e), Can't get host ID.

 "127.0.0.1 LOCALHOST" is missing from the hosts file. This usually 
occurs on systems without DNS.

ODBC-related Problems

OnLine...

•	Data Source name not found and no default driver specified.

 This means the Server datasource needs to be configured with ODBC.

 Do this by selecting the Server | Define menu option from any of the 
CommandCenter editors or the Cockpit. Select to edit the datasource and 
select OK. This will cause the datasource to be configured automatically.

 If you specified the User Defined database type for this Server, then you 
need to configure the ODBC datasource manually. See the section in 
Post Installation tasks for details of how to do this.

•	Driver's SQLSetConnectOption failed
Driver not capable.
Error on Network connection, getserverbyname
[WSANO_DATA] system call failed.

 If you are using PATHWORKS to provide the TCP/IP network layer, 
then this means an entry is not added or is incorrectly added to the 
services file. 

•	Driver's SQLSetConnectOption failed
Driver not capable.
Error on Network connection, gethostbyname
[WSAHOST_NOT_FOUND] system call failed.

 The Network tester is unable to connect to the host server.

 Try using the ping utility to communicate with the host. 

•	If ping is successful, check you have the correct server nodename 
address. Select the Server | Define menu option from any of the 
CommandCenter functions or the Cockpit, and select to edit the 
datasource.

•	Driver's SQLSetConnectOption failed
Driver not capable.
Error on network connection, unknown connection problem.

 One common reason for this problem is that the server account 
referenced by the CommandCenter does not have access to the DEC/EDI 
database.

 You have to run decedi_config, select the Modify Database Users 
option and add the user account as a database user.

•	Driver's SQLSetConnectOption failed
Driver not capable.
User's password is not correct for the database server.

 The password specified in the Log onto Server screen is incorrect.

 Check the password was entered with the correct case, for example, 
check the Caps Lock key isn't on when it shouldn't be.

 Check the password matches the password for the account on the Server.

•	Driver's SQLSetConnectOption failed
Driver not capable.
User is not known on remote host.

 The account being used to connect to the server in the Log onto Server 
screen is incorrect.

 Check the username is entered with the correct case, for example, check 
the Caps Lock key isn't on when it shouldn't be.

 Check the username matches the account name on the Server.

•	The system hangs after selecting the ODBC button.

 One of the following may be true:

–	 If using PATHWORKS, this could be because the entry in the 
network services file is incorrect and does not match that on the 
Server. 

–	 The INFORMIX OnLine database server is not started on the Server 
node. Refer to the DEC/EDI: User's Guide for details of starting the 
INFORMIX OnLine database server.

•	Can't find file: WINSOCK.DLL.

 If you are using PATHWORKS, this means that the specified 
PATHWORKS file cannot be accessed. This could be due to one of the 
following:

–	 PATHWORKS has not been installed.

 Install PATHWORKS.

–	 The environment variable PATH does not include the PATHWORKS 
directory (usually c:\pw).

 Edit the file autoexec.bat and add the pathworks directory to the end 
of the PATH statement.

 If you are not using PATHWORKS, this file should still be provided by 
other network packages. Check whether they have been installed 
correctly.

•	Driver's SQLSet ConnectOption failed
Driver not capable
No connect permission.

 The ODBC account on the Server does not have permission to access the 
database.

 Use the decedi_config utility on the server to give it permission. Refer to 
the DEC/EDI: User's Guide for more information.

...OnLine

For information on troubleshooting other ODBC problems, refer to the 
INFORMIX-NET for Windows Configuration Guide, Version 5.01.

Rdb...

•	Trying to attach to a database or table causes Windows to crash, exit to 
DOS, or reboot.

 Pathworks has not been defined as the network in Windows setup.

 Run Windows setup either from Windows or from DOS. Make sure the 
network is set to Pathworks.

•	Trying to attach to a database or table fails with the message:

 [MICROSOFT][ODBC DLL]Driver's SQLAllocConnect failed.
[MICROSOFT][ODBC DLL]Driver's SQLAllocConnect failed.
[DEC][ODBC]Unsupported version of SQL/Services Client DLL.

 Multiple versions or the wrong version of sqsapiw.dll are present on the 
PC. Ensure that only one version of sqsapiw.dll is present on the PC and 
resides in the \windows\system directory. If necessary, copy sqsapiw.dll 
directly from the installation diskette to the \windows\system directory.

•	Trying to attach to a database or table fails with native error code -2035.

 This is a SQL/Services error that usually results when the corresponding 
SQL server on the DEC/EDI Server system has failed. This usually 
means that SQL/Services is incorrectly installed on the Server.

•	Attach fails with the error -2032.

 [DEC][ODBC][Rdb]%SQLSRV-F-NO_CLS, Invalid Class Name.

 An undefined SQL/Services class name was specified when the data 
source was configured on the PC via the ODBC Administrator.

•	Attach fails with the error -2003.

 [DEC][ODBC][Rdb]Network Error:Suberror code is 3.

 This occurs when SQL/Services is not running.

 [DEC][ODBC][Rdb]Network Error:Suberror code is 60.

 This occurs when the network link times out, usually as a result of the 
SQL/Services server crashing. Client not authorized to access database.

...Rdb

 The username supplied via ODBC is not authorized to access the 
database. Ensure that the user has an account on the server and has 
enough privileges to access the DEC/EDI database.

OpenVMS Server - Problem Solving

In general, these sections of problems are reported by the DEC/EDI 
Network Tester. 

ODBC-related problems

Pathworks error #0

This usually occurs if SQL/Services is not running on the OpenVMS 
system, or the node name is not defined in the Pathworks DECnet database.

To define a node in the DECnet database, use the MSDOS prompt to run 
NCP:

ncp                                                          

ncp> define node xx.xxx name name 

ncp> exit

xx.xxx is the network address, for example 23.345; name is the DECnet 
nodename.



Do not use Pathworks NCP for Windows; this only defines the node 
in the V5 database and not the V4 database as read by SQL/Services.

This is true of Pathworks V5.0A and may not be true of later versions.

Pathworks error #3

Pathworks error #3 EREMNODESHUT Remote node requested 
shutdown

This usually means that your PC believes that SQL/Services has shutdown 
on your Server. This is not always the case. Verify that SQL/Services has 
indeed shutdown on your Server. Look for a process called 
SQLSRV$SERVER, if it does not exist then get your System Manager to 
start it up with:

@SYS$STARTUP:SQLSRV$STARTUP

Driver not capable

This means you have installed other software on your PC since ODBC 
installation, and it has disturbed the DEC/EDI settings. A more likely cause 
is that your ODBC kit is too old, in which case you should obtain the latest 
kit, and reinstall.

Pathworks has not been defined as the network in Windows setup

Run Windows setup either from Windows or from DOS. Make sure the 
network is set to Pathworks. This only applies to Pathworks DECnet or 
TCP/IP.

Unsupported version of SQL/Services Client DLL

Trying to attach to a database or table fails with the message:

[MICROSOFT][ODBC DLL]Driver's SQLAllocConnect failed.

[DEC][ODBC]Unsupported version of SQL/Services Client 
DLL.

Multiple version or the wrong version of SQSAPIW.DLL are present on the 
PC. Ensure that only one version of SQSAPIW.DLL is present on the PC 
and resides in the \WINDOWS\SYSTEM directory. If necessary, copy 
SQSAPIW.DLL directly from the installation diskette to the 
\WINDOWS\SYSTEM directory.

Trying to attach to a database or table fails with native error code -2035

This is a SQL/Services error which usually results when the Server on the 
VMS system has died. This usually means that SQL/Services was never 
installed correctly on the VMS machine. On the VMS machine, examine 
SYS$STARTUP:SQLSRV$.LOG and any logs in the default SQL /Services 
account for the cause of the problems.

Invalid Class Name

[DEC][ODBC][Rdb]%SQLSRV-F-NO_CLS, Invalid Class Name

An undefined SQL/Services class name was specified when the data source 
was configured on the PC via the ODBC Administrator.

Another potential reason is that you are running SQL /Services standard 
version which expects GENERIC as the class, or SQL/Services multi 
version, which expects V61 etc. as the class name.

Suberror code is n [DEC][ODBC] [Rdb]Network Error: 
Suberror code is nn

This is usually a Pathworks error where nn = the Pathworks error code.

The error codes can be found in the Pathworks files errno.h (for DECNET) 
or sock_err.h (for TCP/IP).

Some of the more common errors are:

•	[DEC][ODBC][Rdb]Network Error: Suberror code is 3

 This occurs when SQL/Services is not running.

•	[DEC][ODBC][Rdb]Network Error: Suberror code is 49

 This occurs when the target DECNET node is not defined on the PC.

•	[DEC][ODBC][Rdb]Network Error: Suberror code is 60

 This occurs when pathworks times out, usually as a result of the 
SQL/Services Server crashing.

Client not authorized to access database

The username supplied via ODBC is not authorized to access the database. 
Ensure the user has an account on the Server and has enough privileges to 
access the DEC/EDI database.

ObjectBroker-related problems

CNTGETHOSTID

CORBA_INITIALIZE OBB_INV_CNTGETHOSTID (e), Cannot 
retrieve host identifier

This applies to DECnet PC nodes only. Pathworks maintains a database of 
nodenames that it knows, but doesn't actually know the name of the node 
itself. You need to define the node in the database:

ncp                                                                                                                           
ncp> define node xx.xxx name name                         
ncp> exit

NOTAUTHORIZED

CORBA_NO_IMPLEMENT

OBB_INV_HOSTNOTFND (e), A host node could not be found to 
execute the request.

OBB_INV_NOTAUTHORIZED (e), Client user is not authorized to 
access server.

Your PC is not authorized to access the DEC/EDI GUI Server. 

On your Server system check you have proxy with:

$ APPLICATION/BROKER                                      OBB> 
SHOW PROXY

Local User          Remote User         Remote 
Host        ----------          -----------         ----
-------      SMITH               Default             PCNODE

If you do not have an entry list for your PC, use the following command:

$ APPLICATION/BROKER                                    OBB> add 
proxy user/remote=(user=*,host=pcnode)

Replace user and pcnode with the username (for example DECEDI) and PC 
nodename you intend to use.

KEYNOTFND

CORBA_NO_IMPLEMENT 

OBB_INV_HOSTNOTFND (e), A host node could not be found to 
execute the request.

OBB_REG_KEYNOTFND (e), Could not find key

`Implementations\Definitions\706b8f34c138.0c.b1.a8.00.00.00.00
.00'.

Your DEC/EDI GUI Server is not registered on your Server node. 
Use the following command to register the Server:

$ @DECEDI$TOOLS:DECEDI$CONFIGURE_ACAS

Getting More Information

The following sections provide suggestions on getting more information 
about problems that you may be experiencing. These assist more 
experienced users to diagnose less common problems.

The DEC/EDI Error Log

Each of the different components of the DEC/EDI Server is capable of 
reporting informational and error messages in the DEC/EDI Error Log file. 
The information in this file is stored in a coded format, and you need to use 
special tools to look at its content. The normal means of viewing the Error 
Log is to use the Cockpit. However, until you have a correctly operating 
Cockpit installation, this is not possible.

If you are unable to get Cockpit to work, perhaps because you have not 
completed some element of its configuration, it is possible that the Error 
Log contains important information that can assist you in diagnosing any 
problems.  If you suspect the Error Log may contain such information, the 
Server contains a simple utility to allow you to look at the Error Log. 

DIGITAL UNIX

On the DIGITAL UNIX Server this utility is called decedi_look. For more 
information on using this utility, refer to its man page entry on the Server:

# man decedi_look

Open VMS

On a OpenVMS Server use @DECEDI$LOOK.ObjectBroker Tracing

You must shut down Windows to achieve this. Once Windows has been shut 
down, issue the following commands at the MS-DOS prompt:

C:\> set OBB_TRACE_FLAGS=RTS

C:\> set OBB_TRACE=C:\OBBTRACE.LOG

This causes a trace file to be generated (c:\obbtrace.log). Remember to 
remove these environment variables when you have finished tracing:

C:\> set OBB_TRACE_FLAGS=

C:\> set OBB_TRACE=

ODBC Tracing

Use the Microsoft ODBC administrator. This resides in the Control Panel. 
Run the ODBC administrator and do the following:

•	Select Options.

•	Select the Trace ODBC Calls option.

•	Choose a file to be used to store the trace information - click on the 
Select File... button.

This creates a trace file detailing ODBC activity for each function call or 
request that uses ODBC. Remember to turn tracing off when you no longer 
need it.

SQL/Services Tracing

Rdb...

SQL/Services tracing provides a detailed log of all individual SQL database 
functions executed.

To enable SQL/Services tracing, use an editor, such as Notepad, to open the 
following file:

\WINDOWS\SQSAPIW.INI 

Enable client logging by removing the semi-colon (;) comment mark before 
the line:

ClientLogging=7

You should restart Windows for this change to take effect. This generates a 
file called CLIENT.LOG which details all the SQL/Services calls made.

...Rdb

Reverse the change to SQSAPIW.INI when you no longer need tracing. You 
should restart Windows for this to be effective.

Network Tester

The Cockpit has a network testing option which is used by clicking-on the 
Network Tester icon to enable the facility. A menu-driven series of simple 
prompts take you through the test process. 

Note that you will need to know the identity of the server that you will be 
addressing. 

Error Messages

The following error message may occur if decedi_csg is not defined in the 
"services" file, or if the port number for decedi_csg is not compatible with 
the port number defined on the server.

Error when connecting to Server'

The specified address is not available from the local machine

If this occurs, you will need to modify the SERVICE file to add the correct 
Port number.

The line to be added is as follows:

decedi_csg             <port number>/tcp # DEC/EDI GUI

for example:

decedi_csg             5152/tcp # DEC/EDI GUI

Where the Port Number is as you recorded during the configuration 
described in   DEC/EDI Services TCP/IP Port Numbers on page 3-4.

Tip

Use the Find File facility to locate the SERVICES file, and use Notepad to 
add the line with the Port Number.

TCP/IP Tracing

If you are using the TCP/IP network interface rather than ObjectBroker, you 
may trace the requests and traffic between the PC and your Server into log 
files on both the PC and Server. After defining the server uing the simple 
menu options provided, select the TCP/IP Test button from the next menu. 
The test is carried out automatically and a successful test result is reported. 
In the event of a failure, use the error message and the log file to establish 
the cause of the problem.

Reporting Problems

If an error occurs while DEC/EDI Cockpit or CommandCenter is being 
used, and you believe the error is caused by a problem with one of these 
DEC/EDI components, take one of the following actions:

•	If you have a BASIC or DECsupport Software Agreement, you should 
call your Customer Support Center. (With these services, you receive 
telephone support that provides high-level advisory and remedial 
assistance.)

•	If you have a Self-Maintenance Software Agreement, you can submit a 
Software Performance Report (SPR).

•	If you have purchased DEC/EDI CommandCenter or Cockpit within the 
past 90 days and you think the problem is caused by a software error, you 
can submit a Software Performance Report (SPR).
Chapter 10   UNIX System Verification

Introduction

This chapter describes how to verify that the installed system configuration 
is functioning correctly, and how to identify and correct common problems. 

Scope and Purpose 

This chapter takes the form of a self-paced tutorial that is designed to 
introduce you directly to setting up and using DEC/EDI after your system 
has been installed. The examples are designed to minimise the amount of 
data entry that you have to perform, and provide an overview of DEC/EDI.

The tutorial takes you quickly through the significant stages from starting 
with a newly installed and unconfigured DEC/EDI system, to exchanging 
and tracking documents between two hypothetical trading partners. As such, 
the activities it involves mirror many that will become familiar in live 
trading with partners either inside or outside your organization.



The example in this section installs the EDIFACT 90.1 standard, 
along with data labels of a specific format, which are used to identify EDI 
elements within the mapping process. If your DEC/EDI system already has 
EDIFACT 90.1 installed, check with your DEC/EDI administrator to make 
sure that you are not going to affect the existing system.

The tutorial introduces you to the following activities:

•	Verification that the DEC/EDI Server software and its pre-requisites 
have been successfully installed, and may be successfully started up and 
shut down.

•	The use of both local and remote Application Client systems to 
communicate with the DEC/EDI Server.

•	The use of PC-based Cockpit and CommandCenter installations to 
communicate with the DEC/EDI Server.

•	Configuration of the DEC/EDI Server with EDI Standards and Trading 
Partner profile details, and the use of the Import/Export communications 
gateway.

•	The compilation of a Mapping Table and its installation on the Server.

•	Monitoring the DEC/EDI Server to ensure it is able to correctly send, 
receive and process application files and EDI transmissions.

•	Basic housekeeping of the DEC/EDI Server, by archiving data that has 
been successfully processed.

The files described and used in this tutorial are provided as part of the 
DEC/EDI software installation.

Beyond the Scope and Purpose

The tutorial is not a detailed exercise in the more advanced aspects of 
system configuration, Mapping Table development, and application 
integration with DEC/EDI.

When you want to know more about any topic addressed by this tutorial, or 
any other queries, refer to the appropriate sections of the related books 
DEC/EDI: Application Development and the DEC/EDI: User's Guides 
(DIGITAL UNIX and OpenVMS).

Overview

The example in this tutorial covers the hypothetical case where your 
company, DEC Direct UK Ltd, is sending invoices to another company 
called Shiny New Systems.

In the outgoing case, you pretend to be DEC Direct UK Ltd which is 
sending the invoice. You have agreed with your Trading Partner, Shiny New 
Systems, that you will use a subset of the EDIFACT 90.1 INVOIC message 
which you have defined. To distinguish it from the message on which it is 
based, you have named the message subset MINVOX.

In the incoming case, you pretend to be Shiny New Systems which is 
receiving the invoice. You have agreed to receive and process the MINVOX 
subset of the EDIFACT 90.1 INVOIC message from your Trading Partner, 
DEC Direct UK Ltd.

An Example Application File

There is an example application file that has come from your business 
application, which is provided as part of the DEC/EDI software installation. 
The file is provided with the DEC/EDI Application Client subset, in the 
DEC/EDI examples directory:

/usr/examples/decedi/client/minvox_o.dat

The file is also provided with the CommandCenter, in the directory specified 
during the installation process. You may use this to examine the structure of 
the file whilst developing the Mapping Table, or to create a copy of the file 
on the Application Client system.

The Application File contains some of the data to be sent in the MINVOX 
message. Before sending the message to your Trading Partner, the file needs 
to be processed to produce an EDI format message that can be sent to your 
Trading Partner. The following steps are involved in this process and are 
performed by separate components of the DEC/EDI server system:

•	Mapping — An intermediate file known as the Internal Format File is 
generated using data from the Application File. Some of the values in the 
Internal Format file are automatically generated, or calculated from other 
values or variables. This step is performed by the Mapper.

•	Conversion — The Internal Format File is converted into an EDI format 
message. This step is performed by the EDIFACT Converter.

•	Transmission File Building — One or more EDI format messages are 
placed in an EDI Transmission File, which is then ready to be sent to 
your Trading Partner. This step is performed by the EDIFACT 
Transmission File Builder.

Preparation Task Summary

The following list broadly summarizes the tasks you need to complete 
before attempting the client examples:

•	Install the prerequisite software and EDI definitions

•	Configure the client

•	Set up the server

•	Compile the example mapping tables

•	Create trading partner profiles

•	Start DEC/EDI

•	Build and replace the profile cache

The following sections tell you what to do in detail.

A: Installing the Software and EDI Definitions

1.	Install the prerequisite software in accordance with the DEC/EDI: 
Software Product Description (SPD).

2.	Install the DEC/EDI Client and Server. (These may be on different 
systems). 

 	For example, if you are installing from CD-ROM:

 		# /usr/sbin/setld -l /cdrom

 	Where /cdrom is the mount point of the CD-ROM device.

 	The following subsets are required for use in this tutorial:



It is recommended that you also install the Man page subsets for 
future reference, though these are not required for this example.

Table 10-1	 Remote Client Installation

Subset

DEDIBASE320

DEDICLT320

Description

DEC/EDI Base

DEC/EDI Client

Table 10-2	 Server and Local Client Installation

Subset

DEDIBASE320

DEDICLT320

DEDISERV320

DEDIAMSGBASE320

DEDIAMSGEDIF320

Description

DEC/EDI Base

DEC/EDI Client

DEC/EDI Server

DEC/EDI Message Updates Base

DEC/EDI Message Updates EDIFACT IMPDEF files

3.	Install the DEC/EDI Message Update Service kit.

 	This is achieved by installing the Message Updates base subset, and the 
IMPDEF subsets for the standards required. 

 	This example uses the EDIFACT IMPDEF files. Ensure that the subset is 
installed by enetering the following command:

 	# /usr/sbin/setld -i | grep DEDIAMSGEDIF320

 	Enter the following command:

 		# decedi_must

From the menu, select EDIFACT 901, to install the definitions that are used 
in this example.



If there are any other EDI standards that you wish to install, it is 
recommended that you do so at this stage, while the DEC/EDI Server is not 
in use.

4.	Create the MINVOX Definition

Install data labels for the EDIFACT 90.1 standard and create the private 
MINVOX document definition.

 	Run the DEC/EDI Data Label Generator:

 	# /usr/sbin/decedi_dlg -s=EDIFACT -v=901 -f=ID

5.	Create the private MINVOX definition by using the DEC/EDI 
CommandCenter EDI Tables Editor on a PC connected to the Server.

a 	 From the "Getting Started" menu, select the "Manage Documents" 
option

b 	 From the "Getting Started - Documents" menu, select the option to edit 
an existing document saved in a file on the PC.

c 	 From within the Open dialog, select minvox.tab, and press Open.

d 	 You will be prompted to log on to the Server. Enter the defined server 
name, your user name and password to log on to the server.

e 	 Click on the Save to Server icon, or select the menu option Server..Save 
to save the document to the current server. 

 f 	 You will be informed that the document is not currently associated with 
any server, and will be asked to confirm that it should be saved to the 
specified server. Click Yes to confirm, and then exit from the EDI tables 
editor.

g  	You will be asked about the tables cache, you do not need to rebuild it at 
this stage. Click Continue to exit from the EDI tables editor.	

B: Configuring the Client

The DEC/EDI Client may be run either locally, that is, on the same node as 
the DEC/EDI Server, or remotely on a different node.

Configure Network Interface

Configure the DEC/EDI Client and Server either for a TCP/IP only 
connection, or for the use of ObjectBroker.

1.	On the DEC/EDI Server, run the DEC/EDI configuration utility:

 	# /usr/sbin/decedi_config

2.	Configure the chosen network interface, using one of the following 
options:

–	 Configure TCP/IP Client/Server link, or

–	 Configure ObjectBroker

 	Confirm that you wish to use the chosen interface for local client access.

 	If using ObjectBroker, specify the server OBB_LOCAL, to use the local 
application client.

3.	If using a remote client, repeat steps 1 and 2 on the remote client node, 
ensuring that you select the same network interface as you configured on 
the DEC/EDI Server.

 	If using ObjectBroker, specify the server node name.

 	If using the TCP/IP network interface, add the server node name to the 
Server configuration file.

4.	On the DEC/EDI Server node, modify the database users to register any 
users other than the decedi account. Select the following option

–	 Modify Database Users

Informix,    
Oracle Rdb

 	This must be a valid existing user account on the DEC/EDI Server node.

Oracle 7

 	The account is registered with the Oracle 7 server. It does not have to be 
the same as any existing user accounts.

5.	If using ObjectBroker on a remote client, make sure that the client node 
is proxied into the decedi account, by entering the following command 
on the DEC/EDI Server:

 		# obbshpxy 	

 	# obbadpxy -h client.nodename -u '*' decedi

 	On the remote client node, make sure that the server node is proxied into 
the user account under which you will run the client examples. This is 
normally your own user account, provided you are authorized to use 
ObjectBroker.

 		# obbshpxy 	

 	# obbadpxy -h server.nodename -u '*' your-username

 	If this is the first time this node has been defined, you will be prompted 
for whether files should be copied between the application client and the 
server, or should be shared.

 	If you are using an application client on the same node as the server, i.e. 
the "local" application client, files are normally shared, otherwise they 
are normally copied. These are the default options. Click OK to confirm.



Register the Client Applications

To configure the DEC/EDI Server for DIGITAL UNIX, you must use the 
DEC/EDI CommandCenter on a remote PC.

Use the CommandCenter Management Services Editor to register the    
client applications. If the client and server are on the same node, then simply 
enter the server node name. 

1.	Select the Getting Started option, Configure Applications.    

2.	Select Create a new application.    

3.	Enter DEC-DIRECT-UK-LTD as the Application Name.     

 	You will be asked to log in to the server that you should have already 
configured in the CommandCenter. If you have not already defined a 
server for the CommandCenter, do so now.  

 	Enter your server password.   

4.	Select the tabbed dialog, Node.    

5.	Click on the Add button. 

 	You will be prompted for the name of the node on which this client 
application is located. Enter the node name and select Ok.    

6.	Select the Details tabbed dialog, and click on the Add button.

7.	Repeat steps 3 to 5, but this time, use the application name, SHINY-
NEW-SYSTEMS. 

 	You use this application when you pretend to be SHINY-NEW-
SYSTEMS, and fetch the files that were sent by the partner, DEC-
DIRECT-UK-LTD.

8.	Save these application details by clicking on the Save button.

You will be prompted to build and replace the cache. You should wait until 
all of the server data has been configured.

Define Services 

You need to define and start the services that you need to use. To do this:

1.	From the CommandCenter, select the Management Services Editor, 
and define the following services:

–	 EDIFACT/ODETTE Services

–	 	Import/Export Gateway

2.	You will be prompted to log into the server, so enter the server name and 
your password details.

C: Compiling the Mapping Tables

Load and compile the Mapping Tables using the CommandCenter Mapping 
Table Editor. These tables are supplied with the CommandCenter. 

Alternatively, you may like a more detailed look at how these are created, so 
that you can create a mapping table for your own future needs. 

For detailed steps in creating the incoming and outgoing Mapping tables 
used by this example, refer to the next two chapters in this part of the book, 
Creating an Incoming Mapping Table and Creating an Outgoing Mapping 
Table.

If you choose to use the supplied mapping tables, complete the following: 

1.	Select the Getting Started option, Load Sample Incoming Mapping 
Table and select MINVOX_I. 

2.	Compile this table by selecting Compile option from the Mapping 
menu.

3.	When the table has compiled successfully, copy it to the server by 
clicking on Ok in the Copy to Server window that pops up.

4.	Repeat the above procedure for the MINVOX_O table. 

 	Note that this sample table can also be loaded from the File menu.

D: Defining Gateway and Connection

Use the CommandCenter Communications Editor to define:

•	The gateway: Import/Export

•	The connection: CVP_E 

Defining the Gateways:

1.	From the "Getting Started" dialog, select the Edit Gateway Parameters 
option.

 	? You will be prompted to log on to the Server. Enter the defined server 
name, your user name and password to log on to the server.

2.	Within the Select Connections dialog, specify the connection ID CVP_E 
and click on OK.

3.	From the Edit Gateways dialog, select Import/Export Gateway

4.	Within the Import/Export Gateway details dialog, leave the connection 
error limit as 20, and  specify the following locations:

 	    Import      /var/adm/decedi/impexp

 	    Export      /var/adm/decedi/impexp

5.	Click on Save, and then Close the Edit Gateways dialog

Creating the Connections

1.	You will be presented with a list of gateways and connections, with the 
caption "Filtered by: CVP_E"

2.	Click on the line "IMPEXP Disabled Stopped", and from the Edit menu, 
select Add->Connection.

 	Enter the Connection ID: CVP_E and click on OK

3.	Set the syntax to EDIFACT by selecting it from the drop-down menu

4.	Select the "Delete" option within the "Action on Import" box.

5.	Within the Operating system commands, select the Post-Export option, 
and enter the following text:

 	/usr/examples/decedi/server/decedi_loopback.sh #EXPFIL #EXPLOC 
#IMPLOC #CONN

 	This enables the "loopback" example script, which is run automatically 
each time a transmission file is exported through the CVP_E connection.  
This script renames the transmission file and re-imports it back through 
the CVP_E connection. This is useful for testing bidirectional 
agreements, as used in this example.

Enabling the Gateway and Connection

1.	Select the CVP_E connection, and cick on the Enable/Disable button, or 
select the Enable option from the Operations menu.

2.	Select the IMPEXP Gateway, and click on the Enable/Disable button, or 
select the Enable option from the Operations menu. Ignore the message 
from the GUI Server about a gateway of this type not running, as the 
DEC/EDI Server has not yet been restarted.

3.	Exit from the Communications Editor.



E: Adding Trading Partner Profiles

Use the CommandCenter Trading Partner Editor to add profiles for 
SHINY-NEW-SYSTEMS and DEC-DIRECT-UK-LTD. 

When you post a file to a trading partner using this example, you pretend to 
be the company, DEC-DIRECT-UK-LTD, and your trading partner is 
SHINY-NEW-SYSTEMS. 

When you want to fetch files, you pretend be SHINY-NEW-SYSTEMS, 
collecting files sent from your partner, DEC-DIRECT-UK-LTD. Thus you 
need to create two trading partner profiles, each detailing the document, 
MINVOICE, that you will exchange with the partner.

1.	Enter the Trading Partner Editor and select the Trading Partner Wizard 
to create or edit Trading Partners. 

 	The Trading Partner Wizard is a quick way to create up to two trading 
partners and their agreements by entering the minimum amount of 
information. 

 	You will be asked to log in to the server, so enter the server name and 
your password details.

2.	On the Trading Partner Wizard window, check the box marked, 
Create two Trading Partners and their Agreements, and enter the 
following information:

Trading Partner

	Application     

Template        

Application Interchange ID 

Partner Interchange ID  

Connection 

Direction  

Outgoing Document 

Incoming Document

SHINY-NEW-SYSTEMS 	

DEC-DIRECT-UK-LTD

Use the default supplied, DEFAULT.INI 
and select the option to create two 
trading partners and their agreements  

DDUK         

SNS 

CVP_E

Take the default, Bidirectional

Browse and select, MINVOICE 

Browse and select, MINVOICE

 	After entering the above information, select OK.  

 	You will then see your two new trading partners in a list.  

3.	Expand the list by clicking on the boxes checked with the letter X in 
them to see the agreement, document and connection defined for each 
trading partner.  

4.	Select any of these to verify that the details you entered are correct and to 
have a look at the other information that can be entered for Trading 
Partner agreements.  

5.	Finally, select the Cache option to Build and Replace the cache.

F: Restart the DEC/EDI Server

Shut down and restart the DEC/EDI Server, to ensure that the EDIFACT and 
Import/Export components are restarted, and that the new profile cache 
becomes effective. The commands are as follow:

# decedi_stop

# decedi_start

G: Running the Examples

Sending the Document

Application 
Client Node

1.	1.	Select a local user account from which to run the examples, and ensure 
that account is authorized for DEC/EDI database access.

 	# decedi_config

2.	Select the option - Modify Database Users. Check that the user is in the 
list.

Oracle 7    

 	Local user accounts must be prefixed by the name ops$

Informix, Oracle 
Rdb    

 	You may need to set the database path or version from within the .login, 
.cshrc or .profile of the account.

 	Log into the user account, and change directory to a scratch directory 
which has its protection set, so it can be written to by the decedi account.

 	Copy the following files from the DEC/EDI examples directory, located 
at /usr/examples/decedi/client to your local Client directory:

 	minvox_in.dat

 	minvox_out.dat

3.	Rename minvox_in.dat to original_minvox_in.dat

 	mv minvox_in.dat original_minvox_in.dat

4.		Use the Cockpit to monitor the progress of the MINVOX invoice 
document you will be sending. Before sending the document, start the 
Cockpit so you can monitor its progress.From the "Getting Started" 
dialog, select the option to obtain a summary of Documents and 
Transmission Files on your DEC/EDI Server.

 	In the Summary View dialog, check that the default server name is the 
one you have defined, and select the Date Range tab, click on Today and 
press OK.

 	You will be prompted to log on to the Server. Enter the defined server 
name, your user name and password to log on to the server.

 	Select Summary..Options and in the Summary Options dialog, select the 
display of both Inbound and Outbound documents and transmissions, 
and select Auto-updates every 1 minute.

 	This will show a number of status bars within the Cockpit summary 
view. Resize the Cockpit window do you can see all the totals, if 
possible.

 	In the summary view, a green LED icon indicates no failures, a yellow 
LED icon indicates no further failures since the last update, and a red 
LED icon indicates one or more documents or transmission files have 
failed since the last update. A black vertical bar on the status bar 
indicates the value prior to the last update, so you can monitor any 
changes.

 	Keep the Cockpit window active, and in a separate terminal window 
send the example document to DEC/EDI

5.	Send the document to DEC/EDI:

 	trade post DEC-DIRECT-UK-LTD -priority=high 
spec_of_minvox_out.dat \table_name=minvox_o

 	This will send the transmission file immediately it has been built, and 
automatically reimport it, using the "loopback" example script.

Cockpit, 
CommandCenter

6.	Use the Cockpit to monitor the progress of the documents and 
transmission files on the system. When they reach a status of 
Purgeable/Cancelled, the archive process will periodically remove them 
from the Current audit trail, and place them in the Archive audit trail. 
This is normal behaviour.

 	Eventually a document should appear with a status of Available. Double-
Click on the Available status bar, and in the Coose Summary Category 
dialog, click OK to view the Application ID.

 	The Application ID should be SHINY-NEW-SYSTEMS.This means that 
the document is now available for fetching by the SHINY-NEW-
SYSTEMS application.

Server Node

 	Once the document is available, you may fetch the application file by 
issuing a TRADE FETCH command:

 	trade fetch SHINY-NEW-SYSTEMS minvox_in.dat -
table_name=minvox_i

7.	Compare the fetched document with expected output using the 
following:

 	diff minvox_in.dat original_minvox_in.dat

 	

Network Tester

The Cockpit has a network testing option which is used by clicking-on the 
Network Tester icon to enable the facility. A menu-driven series of simple 
prompts take you through the test process. 

Note that you will need to know the identity of the server that you will be 
addressing. 

Error Messages

The following error message may occur if decedi_csg is not defined in the 
"services" file, or if the port number for decedi_csg is not compatible with 
the port number defined on the server.

Error when connecting to Server'

The specified address is not available from the local machine

If this occurs, you will need to modify the SERVICE file to add the correct 
Port number.

The line to be added is as follows:

DECEDI_CSG             <Port Number>/TCP

Where the Port Number is as you recorded during the configuration 
described in   DEC/EDI Services TCP/IP Port Numbers on page 3-4.

Tip

Use the Find File facility to locate the SERVICES file, and use Notepad to 
add the line with the Port Number.





Troubleshooting Common Problems

Tracing in the TCP/IP Client/Server Interface

The aim of the tracing is to aid users and field service personel in tracing 
what is going on during a TCP/IP exchange so that errors due to 
misconfiguration can be easily detected.

Environment

Tracing will be controlled by the environment variable 
DECEDI_TCP_TRACE, which is assigned a string. The string is composed 
of a series of letters, each letter identifying a particular component of the 
exchange that needs to be traced. 

The letters currectly supported are:

`A' : Switch on all trace options available

`C' : Trace children: Specific to the port server. This lists when children are 
created or reused, and to which child a request is rerouted.

`P' : Trace protocol: List the protocol messages sent and received.

`S' : Trace services: ? On the client side this reports which server nodes and 
services are attempted to be contacted.

? On the server side this reports which clients made contact to which 
services.

`T' : Trace traffic: List the size of messages being sent or received. This 
would normally be used in conjunction with `P'. The reason for two is that 
`P' is traced as soon as we send or receive the message header, whilst the `T' 
cant be done until be have completed sending or receiving the data.

To trace everything you could set DECEDI_TCP_TRACE to "A" or to 
"CPST".

Each process involved in the TCP/IP linkage does its own tracing to its own 
trace log. The log file being:

/var/adm/decedi/logs/tcp_trace_<pid>.log 



ObjectBroker-related Problems

•	'File Error' Cannot find OBB.DLL.

 Possibly followed by other file not found messages.

 This indicates ObjectBroker has not been installed. Either install 
ObjectBroker or use the TCP/IP interface.

•	OBB_INV_HOSTNOTFND (e), A host node could not be found to 
execute the request.

 One of the following may be true:

–	 The DEC/EDI Server node (the host node) does not exist.

–	 You typed the wrong Server node name.

–	 The Server node is not switched on or started up.

–	 The Server node does not have ObjectBroker installed.

–	 ObjectBroker is not started on the Server.

–	 One of the ObjectBroker Server processes started for DEC/EDI has 
failed on the Server, because of a problem on the Server.

 This error can also occur if you have insufficient network links. See the 
description of TRANSERR below.

•	OBB_INV_NOTAUTHORIZED (e), Client user is not authorized to 
access server.

 ObjectBroker on the Server has not been configured to allow your PC to 
access the system. Refer to DEC/EDI: User's Guide for details on how to 
correct this.

•	OBB_INV_TRANSERR (e), Transport error `No buffer space available'.

 This indicates that your PC has run out of network links and cannot 
provide an extra one that ObjectBroker now requires. You should either 
shut down other applications which are already running, and which are 
using network links, or you can increase the number of network links 
your PC can provide. Details of creating extra links on your PC vary 
depending on the networking software that you are using on your PC. 
Refer to the documentation for your networking software for details on 
how to increase the number of network links. You should expect to have 
to reboot your PC for any changes to take effect.

 If you are using Pathworks to provide your network layer, you can 
increase network resources (at the expense of some conventional 
memory) as follows:

–	 Use Notepad to open the file c:\pw\pwtcp.ini. (You may have 
installed your Pathworks files in a different directory to this one).

–	 Find the line that defines the number of network links, as in the 
following example:

    TCPMaxSock  =  8        ; max tcp connections

–	 Increase the value (set to 8 in this example) to the number of links 
you want, and save the file.

–	 Restart your network.

•	OBB_INV_CNTGETHOSTID (e), Can't get host ID.

 "127.0.0.1 LOCALHOST" is missing from the hosts file. This usually 
occurs on systems without DNS.

ODBC-related Problems

OnLine...

•	Data Source name not found and no default driver specified.

 This means the Server datasource needs to be configured with ODBC.

 Do this by selecting the Server | Define menu option from any of the 
CommandCenter editors or the Cockpit. Select to edit the datasource and 
select OK. This will cause the datasource to be configured automatically.

 If you specified the User Defined database type for this Server, then you 
need to configure the ODBC datasource manually. See the section in 
Post Installation tasks for details of how to do this.

•	Driver's SQLSetConnectOption failed
Driver not capable.
Error on Network connection, getserverbyname
[WSANO_DATA] system call failed.

 If you are using PATHWORKS to provide the TCP/IP network layer, 
then this means an entry is not added or is incorrectly added to the 
services file. 

•	Driver's SQLSetConnectOption failed
Driver not capable.
Error on Network connection, gethostbyname
[WSAHOST_NOT_FOUND] system call failed.

 The Network tester is unable to connect to the host server.

 Try using the ping utility to communicate with the host. 

•	If ping is successful, check you have the correct server nodename 
address. Select the Server | Define menu option from any of the 
CommandCenter functions or the Cockpit, and select to edit the 
datasource.

•	Driver's SQLSetConnectOption failed
Driver not capable.
Error on network connection, unknown connection problem.

 One common reason for this problem is that the server account 
referenced by the CommandCenter does not have access to the DEC/EDI 
database.

 You have to run decedi_config, select the Modify Database Users 
option and add the user account as a database user.

•	Driver's SQLSetConnectOption failed
Driver not capable.
User's password is not correct for the database server.

 The password specified in the Log onto Server screen is incorrect.

 Check the password was entered with the correct case, for example, 
check the Caps Lock key isn't on when it shouldn't be.

 Check the password matches the password for the account on the Server.

•	Driver's SQLSetConnectOption failed
Driver not capable.
User is not known on remote host.

 The account being used to connect to the server in the Log onto Server 
screen is incorrect.

 Check the username is entered with the correct case, for example, check 
the Caps Lock key isn't on when it shouldn't be.

 Check the username matches the account name on the Server.

•	The system hangs after selecting the ODBC button.

 One of the following may be true:

–	 If using PATHWORKS, this could be because the entry in the 
network services file is incorrect and does not match that on the 
Server. 

–	 The INFORMIX OnLine database server is not started on the Server 
node. Refer to the DEC/EDI: User's Guide for details of starting the 
INFORMIX OnLine database server.

•	Can't find file: WINSOCK.DLL.

 If you are using PATHWORKS, this means that the specified 
PATHWORKS file cannot be accessed. This could be due to one of the 
following:

–	 PATHWORKS has not been installed.

 Install PATHWORKS.

–	 The environment variable PATH does not include the PATHWORKS 
directory (usually c:\pw).

 Edit the file autoexec.bat and add the pathworks directory to the end 
of the PATH statement.

 If you are not using PATHWORKS, this file should still be provided by 
other network packages. Check whether they have been installed 
correctly.

•	Driver's SQLSet ConnectOption failed
Driver not capable
No connect permission.

 The ODBC account on the Server does not have permission to access the 
database.

 Use the decedi_config utility on the server to give it permission. Refer to 
the DEC/EDI: User's Guide for more information.

...OnLine

For information on troubleshooting other ODBC problems, refer to the 
INFORMIX-NET for Windows Configuration Guide, Version 5.01.

Rdb...

•	Trying to attach to a database or table causes Windows to crash, exit to 
DOS, or reboot.

 Pathworks has not been defined as the network in Windows setup.

 Run Windows setup either from Windows or from DOS. Make sure the 
network is set to Pathworks.

•	Trying to attach to a database or table fails with the message:

 [MICROSOFT][ODBC DLL]Driver's SQLAllocConnect failed.
[MICROSOFT][ODBC DLL]Driver's SQLAllocConnect failed.
[DEC][ODBC]Unsupported version of SQL/Services Client DLL.

 Multiple versions or the wrong version of sqsapiw.dll are present on the 
PC. Ensure that only one version of sqsapiw.dll is present on the PC and 
resides in the \windows\system directory. If necessary, copy sqsapiw.dll 
directly from the installation diskette to the \windows\system directory.

•	Trying to attach to a database or table fails with native error code -2035.

 This is a SQL/Services error that usually results when the corresponding 
SQL server on the DEC/EDI Server system has failed. This usually 
means that SQL/Services is incorrectly installed on the Server.

•	Attach fails with the error -2032.

 [DEC][ODBC][Rdb]%SQLSRV-F-NO_CLS, Invalid Class Name.

 An undefined SQL/Services class name was specified when the data 
source was configured on the PC via the ODBC Administrator.

•	Attach fails with the error -2003.

 [DEC][ODBC][Rdb]Network Error:Suberror code is 3.

 This occurs when SQL/Services is not running.

 [DEC][ODBC][Rdb]Network Error:Suberror code is 60.

 This occurs when the network link times out, usually as a result of the 
SQL/Services server crashing.Client not authorized to access database.

...Rdb

 The username supplied via ODBC is not authorized to access the 
database. Ensure that the user has an account on the server and has 
enough privileges to access the DEC/EDI database.

Enabling CORBA Server Startup Debugging

To get information on how a server is started to serve an CORBA style 
request issue, the following commands:

 	# obbmset -A -d1

This will produce a file, OBB<process-id>.log in the default directory 
of the account under which the server process runs. This may be used to 
capture any additional messages such as errors in the user's login command 
procedure.

In the same directory you can also define a file .obb_login which can 
setup any additional environmental details for the process. For instance, you 
could set OBB_TRACE_FLAGS in here.

Tracing CORBA Client Requests

To obtain information on how ObjectBroker finds and then sends data from 
the client to the server, define the environment variable  
OBB_TRACE_FLAGS to be the value "RTS" as part of the clients logon 
session.

For example, using the sh shell:

OBB_TRACE_FLAGS="RTS"

This will display information on the clients terminal as to what is happening 
to fulfil the CORBA request.
Chapter 11   OpenVMS  System 
Verification

Introduction

This chapter describes how to verify that the installed system configuration 
is functioning correctly, and how to identify and correct common problems.

Scope and Purpose 

This chapter takes the form of a self-paced tutorial that is designed to 
introduce you directly to setting up and using DEC/EDI after your system 
has been installed. The examples are designed to minimise the amount of 
data entry that you have to perform, and provide an overview of DEC/EDI.

The tutorial takes you quickly through the significant stages from starting 
with a newly installed and unconfigured DEC/EDI system, to exchanging 
and tracking documents between two hypothetical trading partners. As such, 
the activities it involves mirror many that will become familiar in live 
trading with partners either inside or outside your organization.



The example in this section installs the EDIFACT 90.1 standard, 
along with data labels of a specific format, which are used to identify EDI 
elements within the mapping process. If your DEC/EDI system already has 
EDIFACT 90.1 installed, check with your DEC/EDI administrator to make 
sure that you are not going to affect the existing system.

About the Tutorial

The tutorial introduces you to the following activities:

•	Verification that the DEC/EDI Server software and its pre-requisites 
have been successfully installed, and may be successfully started up and 
shut down.

•	The use of both local and remote Application Client systems to 
communicate with the DEC/EDI Server.

•	The use of PC-based Cockpit and CommandCenter installations to 
communicate with the DEC/EDI Server.

•	Configuration of the DEC/EDI Server with EDI Standards and Trading 
Partner profile details, and the use of the Import/Export communications 
gateway.

•	The compilation of a Mapping Table and its installation on the Server.

•	Monitoring the DEC/EDI Server to ensure it is able to correctly send, 
receive and process application files and EDI transmissions.

•	Basic housekeeping of the DEC/EDI Server, by archiving data that has 
been successfully processed.

The files described and used in this tutorial are provided as part of the 
DEC/EDI software installation.

Beyond the Scope and Purpose

The tutorial is not a detailed exercise in the more advanced aspects of 
system configuration, Mapping Table development, and application 
integration with DEC/EDI.

When you want to know more about any topic addressed by this tutorial, 
refer to the appropriate sections of the related books DEC/EDI: Application 
Development and the DEC/EDI: User's Guide.

Overview

The example in this tutorial covers the hypothetical case where your 
company, DEC Direct UK Ltd, is sending invoices to another company 
called Shiny New Systems.

In the outgoing case, you pretend to be DEC Direct UK Ltd which is 
sending the invoice. You have agreed with your Trading Partner, Shiny New 
Systems, that you will use a subset of the EDIFACT 90.1 INVOIC message 
which you have defined. To distinguish it from the message on which it is 
based, you have named the message subset MINVOX.

In the incoming case, you pretend to be Shiny New Systems which is 
receiving the invoice. You have agreed to receive and process the MINVOX 
subset of the EDIFACT 90.1 INVOIC message from your Trading Partner, 
DEC Direct UK Ltd

An Example Application File

There is an example application file that has come from your business 
application, which is provided as part of the DEC/EDI software installation.

The file is provided with the OpenVMS Application Client or Server, in the 
DEC/EDI examples directory:

DECEDI$EXAMPLES:MINVOX_OUT.DAT

About the 
Application File

The Application File contains some of the data to be sent in the MINVOX 
message. Before sending the message to your Trading Partner, the file needs 
to be processed to produce an EDI format message that can be sent to your 
Trading Partner. The following steps are involved in this process and are 
performed by separate components of the DEC/EDI server system:

•	Mapping — An intermediate file known as the Internal Format File is 
generated using data from the Application File. Some of the values in the 
Internal Format file are automatically generated, or calculated from other 
values or variables. This step is performed by the Mapper.

•	Conversion — The Internal Format File is converted into an EDI format 
message. This step is performed by the EDIFACT Converter.

•	Transmission File Building — One or more EDI format messages are 
placed in an EDI Transmission File, which is then ready to be sent to 
your Trading Partner. This step is performed by the EDIFACT 
Transmission File Builder.

Preparation Task Summary

The following list broadly summarizes the tasks you need to complete 
before attempting the client examples:

•	Install the prerequisite software and EDI definitions

•	Configure the client

•	Set up the server

•	Compile the example mapping tables

•	Create trading partner profiles

•	Start DEC/EDI

•	Build and replace the profile cache

The following sections tell you what to do in detail.

A: Installing the Software and EDI Definitions

1.	Install the prerequisite software in accordance with the DEC/EDI: 
Software Product Description (SPD).

2.	Install the DEC/EDI Client and Server. (These may be on different 
systems). 

 	For example, if you are installing from a device named CDROM:

 	$@SYS$UPDATE:VMSINSTAL DECEDIA032 CDROM: OPTIONS NInstall 
the DEC/EDI Message Update Service kit.

 	On OpenVMS, this is achieved by re-running the installation procedure 
on the DEC/EDI Server node, and selecting the option to install EDI 
standards definition.

 	Select the menu option to install the EDIFACT 90.1 IMPDEF files.

3.	Install the DEC/EDI CommandCenter on a remote PC, and configure the 
CommandCenter to communicate with the DEC/EDI Server.



The use of the CommandCenter is optional for OpenVMS servers.

 	Install the EDIFACT 90.1 standard by using the Message Update 
Service. 

 	Peform a minimal DEC/EDI startup, using the following command:

 	$ @SYS$STARTUP:DECEDI$STARTUP

 	Enter the following command:

 	$ RUN DECEDI$TOOLS:DECEDI$MESSAGE_UPDATES.EXE

 	You are presented with a list of available standards to install. Select 
EDIFACT 90.1 from the menu. This may take a few minutes to install.



If there are any other EDI standards that you wish to install, it is 
recommended that you do so at this stage, while the DEC/EDI Server is not 
in use.

4.	Install data labels for the EDIFACT 90.1 standard and create the private 
MINVOX document definition.

 	Run the DEC/EDI Table Extractor and Loader tool:

 	$ RUN DECEDI$TOOLS:DECEDI$TEL.EXE

 	Select option 2, Load Definitions, and give the location of the EDIFACT 
90.1 definition file:

 	DECEDI$EXAMPLES:EDIFACT_901_DIRECTORY.DAT

 	Enter the version number as 901, and confirm that you want to load the 
associated data labels as well.

 	Select option 2, Load Definitions, and give the location of the MINVOX 
definition file:

 	DECEDI$EXAMPLES:EDIFACT_901_MINVOX_DOCUMENT.DAT

 	Enter the version number as 901, and specify MINVOICE as the 
internal document id.

 	Select option 3, Exit.

B: Configuring the Client

The DEC/EDI Client may be run either locally, that is, on the same node as 
the DEC/EDI Server, or remotely on a different node.

Granting User Access Rights

Before registering a user with DEC/EDI, that user must first be registered 
with the OpenVMS system. The user must already have an OpenVMS 
Authorization Entry in SYS$SYSTEM:SYSUAF.DAT, granting one of the 
following OpenVMS rights identifiers:

•	DECEDI$ADMINISTRATOR 
You can then register the user with DEC/EDI, giving administrator 
access rights.

•	DECEDI$SUPERVISOR 
You can then register the user with DEC/EDI, giving supervisor access 
rights. 

You register a user with DEC/EDI by using the DEC/EDI command 
ADD USER, assigning DEC/EDI access rights. 

In Interchange there are two levels of DEC/EDI access rights:

•	Administrator access rights: TRANS_ADMIN or COMMS_ADMIN  

•	Supervisor access rights: SUPERVISOR

Configure Network Interface

Configure the DEC/EDI Client and Server either for a TCP/IP only 
connection, or for the use of ObjectBroker.

1.	On the DEC/EDI Server, run the DEC/EDI configuration utility:

 	Ensure that the DEC/EDI logical names have been defined by entering 
the following command:

 	$ @SYS$STARTUP:DECEDI$LOGICALS

 	Run the configuration utility:

 	$ @DECEDI$TOOLS:DECEDI$CONFIGURE_CLIENT_SERVER

2.	Configure the chosen network interface, using one of the following 
options:

–	 Configure TCP/IP Client/Server link, or

–	 Configure ObjectBroker

 	Confirm that you wish to use the chosen interface for local client access.

 	If using ObjectBroker, specify the server OBB_LOCAL, to use the local 
application client.

3.	If using a remote client, repeat steps 1 and 2 on the remote client node, 
ensuring that you select the same network interface as you configured on 
the DEC/EDI Server.

 	If using ObjectBroker, specify the server node name.

 	If using the TCP/IP network interface, add the server node name to the 
Server configuration file.

4.	If using ObjectBroker on a remote client, make sure that the client node 
is proxied into the decedi account, by entering the following command 
on the DEC/EDI Server:

 	$ APPLICATION/BROKER

 	OBB>	 

 	On the remote client node, make sure that the server node is proxied into 
the user account under which you will run the client examples. This is 
normally your own user account, provided you are authorized to use 
ObjectBroker.

C: Compiling the Mapping Tables

You may use the CommandCenter Mapping Table Editor on a remote PC or 
the FileBridge User Interface.

CommandCenter

Load and compile the Mapping Tables using the CommandCenter Mapping 
Table Editor. These tables are supplied with the CommandCenter.   
Alternatively, you may like a more detailed look at how these are created, so 
that you can create a mapping table for your own future needs. 

For detailed steps in creating the incoming and outgoing Mapping tables 
used by this example, refer to the next two chapters in this part of the book, 
Creating an Incoming Mapping Table and Creating an Outgoing Mapping 
Table.

If you choose to use the supplied mapping tables, complete the following: 

1.	Select the Getting Started option, Load Sample Incoming Mapping 
Table and select MINVOX_I. 

2.	Compile this table by selecting Compile option from the Mapping 
menu.

3.	When the table has compiled successfully, copy it to the server by 
clicking on Ok in the Copy to Server window that pops up.

4.	Repeat the above procedure for the MINVOX_O table. 

 	Note that this sample table can also be loaded from the File menu.

FileBridge

1.	Change to your local working directory

2.	Copy the MINVOX examples:

$ COPY DECEDI$EXAMPLES:MINVOX_*.FBO SYS$DISK:[]

3.	Compile the tables as shown below:

$ FILEBRIDGE DEFINE/COMPILE MINVOX_OUT.FBO

$ FILEBRIDGE DEFINE/COMPILE MINVOX_IN.FBO

4.	Rename the compiled mapping tables, to use the table names that will be 
specified when issuing a POST or FETCH request:

$ RENAME MINVOX_OUT.FBO MINVOX_O.FBO

$ RENAME MINVOX_IN.FBO MINVOX_I.FBO

5.	Copy the compiled mapping tables to the Mapping Table directory 
DECEDI$MAPS:

$ COPY MINVOX_%.FBO DECEDI$MAPS:

D: Configuring the Server

Registering the Services

1.	Start Interchange with the command:

 	$ INTERCHANGE

2.	Use the $ EDIT CONFIGURATION facility to select MAINTAIN 
SERVICES, press INSERT then add the following component:

 	EDIFACT_TRANSLATOR

3.	Move the cursor to Save and press Select

 	Repeat Step 2 for component IMPORT_EXPORT_GATEWAY with 
ID: CVP_E

4.	Finish by using the EXIT key.

Registering the Business Applications

1.	Start Interchange with the command:

 	$ INTERCHANGE

2.	Use the EDIT CONFIGURATION facility to select REGISTER 
APPLICATIONS, press INSERT then add the following Invoice 
Application:

 	DEC-DIRECT-UK-LTD

3.	Add the following details:

 	ID:       DEC-DIRECT-UK-LTD

 	Name:     DECdirect (UK) Ltd

4.	Press Do to save the details

5.	Repeat Step 3 and 4 to add the following entries:

 	ID:       SHINY-NEW-SYSTEMS

 	Name:     Shiny New Systems

6.	Finish by using the EXIT key.

Registering a Node

1.	Start the DEC/EDI User Interface with the command:

 	$ INTERCHANGE

2.	Use the EDIT CONFIGURATION facility to select REGISTER NODE, 
press INSERT then add the node and transport details appropriate to your 
installation, by selecting from the menu

3.	Finish by using the EXIT key.

E: Adding Trading Partner Profiles

1.	Start the DEC/EDI User Interface with the command:

 	$ INTERCHANGE

2.	Load the profiles:

 	EDI> LOAD PROFILE DECEDI$EXAMPLES:PROFILE_DEC-DIRECT-UK-
LTD.DAT 

 	EDI> LOAD PROFILE DECEDI$EXAMPLES:PROFILE_SHINY-NEW-
SYSTEMS.DAT 

3.	Use the following command to examine a profile:

 	EDI> LIST PROFILE /FULL DEC-DIRECT-UK-LTD

4.	Finish by using the EXIT key.

5.	Build the cache on completionm with the following command:

 	EDI> BUILD CACHE /ALL

 	EDI> REPLACE CACHE /ALL

F: Start the DEC/EDI Server

Start the DEC/EDI Server by entering the following command:

$ @SYS$STARTUP:DECEDI$STARTUP FULL

G: Running the Examples

Sending the Document

Application 
Client Node

1.	Copy the following files from the DECEDI$EXAMPLES directory to 
your local Client directory:

 	MINVOX_IN.DAT

 	MINVOX_OUT.DAT

2.	Rename MINVOX_IN.DAT to ORIGINAL_MINVOX_IN.DAT

3.	Send the document to DEC/EDI:

 	$ TRADE POST DEC-DIRECT-UK-LTD spec_of_MINVOX_OUT.DAT - 
/TABLE=MINVOX_O /PRIORITY=HIGH

Server Node

4.	Enter the DEC/EDI user interface:

 	$ INTERCHANGE 

 	then monitor the progress of the invoice you have sent using:

 	$ INTERCHANGE

 	EDI> LIST DOCUMENT

 	EDI> LIST TRANSMISSION

 	Or use Cockpit to follow the progress of the invoice you have sent. The 
transmission file should eventually appear with the following status:

 	AWAITING_TRANSMISSION

5.	Once the documents are successfully built and awaiting transmission, 
start CVP_E connection using the following command:

 	$ INTERCHANGE START CONN CVP_E IMPEXP

6.	The resulting transmission file is exported to the Import/Export gateway 
directory DECEDI$TOP:[CVP.IMPEXP] with a file type of .EXPORT.

 	Rename the exported transmission file, to a new unique transmission file 
name, with a file type of .IMPORT. Ensure that the last part of the file 
name is CVP_E. For example,

 	$ RENAME -

 	DECEDI$TOP:[CVP.IMPEXP]19JUN199711593183_CVP_E.EXPORT -

 	DECEDI$TOP:[CVP.IMPEXP]I01_19JUN199711593183_CVP_E.IMPORT

7.	Reimport the transmission file by starting the CVP_E connection:

 	$ INTERCHANGE START CONN CVP_E IMPEXP

8.	Enter the DEC/EDI user interface:

 	$ INTERCHANGE 

 	then monitor the progress of the invoice you have sent using:

 	$ INTERCHANGE

 	EDI> LIST TRANSMISSION

 	EDI> LIST DOCUMENT

 	Or use Cockpit to follow the progress of the invoice you are importing. 
The document should eventually be created with the following status:

 	AVAILABLE

9.	Once the document is available, you may fetch the application file by 
issuing the TRADE FETCH command:

 	$ TRADE FETCH DEC-DIRECT-UK-LTD SYS$SCRATCH:MINVOX_IN.DAT - 
/TABLE=MINVOX_I

10.	Compare the fetched document with expected output using the 
following:

 	$ DIFFERENCES MINVOX_IN.DAT ORIGINAL_MINVOX_IN.DAT

 	

Network Tester

The Cockpit has a network testing option which is used by clicking-on the 
Network Tester icon to enable the facility. A menu-driven series of simple 
prompts take you through the test process. 

Note that you will need to know the identity of the server that you will be 
addressing. 

Error Messages

The following error message may occur if decedi_csg is not defined in the 
"services" file, or if the port number for decedi_csg is not compatible with 
the port number defined on the server.

Error when connecting to Server'

The specified address is not available from the local machine

If this occurs, you will need to modify the SERVICE file to add the correct 
Port number.

The line to be added is as follows:

DECEDI_CSG             <Port Number>/TCP # port number

Where the Port Number is as you recorded during the configuration 
described in   DEC/EDI Services TCP/IP Port Numbers on page 3-4.

Tip

Use the Find File facility to locate the SERVICES file, and use Notepad to 
add the line with the Port Number.



Troubleshooting Common Problems

ObjectBroker Tracing

You must shut down Windows to achieve this. Once Windows has been shut 
down, issue the following commands at the MS-DOS prompt:

C:\> set OBB_TRACE_FLAGS=RTS

C:\> set OBB_TRACE=C:\OBBTRACE.LOG

This causes a trace file to be generated (c:\obbtrace.log). Remember to 
remove these environment variables when you have finished tracing:

C:\> set OBB_TRACE_FLAGS=

C:\> set OBB_TRACE=

ODBC Tracing

Use the Microsoft ODBC administrator. This resides in the Control Panel. 
Run the ODBC administrator and do the following:

•	Select Options.

•	Select the Trace ODBC Calls option.

•	Choose a file to be used to store the trace information - click on the 
Select File... button.

This creates a trace file detailing ODBC activity for each function call or 
request that uses ODBC. Remember to turn tracing off when you no longer 
need it.

SQL/Services Tracing

Rdb...

SQL/Services tracing provides a detailed log of all individual SQL database 
functions executed.

To enable SQL/Services tracing, use an editor, such as Notepad, to open the 
following file:

\WINDOWS\SQSAPIW.INI 

Enable client logging by removing the semi-colon (;) comment mark before 
the line:

ClientLogging=7

You should restart Windows for this change to take effect. This generates a 
file called CLIENT.LOG which details all the SQL/Services calls made.

...Rdb

Reverse the change to SQSAPIW.INI when you no longer need tracing. You 
should restart Windows for this to be effective.

Tracing in the TCP/IP Client/Server Interface

The aim of the tracing is to aid users and field service personel in tracing 
what is going on during a TCP/IP exchange so that errors due to 
misconfiguration can be easily detected.

Environment

Tracing will be controlled by the environment variable logical 
DECEDI$TCP_TRACE, which is assigned a string. The string is composed 
of a series of letters, each letter identifying a particular component of the 
exchange that needs to be traced. 

The letters currectly supported are:

`A' : Switch on all trace options available

`C' : Trace children: Specific to the port server. This lists when children are 
created or reused, and to which child a request is rerouted.

`P' : Trace protocol: List the protocol messages sent and received.

`S' : Trace services: ? On the client side this reports which server nodes and 
services are attempted to be contacted.

? On the server side this reports which clients made contact to which 
services.

`T' : Trace traffic: List the size of messages being sent or received. This 
would normally be used in conjunction with `P'. The reason for two is that 
`P' is traced as soon as we send or receive the message header, whilst the `T' 
cant be done until be have completed sending or receiving the data.

To trace everything you could set DECEDI_TCP_TRACE to "A" or to 
"CPST".

Each process involved in the TCP/IP linkage does its own tracing to its own 
trace log. The log file being:

DECEDI$ERROR:tcp_trace_<pid>.log 

ODBC-Related Problems

Pathworks error #0

This usually occurs if SQL/Services is not running on the OpenVMS 
system, or the node name is not defined in the Pathworks DECnet database.

To define a node in the DECnet database, use the MSDOS prompt to run 
NCP:

ncp                                                          

ncp> define node xx.xxx name name 

ncp> exit

xx.xxx is the network address, for example 23.345; name is the DECnet 
nodename.



Do not use Pathworks NCP for Windows; this only defines the node 
in the V5 database and not the V4 database as read by SQL/Services.

This is true of Pathworks V5.0A and may not be true of later versions.

Pathworks error #3

Pathworks error #3 EREMNODESHUT Remote node requested 
shutdown

This usually means that your PC believes that SQL/Services has shutdown 
on your Server. This is not always the case. Verify that SQL/Services has 
indeed shutdown on your Server. Look for a process called 
SQLSRV$SERVER, if it does not exist then get your System Manager to 
start it up with:

@SYS$STARTUP:SQLSRV$STARTUP

Driver not capable

This means you have installed other software on your PC since ODBC 
installation, and it has disturbed the DEC/EDI settings. A more likely cause 
is that your ODBC kit is too old, in which case you should obtain the latest 
kit, and reinstall.

Pathworks has not been defined as the network in Windows setup

Run Windows setup either from Windows or from DOS. Make sure the 
network is set to Pathworks. This only applies to Pathworks DECnet or 
TCP/IP.

Unsupported version of SQL/Services Client DLL

Trying to attach to a database or table fails with the message:

[MICROSOFT][ODBC DLL]Driver's SQLAllocConnect failed.

[DEC][ODBC]Unsupported version of SQL/Services Client 
DLL.

Multiple version or the wrong version of SQSAPIW.DLL are present on the 
PC. Ensure that only one version of SQSAPIW.DLL is present on the PC 
and resides in the \WINDOWS\SYSTEM directory. If necessary, copy 
SQSAPIW.DLL directly from the installation diskette to the 
\WINDOWS\SYSTEM directory.

Trying to attach to a database or table fails with native error code -2035

This is a SQL/Services error which usually results when the Server on the 
VMS system has died. This usually means that SQL/Services was never 
installed correctly on the VMS machine. On the VMS machine, examine 
SYS$STARTUP:SQLSRV$.LOG and any logs in the default SQL /Services 
account for the cause of the problems.

Invalid Class Name

[DEC][ODBC][Rdb]%SQLSRV-F-NO_CLS, Invalid Class Name

An undefined SQL/Services class name was specified when the data source 
was configured on the PC via the ODBC Administrator.

Another potential reason is that you are running SQL /Services standard 
version which expects GENERIC as the class, or SQL/Services multi 
version, which expects V61 etc. as the class name.

Suberror code is n [DEC][ODBC] [Rdb]Network Error: 
Suberror code is nn

This is usually a Pathworks error where nn = the Pathworks error code.

The error codes can be found in the Pathworks files errno.h (for DECNET) 
or sock_err.h (for TCP/IP).

Some of the more common errors are:

•	[DEC][ODBC][Rdb]Network Error: Suberror code is 3

 This occurs when SQL/Services is not running.

•	[DEC][ODBC][Rdb]Network Error: Suberror code is 49

 This occurs when the target DECNET node is not defined on the PC.

•	[DEC][ODBC][Rdb]Network Error: Suberror code is 60

 This occurs when pathworks times out, usually as a result of the 
SQL/Services Server crashing.

Client not authorized to access database

The username supplied via ODBC is not authorized to access the database. 
Ensure the user has an account on the Server and has enough privileges to 
access the DEC/EDI database.

ObjectBroker-Related Problems

CNTGETHOSTID

CORBA_INITIALIZE OBB_INV_CNTGETHOSTID (e), Cannot 
retrieve host identifier

This applies to DECnet PC nodes only. Pathworks maintains a database of 
nodenames that it knows, but doesn't actually know the name of the node 
itself. You need to define the node in the database:

ncp                                                                                                                           
ncp> define node xx.xxx name name                         
ncp> exit

NOTAUTHORIZED

CORBA_NO_IMPLEMENT

OBB_INV_HOSTNOTFND (e), A host node could not be found to 
execute the request.

OBB_INV_NOTAUTHORIZED (e), Client user is not authorized to 
access server.

Your PC is not authorized to access the DEC/EDI GUI Server. On your 
Server system check you have proxy with:

$ APPLICATION/BROKER                                      OBB> 
SHOW PROXY

Local User          Remote User         Remote 
Host        ----------          -----------         ----
-------      SMITH               Default             PCNODE

If you do not have an entry list for your PC, use the following command:

$ APPLICATION/BROKER                                    OBB> add 
proxy user/remote=(user=*,host=pcnode)

Replace user and pcnode with the username (for example DECEDI) and PC 
nodename you intend to use.

KEYNOTFND

CORBA_NO_IMPLEMENT 

OBB_INV_HOSTNOTFND (e), A host node could not be found to 
execute the request.

OBB_REG_KEYNOTFND (e), Could not find key

`Implementations\Definitions\706b8f34c138.0c.b1.a8.00.00.00.00
.00'.

Your DEC/EDI GUI Server is not registered on your Server node. 
Use the following command to register the Server:

$ @DECEDI$TOOLS:DECEDI$CONFIGURE_ACAS

Enabling CORBA Server Startup Debugging

To get information on how a server is started to serve an CORBA style 
request issue, the following commands:

 	$ APPLICATION/BROKER SET AGENT/STARTUP

This will produce a file, OBB_STARTUP.OUT, in the default directory of the 
account under which the server process runs. This may be used to capture 
any additional messages such as errors in the user's login command 
procedure.

In the same directory you can also define a file OBB$LOGIN.COM which can 
setup any additional environmental details for the process. For instance, you 
could set OBB_TRACE_FLAGS in here.

Tracing CORBA Client Requests

To obtain information on how ObjectBroker finds and then sends data from 
the client to the server, define the VMS logical OBB_TRACE_FLAGS to be 
the value "RTS" as part of the clients logon session.
