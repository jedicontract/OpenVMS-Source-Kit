%!PS-Adobe-3.0
%%Title: HSM041_COVER
%%Creator: DECdocument  V3.2-1A
%%Copyright: 1994-1997 Touch Technologies, Inc.
%%+All Rights Reserved.
%%CreationDate: Fri Jan 10 2003 14:29:55
%%For: CHITRA      
%%BoundingBox: (atend)
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%DocumentFonts: (atend) 
%%DocumentNeededFonts: (atend) 
%%DocumentProcSets: Underlay Color5044
%%DocumentSuppliedProcSets: Underlay Color5044
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%+++TTI changes : added ROTB back in
%+++            : added 1000 ROTB = begin special code example
%+++            : added 1001 ROTB = end special code example
%+++            : added 1002 ROTB = digital logo
%
%%BeginResource: procset Underlay
%%CreationDate: (2/10/92)
%
% In VAX DOCUMENT V2.1-1, simple EPSF files up to 65,000 bytes long
% may be an underlay. Define the EPSF as a PostScript proceedure
% called /UNDERLAY and prefix to DOCUMENT's PS output  For example:.
% /UNDERLAY ( EPSF code here ) cvx def
%
% To create a "DRAFT" underlay change /UNDERLAY* to /UNDERLAY
/UNDERLAY* (
  /Note (DRAFT) def
  /NoteSize 120 def
  /NoteFont /Helvetica findfont NoteSize scalefont def
  /Note where { pop Note length 0 gt {
    /NoteWidth NoteFont setfont Note stringwidth pop def
    PaperWidth 36 mul PaperHeight 36 mul moveto
    PaperHeight PaperWidth atan rotate
    NoteWidth -2 div NoteSize .729 mul -2 div rmoveto 
    Note true charpath .075 setseparationgray fill
  }if  }if
) cvx def
%%EndResource
%
%%BeginResource: procset Color5044
%%CreationDate: (1/21/91)
%%Version:1.0 3
%Implementation of Adobe 5044 color specification
%/ndf allows command override during color separation
/Color5044Dict 100 dict def
Color5044Dict begin
/bdf {bind def} def
/ndf
  {1 index where
    {pop pop pop
    }
    {dup xcheck
      {bind} if
    def
    }
    ifelse
  } bdf
/setcmykcolor
  {1 exch sub
  3 
    {dup 5 -1 roll sub 0 2 copy lt
      {exch} if
    pop exch
    } repeat
  pop setrgbcolor
  }ndf
/setcmykcoloroverprint
  {4
    {dup -1 eq
      {pop 0} if
      4 1 roll
    } repeat
  setcmykcolor
  } ndf
/findcmykcustomcolor
  {5 /packedarray where
    {pop packedarray
    }
    {array astore readonly
    }
    ifelse
  } ndf
/setcustomcolor
  {exch aload pop pop
  4
    {4 index mul 4 1 roll
    } repeat
  setcmykcolor pop
  } ndf
/setseparationgray
  {1 exch sub systemdict /setgray get exec
  } ndf
/setoverprint {pop} ndf
/currentoverprint false ndf
%CMYK multi-proc colorimage
/colorimage
  {4 ne
    {(\nUnsupported number of colors for colorimage.\n) print flush quit
    } if
  not
    {(\nSingle procedure form  colorimage unsupported.\n) print flush quit
    } if
  save 20 dict begin /&saveobj exch def
  /&Kproc exch def /&Yproc exch def /&Mproc exch def /&Cproc exch def
    {&Cproc &Mproc &Yproc &Kproc
    /&K exch def /&Y exch def /&M exch def /&C exch def
    0 1 &K length 1 sub
      {/&i exch def
      &K &i 255
      &C &i get 30 mul
      &M &i get 59 mul add
      &Y &i get 11 mul add
      &K &i get 100 mul add
      100 idiv
      dup 255 gt
        {pop 255} if
      sub put
      } for
    &K
    } image
  &saveobj end restore
  } ndf
/customcolorimage
  {pop systemdict /image get exec
  } ndf
/separationimage
  {systemdict /image get exec
  } ndf
end
%%EndResource
Color5044Dict begin
%
/DEC_DVC$dict 300 dict def
DEC_DVC$dict begin
%
/DVC$PSJob save def
%
mark		% CREATE ISOLatin1Encoding if not there already
/ISOLatin1Encoding
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute 
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1Encoding where not {256 array astore def} if 
cleartomark
%
/DOCPSE ISOLatin1Encoding 256 array copy def
mark						% CREATE DOCPSE ENCODING
  8#055 /hyphen
  8#201 /bullet    8#202 /emdash     8#203 /endash    8#204 /dagger
  8#205 /daggerdbl 8#206 /registered 8#207 /trademark %8#210 /Delta
  8#211 /fi        8#212 /fl         8#213 /OE        8#214 /oe
  8#215 /Ydieresis
  counttomark -1 bitshift			% DIVIDE BY 2
  {DOCPSE 3 1 roll put} repeat			% STACK NOW CONTAINS MARK
cleartomark
%
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
}def
%
/cvsstr 64 string def
/tempmatrix matrix def
%
% Exit page (temporarily) to add fonts/characters.
/XP { }def
% 
% Resume page
/RP {/ExampleState 0 def} def		% RESUME PAGE
/ExampleState 0 def
%
% End Page: EP
/EP {DVC$PSPage restore}def
%
% Purge fonts to reclaim VM
/PF {
  currentoverprint
  currentrgbcolor
  EP			%Does restore
  PageSetup     %Does save
  setrgbcolor
  setoverprint
}def
%
% ABBREVIATIONS 
/S /show load def
/SV /save load def
/RST /restore load def
%
/Yadjust {Ymax exch sub} def
%
/SXY {		% (x,y) POSITION ABSOLUTE, JUST SET Xpos & Ypos, DON'T MOVE
  Yadjust  /Ypos exch def /Xpos exch def
} def
%
/XY {						% (x,y) POSITION ABSOLUTE
  Yadjust moveto
} def
%
/X {						% (x,0) POSITION ABSOLUTE
  currentpoint exch pop moveto
} def
%
/Y {						% (0,y) POSITION ABSOLUTE 
  currentpoint pop exch Yadjust moveto
} def
%
/xy {						% (x,y) POSITION RELATIVE
  neg rmoveto
} def
%
/x {						% (x,0) POSITION RELATIVE
  0 rmoveto
} def
%
/y {						% (0,y) POSITION RELATIVE
  0 exch neg rmoveto
} def
%
/R {						% Draw a rectangle
  /ht exch def  /wd exch def   gsave
  currentpoint  newpath  moveto
  0 ht rlineto  wd 0 rlineto
  0 ht neg rlineto  wd neg 0 rlineto
  closepath fill grestore wd 0 rmoveto
}def
%
%Setup Page Media:  <paper-height> <paper-width> PM
/PM {
  /Xmax exch Resolution mul def
  /Ymax exch Resolution mul def
  /UNDERLAY where {
    pop
    /eps_save save def		% save before EPSF underlay
    Resolution 72 div dup scale % Revert coords to points
    count array astore /DVCstack exch def % save op stack
    /dict_count countdictstack def % # of dicts
    userdict begin		% default dict
    /showpage {}def		% disable showpage
    0 setgray
      {UNDERLAY} stopped {(Error executing /UNDERLAY)== quit}if
    countdictstack dict_count sub {end} repeat % clean up dict stack
    clear DVCstack aload pop	% restore op stack
    eps_save restore		% restore after EPSF
  }if
  PageSetup
}def
%
%Setup page coordinates
/PageSetup
{
%  /DVC$PSPage {save} def % ++cjb: fix VME bug
  /DVC$PSPage save def
  PortraitMode not {PaperWidth 0 translate  90 rotate} if
  /Xpos 0 def
  /Ypos 0 def
}def
%
% Begin EPS file: <xoffset> <yoffset> SPB
/SPB {
  Yadjust transform		% convert from DVC to device coords
  EP				% page-level restore
  /eps_save save def		% save before EPSF
  Resolution 72 div dup scale 	% Revert coords to points
  itransform			% convert position back to points  
  translate			% set position for EPSF
  PortraitMode not {90 rotate} if % rotate for EPSF
  count array astore /DVCstack exch def	% save op stack
  /dict_count countdictstack def % # of dicts
  userdict begin		% default dict
  /showpage {}def		% disable showpage
  0 setgray
}def
%
% End EPS file
/SPE {
  countdictstack dict_count sub {end} repeat % clean up dict stack
  clear DVCstack aload pop	% restore op stack
  eps_save restore		% restore after EPSF
  PageSetup			% restore DVC coords
}def
%
% Print-Page Routine: <Page #> PP
/PP {
  gsave
  showpage
  grestore
}def
%
/DMF {		%  /font-name <point-size> DMF
  exch findfont exch scalefont setfont
}def
%
/concatnam {	%  /abcd (xxx) concatnam  ==> /abcdxxx
  /xxx exch def
  /namstr exch cvsstr cvs def
  /newnam namstr length xxx length add string def
  newnam 0 namstr putinterval
  newnam namstr length xxx putinterval
  newnam cvn 
}def
%
/strip {	%  /abcdef 2 strip ==> /cdef
  /num exch def  /nam exch def
  /namstr nam cvsstr cvs def
  /newlen namstr length num sub def
  namstr num newlen getinterval  cvn
}def
%		ROUTINES TO HANDLE PACKING/UNPACKING NUMBERS
/PackHW {	% <target> <pos> <num> PackHW --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#0000FFFF and 1 pos sub 16 mul bitshift  target or
}def
/PackByte {	% <target> <pos> <num> PackByte --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#000000FF and 3 pos sub 8 mul bitshift   target or
}def
/UnpkHW {	%  <pos> <num> UnpkHW --> <unpacked value>
  /num exch def  /pos exch def
  num 1 pos sub -16 mul bitshift 16#0000FFFF and
  dup 16#00007FFF gt {16#00010000 sub} if
}def
/UnpkByte {	%  <pos> <num> UnpkByte --> <unpacked value>
  /num exch def  /pos exch def
  num 3 pos sub -8 mul bitshift 16#000000FF and
  dup 16#0000007F gt {16#00000100 sub} if
}def
%
/ps-scalefont {
    % FOR PS FONTS, LOOK AT SIZE REQUESTED.  IF IT HAS A DECIMAL REMAINDER
    % EQUIVALENT TO .001-.009 POINTS (I.E., .050-.450 VAXDOC UNITS), THAT'S 
    % A FLAG TO STRETCH IT VERTICALLY BY ADDING 1-9 EXTRA POINTS TO THE 
    % VERTICAL SCALING.
                % save requested size - as entered and as integer
    dup /x-size exch def cvi /x-int exch def
                % calc decimal remainder, mul x 1000, round
    x-size x-int sub 1000 mul round cvi /remainder exch def
                % see how we scale...
    remainder 50 lt remainder 450 gt or {
                % scale isomorphically
        /ystretch 0 def
        x-size scalefont
    } {
                % scale anamorphically
        /ystretch remainder def
        x-int ystretch add /y-size exch def
        [x-int 0 0 y-size 0 0] makefont
    } ifelse
}def
%
/DPSF {		% /procname size /fontname DPSF
    findfont exch ps-scalefont [ exch /setfont cvx ] cvx def
}def
%
/PXLBuildCharDict 17 dict def
/CMEncodingArray 256 array def
0 1 255 {CMEncodingArray exch dup cvsstr cvs cvn put} for
/RasterConvert {RasterScaleFactor div}def
/TransformBBox {
  aload pop
  /BB-ury exch def  /BB-urx exch def  /BB-lly exch def  /BB-llx exch def
  [ BB-llx RasterConvert BB-lly RasterConvert 
    BB-urx RasterConvert BB-ury RasterConvert ]
}def
/RunLengthToRasters {
  % none yet
}def
/GenerateRasters {			% GENERATE RASTERS FOR "IMAGEMASK"
  rasters  runlength 1 eq {RunLengthToRasters} if
}def
%
/int-dict-name {int (-dict) concatnam}def
/int-dict {int (-dict) concatnam cvx load}def
%
/DefinePXLFont {
	%  <int-font-name><ext-font-name><pt-sz(pix)><PXL mag><num-chars>...
	%  ...[llx lly urx ury]<newfont-fg>DefinePXLFont
  /newfont exch def  /bb exch def      /num exch def  /psz exch def
  /dsz exch def      /pxlmag exch def  /ext exch def  /int exch def
  /fnam ext (-) concatnam pxlmag cvsstr cvs concatnam def
  newfont not {
    int-dict-name 13 dict def
    int-dict begin
      /FontType 3 def  /FontMatrix [ 1 dsz div 0 0 1 dsz div 0 0 ] def
      /FontBBox bb TransformBBox def  /Encoding CMEncodingArray def
      /CharDict 1 dict def  CharDict begin  /Char-Info num array def  end
      /BuildChar {
        PXLBuildCharDict begin
          /char exch def  /fontdict exch def
          fontdict /CharDict get /Char-Info get char get aload pop
          /rasters exch def  /PackedWord1 exch def
          0 PackedWord1 UnpkHW 16#7FFF ne {
	    /PackedWord2 exch def  /wx 0 PackedWord1 UnpkHW def
            /rows 2 PackedWord1 UnpkByte def  /cols 3 PackedWord1 UnpkByte def
            /llx 0 PackedWord2 UnpkByte def   /lly 1 PackedWord2 UnpkByte def
            /urx 2 PackedWord2 UnpkByte def   /ury 3 PackedWord2 UnpkByte def
	  }{ %else
	    /PackedWord2 exch def  /PackedWord3 exch def /PackedWord4 exch def
            /wx 1 PackedWord1 UnpkHW def    /rows 0 PackedWord2 UnpkHW def
            /cols 1 PackedWord2 UnpkHW def  /llx 0 PackedWord3 UnpkHW def
            /lly 1 PackedWord3 UnpkHW def   /urx 0 PackedWord4 UnpkHW def
            /ury 1 PackedWord4 UnpkHW def
          } ifelse
          rows 0 lt {
	    /rows rows neg def /runlength 1 def
	  }{ %else
	    /runlength 0 def
	  } ifelse
          wx 0
          llx RasterConvert lly RasterConvert 
          urx RasterConvert ury RasterConvert setcachedevice
          rows 0 ne {
	    gsave
	      cols rows true  RasterScaleFactor 
              0 0 RasterScaleFactor neg llx .5 add neg ury .5 add 
              tempmatrix astore  GenerateRasters imagemask
            grestore
          } if
        end
      }def
    end
    fnam int-dict definefont pop 
  } if 
  int-dict-name fnam findfont psz scalefont def
  currentdict int [ int-dict /setfont cvx ] cvx put
}def 
/PXLF { true  DefinePXLFont}def	% SIGNAL THAT FONT ALREADY LOADED
/PXLNF {false  DefinePXLFont}def	% SIGNAL THAT FONT NOT ALREADY LOADED
%
/PXLC {	% <int-font-name><code><wx><llx><lly><urx><ury>...
	% ...<rows><cols><runlength><rasters>PXLC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /wx exch def       /code exch def       /int exch def
  % SEE IF LONG OR SHORT FORMAT IS REQUIRED
  true cols CKSZ rows CKSZ ury CKSZ urx CKSZ lly CKSZ llx CKSZ 
  TackRunLengthToRows {
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 llx PackByte 1 lly PackByte 2 urx PackByte 3 ury PackByte
      0 0 wx PackHW 2 rows PackByte 3 cols PackByte rasters ] put
  }{ %else
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 urx PackHW 1 ury PackHW   0 0 llx PackHW 1 lly PackHW
      0 0 rows PackHW 1 cols PackHW 0 0 16#7FFF PackHW 1 wx PackHW rasters ] put
  } ifelse
}def
%
/CKSZ {abs 127 le and}def
/TackRunLengthToRows {runlength 0 ne {/rows rows neg def} if}def
%
/PLOTC {
  % <wx><dsz><psz><llx><lly><urx><ury><rows><cols><runlength><rasters>PLOTC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /psz exch def      /dsz exch def        /wx exch def
  % "PLOT" A CHARACTER'S RASTER PATTERN
  rows 0 ne {
    gsave
      currentpoint translate  psz dsz div dup scale
      cols rows true  RasterScaleFactor 0 0 RasterScaleFactor 
      neg llx .5 add neg ury .5 add  tempmatrix astore
      GenerateRasters imagemask
    grestore
  } if
  wx x
}def
%
% set color routine: Color# SC
/SC {ColorPalette exch get 1.0 setcustomcolor}bind def
%
%
%  Procedures for implementing the "rotate <theta>" special:
%  <theta> ROTB -
%        - ROTE -

%+++ TTI changes to allow .screen escape sequence
% 1000 ROTB -> start screen
% 1001 ROTB -> end screen
% 1002 ROTB -> Digital logo

/codexindent 590 def

/ROTB {
  dup 1000 eq {
    % 1000 ROTB - start code example
    pop /ExampleState 0 def
    /S {
      dup (.screen) eq {
      % start screen example
% pjf fix 7-4-92 : first line after .screen was indented improperly
        currentpoint /ExampleY exch def /ExampleX exch def
        1 setgray show 0 setgray
        /S {
          /ExampleName exch def /ExampleState 1 def
          codexindent 0 translate codexindent 0 rmoveto
          1 setgray ExampleName show 0 setgray
          /S /show load def
          /FONT104 /F104 load def
          % replace the tilde with a space
          currentfont F102 currentfont begin
            /Encoding load        % - encoding
            % save the old encoding for the tilde
            dup 126 get exch      % - e126 encoding
            dup 32 get 126 exch put % - e126
          end
          % stick tilde encoding in a variable
          /ExampleTilde exch def
          FONT104 currentfont /F104DICT exch def setfont
          /F104 {
            /S {
              currentfont /F104DICT load eq {
                dup length 240 mul /w exch def
                gsave 0 -100 rmoveto currentpoint
                newpath moveto w 0 rlineto 0 440
                rlineto w neg 0 rlineto closepath fill grestore
                1 setgray show 0 setgray
              } {
                /S /show load def S
              } ifelse
            } def
            FONT104
          } def
        } def
      } {
      % regular code example
        show /S /show load def
      } ifelse
    } def
  } { dup 1001 eq {
    % 1001 ROTB - end code example
    pop
    ExampleState 1 eq {
      currentpoint ExampleY exch sub 600 sub /ylength exch def pop
      /xlength 19200 1.25 mul def /radius 1000 def
      gsave ExampleX ExampleY translate
      240 -400 translate .8 1 scale 50 setlinewidth
      /Helvetica findfont 250 scalefont setfont
      ExampleName (-) eq { /ExampleName () def } if
      ExampleName stringwidth pop
      xlength exch sub -250 radius sub ylength sub moveto
        gsave 1.25 1 scale ExampleName show grestore
      newpath radius neg 0 moveto
      0 ylength neg radius 180 270 arc
      xlength ylength neg radius 270 0 arc
      xlength 0 radius 0 90 arc
      0 0 radius 90 180 arc
      closepath stroke grestore
      /ExampleState 0 def
      /F104 /FONT104 load def
      /S /show load def
      % replace tilde encoding, so it doesn't show up as space anymore
      currentfont F102 currentfont begin
        /Encoding load 126 ExampleTilde put
      end setfont
      codexindent neg 0 translate codexindent neg 0 rmoveto
    } if
  } { dup 1002 eq {
    pop
    gsave (-) stringwidth pop neg 0 rmoveto 
    /Helvetica findfont 450 scalefont setfont
    [(d) (i) (g) (i) (t) (a) (l)] {
      currentpoint currentpoint newpath moveto
      0 -200 rmoveto 300 0 rlineto 0 730 rlineto -300 0 rlineto 0 -730 rlineto
      fill moveto gsave
      dup stringwidth pop 300 exch sub 2 div 0 rmoveto
      1 setgray show 0 setgray grestore
      350 0 rmoveto
    } forall
    0 375 rmoveto
    /Helvetica findfont 200 scalefont setfont (TM) show
    grestore
  } {
    % other - do rotation
    XP
    gsave
    Xpos Ypos translate
    rotate % using <theta> from the stack
    Xpos neg Ypos neg translate
    RP
  } ifelse } ifelse } ifelse
} def

/ROTE {XP grestore RP} def
/F104 { } def

%%EndProlog


%%BeginSetup
/PxlResolution 300 def
/Resolution 3600 def
/RasterScaleFactor PxlResolution Resolution div def
/PortraitMode true def
/PaperWidth 8.500 def
/PaperHeight 11.000 def
72 Resolution div dup scale

%>  Postamble of file $1$DRA3:[DOCS.HSM.HSM041]HSM041_COVER.DVI_PS.
% DefineFont:F151 Category:10 Pointsize:10
/NewCenturySchlbk-Roman /NewCenturySchlbk-Roman@DOCPSE DOCPSE ReENCODE
/F151 500.0 /NewCenturySchlbk-Roman@DOCPSE DPSF
% DefineFont:F34 Category:10 Pointsize:10
/Helvetica /Helvetica@DOCPSE DOCPSE ReENCODE
/F34 500.0 /Helvetica@DOCPSE DPSF

%Spot color array for this job
/ColorPalette [
0.0 0.0 0.0 1.0 (BLACK) findcmykcustomcolor
] def

%%EndSetup
%
%%Page: (1) 1
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 23612 3969 XY F151(A)S -55 x(V)S -46 x(\203QD87U\203TE)S 24009 X
598 y(January)S 168 x(2003)S 3899 5563 XY(Dear)S 166 x(HSM)S 166 x(Customer)S
-38 x(,)S 3899 6560 XY(In)S 181 x(an)S 181 x(effort)S 181 x(to)S 180 x
(provide)S 181 x(enhan)S 2 x(ced)S 181 x(storage)S 181 x(management)S
181 x(software)S 180 x(capability)S 181 x(to)S 180 x(our)S 182 x(customers,)S
184 x(HP)S 3899 X 597 y(offers)S 166 x(this)S 166 x(release)S 167 x
(of)S 166 x(Hierarchical)S 168 x(Storage)S 167 x(Management)S 167 x
(\(HSM\))S 167 x(for)S 166 x(OpenVMS)S 167 x(version)S 167 x(V4.1)S
166 x(software.)S 3899 X 598 y(Thank)S 167 x(you)S 167 x(for)S 166 x
(your)S 167 x(recent)S 167 x(purchase)S 167 x(of)S 166 x(this)S 165 x
(product.)S 3899 8751 XY(HSM)S 189 x(is)S 189 x(a)S 190 x(layered)S
190 x(software)S 188 x(product)S 190 x(that)S 190 x(extends)S 189 x
(the)S 190 x(OpenVMS)S 189 x(\211le)S 190 x(system,)S 195 x(allowing)S
190 x(ef\211cient)S 3899 X 598 y(and)S 177 x(cost-effective)S 177 x
(management)S 178 x(of)S 177 x(infrequen)S 2 x(tly)S 177 x(accessed)S
177 x(\(dormant\))S 177 x(data.)S 271 x(This)S 178 x(is)S 176 x(accomplished)S
178 x(by)S 3899 X 598 y(shelving)S 177 x(the)S 176 x(data)S 176 x(to)S
176 x(lower)S -9 x(-cost)S 175 x(devices)S 176 x(and)S 177 x(automatically)S
176 x(unshelving)S 178 x(it)S 175 x(when)S 177 x(the)S 176 x(data)S
176 x(is)S 175 x(needed.)S 3899 X 598 y(HSM)S 166 x(V4.1)S 166 x(Provides)S
167 x(new)S 166 x(features)S 165 x(as)S 166 x(well)S 166 x(as)S 165 x
(bug)S 167 x(\211xes.)S 250 x(They)S 167 x(are)S 167 x(as)S 165 x(follows:)S
3899 11541 XY(HSM)S 166 x(V4.1)S 166 x(Provides)S 167 x(new)S 166 x
(features)S 165 x(as)S 166 x(well)S 166 x(as)S 165 x(bug)S 167 x(\211xes.)S
250 x(The)S 167 x(following)S 166 x(are)S 166 x(the)S 166 x(new)S 166 x
(features:)S 3899 13434 XY(\202)S 548 x(Quali\211cation)S 166 x(of)S
166 x(HSM)S 166 x(on)S 167 x(VMS)S 165 x(7.3-1)S 4945 X 897 y(HSM041\(BL44\),)S
193 x(will)S 187 x(be)S 187 x(the)S 188 x(of\211cially)S 188 x(quali\211ed)S
188 x(version)S 188 x(of)S 188 x(HSM)S 187 x(for)S 188 x(the)S 188 x
(released)S 187 x(version)S 188 x(of)S 4945 X 597 y(OpenVMS)S 180 x
(7.3-1.)S 279 x(A)S 181 x(remedial)S 180 x(has)S 181 x(been)S 181 x
(build)S 181 x(on)S 181 x(the)S 181 x(V4.0A)S 180 x(base)S 180 x(for)S
181 x(those)S 180 x(early)S 182 x(7.3)S 181 x(adopters)S 4945 X 598 y
(\(HSM)S 186 x(4.0A)S 186 x(\(BL42A\)\).)S 186 x(This)S 186 x(includes)S
186 x(support)S 186 x(for)S 186 x(Multipath)S 186 x(failover)S 187 x
(on)S 186 x(T)S -30 x(ape)S 186 x(devices.)S 289 x(Prior)S 4945 X 598 y
(versions)S 182 x(of)S 182 x(HSM,)S 183 x(did)S 182 x(not)S 182 x(qualify)S
183 x(the)S 182 x(use)S 182 x(of)S 182 x(Multipath)S 182 x(failover)S
183 x(on)S 182 x(T)S -27 x(APE)S 182 x(devices,)S 187 x(and)S 182 x
(could)S 4945 X 598 y(result)S 166 x(in)S 166 x(a)S 166 x(failure)S
166 x(of)S 166 x(SHEL)S -46 x(VE/UNSHEL)S -46 x(VE)S 165 x(operations.)S
3899 X 896 y(\202)S 548 x(Execution)S 167 x(of)S 166 x(Diskquota)S 165 x
(exceeded)S 167 x(policy)S 167 x(based)S 165 x(Rights)S 166 x(identi\211er)S
3899 X 897 y(\202)S 548 x(Deallocation)S 166 x(of)S 166 x(T)S -31 x
(ape)S 166 x(volume)S 167 x(not)S 166 x(used)S 166 x(by)S 166 x(HSM)S
3899 19611 XY(HSM)S 166 x(V4.1)S 166 x(has)S 166 x(bug)S 167 x(\211xes)S
166 x(for)S 167 x(problems)S 165 x(reported)S 166 x(with)S 166 x(prior)S
166 x(versions)S 167 x(of)S 166 x(HSM:)S 3899 X 896 y(\202)S 548 x(Fix)S
166 x(for)S 166 x(the)S 166 x(change)S 166 x(in)S 166 x(Revision)S 166 x
(T)S -12 x(ime)S 165 x(of)S 166 x(a)S 165 x(shelved)S 166 x(\211le)S
166 x(after)S 165 x(an)S 166 x(Unshelve)S 167 x(Operation)S 165 x(on)S
166 x(OpenVMS)S 4945 X 598 y(7.3-1)S 166 x(\(RUBY\))S 3899 X 897 y(\202)S
548 x(Fix)S 167 x(for)S 166 x(dangling)S 167 x(I/O)S 166 x(channels)S
167 x(during)S 167 x(HSM)S 166 x(policy)S 167 x(execution)S 3899 X 896 y
(\202)S 548 x(SMU)S 166 x(SHUTDOWN)S 165 x(does)S 166 x(not)S 166 x
(clear)S 166 x(the)S 166 x(PEprocess)S 3899 23994 XY(For)S 166 x(speci\211c)S
167 x(information)S 166 x(on)S 166 x(these)S 166 x(features)S 166 x
(and)S 167 x(bug)S 166 x(\211xes,)S 167 x(please)S 166 x(refer)S 166 x
(to)S 166 x(the)S 167 x(Release)S 165 x(Notes.)S 3899 24991 XY(HSM)S
172 x(for)S 172 x(OpenVMS)S 172 x(V4.1)S 172 x(software)S 172 x(runs)S
172 x(on)S 173 x(OpenVMS)S 172 x(V)S -56 x(AX)S 171 x(V)S -46 x(ersions)S
172 x(6.2,)S 175 x(7.1,)S 174 x(7.2,)S 175 x(7.3)S 173 x(and)S 172 x
(on)S 173 x(Open-)S 3899 X 597 y(VMS)S 183 x(Alpha)S 183 x(V)S -47 x
(ersions)S 183 x(6.2,)S 189 x(7.1-2,)S 188 x(7.2-2,)S 188 x(7.3)S 183 x
(and)S 183 x(7.3-1.)S 284 x(HSM)S 183 x(V4.1)S 184 x(does)S 182 x(not)S
184 x(utilize)S 182 x(the)S 183 x(ODS5)S 182 x(disk)S 3899 X 598 y(structure.)S
270 x(If)S 175 x(you)S 177 x(are)S 176 x(using)S 176 x(any)S 177 x(version)S
177 x(of)S 175 x(HSM)S 176 x(prior)S 176 x(to)S 176 x(HSM)S 176 x(4.0a)S
176 x(remedial,)S 179 x(installation)S 175 x(of)S 176 x(HSM)S 3899 X
598 y(V4.1)S 166 x(will)S 165 x(ask)S 166 x(for)S 166 x(a)S 166 x(reboot)S
167 x(of)S 166 x(the)S 166 x(system.)S 3899 27780 XY(The)S 167 x(kit)S
166 x(includes:)S 3899 X 897 y(\202)S 548 x(HSM)S 166 x(for)S 166 x
(OpenVMS,)S 166 x(V4.1)S 166 x(software)S 165 x(and)S 167 x(documentation)S
3899 X 896 y(\202)S 548 x(HSM)S 166 x(V)S -46 x(ersion)S 166 x(V4.1)S
166 x(provides)S 166 x(pdf)S 166 x(formatted)S 166 x(documents)S 166 x
(as)S 165 x(part)S 166 x(of)S 166 x(the)S 166 x(binary)S 167 x(kit.)S
3899 X 897 y(\202)S 548 x(MDMS,)S 166 x(media)S 166 x(manager)S 167 x
(for)S 166 x(OpenVMS,)S 166 x(V4.1)S 166 x(software)S 165 x(and)S 167 x
(softcopy)S 166 x(release)S 166 x(notes.)S 3899 31566 XY(HSM)S 176 x
(V4.1)S 176 x(can)S 176 x(be)S 176 x(con\211g)S 2 x(ured)S 176 x(to)S
176 x(run)S 177 x(in)S 176 x(one)S 176 x(of)S 176 x(two)S 176 x(modes,)S
178 x(Basic)S 175 x(or)S 176 x(Plus.)S 270 x(If)S 176 x(you)S 176 x
(are)S 177 x(using)S 176 x(HSM)S 176 x(in)S 3899 X 598 y(the)S 177 x
(Plus)S 177 x(mode,)S 179 x(you)S 178 x(will)S 176 x(need)S 177 x(to)S
177 x(install)S 176 x(Media,)S 180 x(Device)S 177 x(and)S 177 x(Management)S
177 x(Services)S 177 x(\(MDMS\))S 177 x(unless)S 3899 X 597 y(Archive)S
171 x(Backup)S 171 x(System)S 170 x(\(ABS\))S 170 x(V)S -47 x(ersion)S
171 x(V4.1)S 171 x(software)S 169 x(is)S 170 x(already)S 171 x(present)S
171 x(on)S 171 x(your)S 171 x(system.)S 258 x(MDMS)S 170 x(is)S 3899 X
598 y(also)S 165 x(required)S 167 x(to)S 166 x(use)S 166 x(the)S 166 x
(tape)S 166 x(repacking)S 168 x(and)S 166 x(backup)S 167 x(via)S 166 x
(shelving)S 167 x(features)S 166 x(of)S 166 x(HSM)S 166 x(V4.1.)S
EP PP
%%PageTrailer
%%PageFonts: NewCenturySchlbk-Roman
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (2) 2
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3899 3969 XY F151(For)S 177 x(customers)S 177 x(using)S 177 x(Storage)S
177 x(Library)S 178 x(System)S 176 x(\(SLS\))S 177 x(with)S 176 x(HSM,)S
177 x(we)S 177 x(recommend)S 177 x(the)S 177 x(use)S 177 x(of)S 177 x
(MDMS)S 3899 X 598 y(V2.9G)S 174 x(as)S 174 x(the)S 175 x(media)S 175 x
(manager)S -36 x(.)S 266 x(For)S 176 x(customers)S 174 x(using)S 175 x
(Archive)S 176 x(Backup)S 175 x(System)S 174 x(\(ABS\))S 174 x(with)S
174 x(HSM,)S 175 x(we)S 3899 X 598 y(recommend)S 170 x(the)S 171 x(use)S
170 x(of)S 169 x(MDMS)S 170 x(V4.1.)S 258 x(For)S 170 x(HSM)S 170 x
(customers)S 170 x(who)S 170 x(are)S 170 x(not)S 170 x(using)S 171 x
(either)S 170 x(ABS)S 169 x(or)S 170 x(SLS,)S 171 x(we)S 3899 X 598 y
(recommend)S 166 x(the)S 167 x(use)S 166 x(of)S 166 x(MDMS)S 166 x(V4.1)S
166 x(with)S 165 x(HSM)S 166 x(V4.1.)S 3899 6759 XY(For)S 170 x(additional)S
170 x(information,)S 172 x(please)S 170 x(refer)S 170 x(to)S 170 x(the)S
170 x(product)S 170 x(documentation.)S 259 x(If)S 169 x(you)S 171 x
(need)S 171 x(assis)S -2 x(tance)S 171 x(with)S 3899 X 598 y(this)S
166 x(product,)S 166 x(please)S 166 x(call)S 166 x(the)S 166 x(Customer)S
166 x(Support)S 166 x(Center)S -37 x(.)S 3899 8353 XY(Sincerely)S -54 x
(,)S 3899 10345 XY(OpenVMS)S 166 x(Product)S 166 x(Managemen)S 2 x(t)S
3899 11342 XY(CXOSW)S -2 x(PM@hp.)S 2 x(com)S 3899 12936 XY(\251)S 166 x
(Hewlett-Packard)S 166 x(Development)S 166 x(Company)S -55 x(,)S 167 x
(L.P)S -64 x(.)S 167 x(2003.)S 15417 37373 XY F34(2)S
EP PP
%%PageTrailer
%%PageFonts: NewCenturySchlbk-Roman
%%+ Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Trailer
%%Pages: 2
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NewCenturySchlbk-Roman
%%+ Helvetica
%%DocumentNeededFonts: NewCenturySchlbk-Roman
%%+ Helvetica
%%DocumentProcessColors:
%%DocumentCustomColors: (BLACK)
%%CMYKCustomColor: 0.0 0.0 0.0 1.0 (BLACK)
%
DVC$PSJob restore
end %DEC_DVC$dict
end %Color5044Dict
%
%%EOF
