%!PS-Adobe-3.0
%%Title: OSAP_AP_SPD
%%Creator: VAX DOCUMENT V3.0C
%%Copyright: 1986,1987,1988,1989,1990,1991 DIGITAL EQUIPMENT CORPORATION.
%%+All Rights Reserved.
%%CreationDate: Mon Apr  3 2000 09:34:52
%%For: MONDAZZI    
%%BoundingBox: (atend)
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%DocumentFonts: (atend) 
%%DocumentNeededFonts: (atend) 
%%DocumentProcSets: Underlay Color5044
%%DocumentSuppliedProcSets: Underlay Color5044
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%+++TTI changes : added ROTB back in
%+++            : added 1000 ROTB = begin special code example
%+++            : added 1001 ROTB = end special code example
%+++            : added 1002 ROTB = digital logo
%
%%BeginResource: procset Underlay
%%CreationDate: (2/10/92)
%
% In VAX DOCUMENT V2.1-1, simple EPSF files up to 65,000 bytes long
% may be an underlay. Define the EPSF as a PostScript proceedure
% called /UNDERLAY and prefix to DOCUMENT's PS output  For example:.
% /UNDERLAY ( EPSF code here ) cvx def
%
% To create a "DRAFT" underlay change /UNDERLAY* to /UNDERLAY
/UNDERLAY* (
  /Note (DRAFT) def
  /NoteSize 120 def
  /NoteFont /Helvetica findfont NoteSize scalefont def
  /Note where { pop Note length 0 gt {
    /NoteWidth NoteFont setfont Note stringwidth pop def
    PaperWidth 36 mul PaperHeight 36 mul moveto
    PaperHeight PaperWidth atan rotate
    NoteWidth -2 div NoteSize .729 mul -2 div rmoveto 
    Note true charpath .075 setseparationgray fill
  }if  }if
) cvx def
%%EndResource
%
%%BeginResource: procset Color5044
%%CreationDate: (1/21/91)
%%Version:1.0 3
%Implementation of Adobe 5044 color specification
%/ndf allows command override during color separation
/Color5044Dict 100 dict def
Color5044Dict begin
/bdf {bind def} def
/ndf
  {1 index where
    {pop pop pop
    }
    {dup xcheck
      {bind} if
    def
    }
    ifelse
  } bdf
/setcmykcolor
  {1 exch sub
  3 
    {dup 5 -1 roll sub 0 2 copy lt
      {exch} if
    pop exch
    } repeat
  pop setrgbcolor
  }ndf
/setcmykcoloroverprint
  {4
    {dup -1 eq
      {pop 0} if
      4 1 roll
    } repeat
  setcmykcolor
  } ndf
/findcmykcustomcolor
  {5 /packedarray where
    {pop packedarray
    }
    {array astore readonly
    }
    ifelse
  } ndf
/setcustomcolor
  {exch aload pop pop
  4
    {4 index mul 4 1 roll
    } repeat
  setcmykcolor pop
  } ndf
/setseparationgray
  {1 exch sub systemdict /setgray get exec
  } ndf
/setoverprint {pop} ndf
/currentoverprint false ndf
%CMYK multi-proc colorimage
/colorimage
  {4 ne
    {(\nUnsupported number of colors for colorimage.\n) print flush quit
    } if
  not
    {(\nSingle procedure form  colorimage unsupported.\n) print flush quit
    } if
  save 20 dict begin /&saveobj exch def
  /&Kproc exch def /&Yproc exch def /&Mproc exch def /&Cproc exch def
    {&Cproc &Mproc &Yproc &Kproc
    /&K exch def /&Y exch def /&M exch def /&C exch def
    0 1 &K length 1 sub
      {/&i exch def
      &K &i 255
      &C &i get 30 mul
      &M &i get 59 mul add
      &Y &i get 11 mul add
      &K &i get 100 mul add
      100 idiv
      dup 255 gt
        {pop 255} if
      sub put
      } for
    &K
    } image
  &saveobj end restore
  } ndf
/customcolorimage
  {pop systemdict /image get exec
  } ndf
/separationimage
  {systemdict /image get exec
  } ndf
end
%%EndResource
Color5044Dict begin
%
/DEC_DVC$dict 300 dict def
DEC_DVC$dict begin
%
/DVC$PSJob save def
%
mark		% CREATE ISOLatin1Encoding if not there already
/ISOLatin1Encoding
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute 
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1Encoding where not {256 array astore def} if 
cleartomark
%
/DOCPSE ISOLatin1Encoding 256 array copy def
mark						% CREATE DOCPSE ENCODING
  8#055 /hyphen
  8#201 /bullet    8#202 /emdash     8#203 /endash    8#204 /dagger
  8#205 /daggerdbl 8#206 /registered 8#207 /trademark %8#210 /Delta
  8#211 /fi        8#212 /fl         8#213 /OE        8#214 /oe
  8#215 /Ydieresis
  counttomark -1 bitshift			% DIVIDE BY 2
  {DOCPSE 3 1 roll put} repeat			% STACK NOW CONTAINS MARK
cleartomark
%
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
}def
%
/cvsstr 64 string def
/tempmatrix matrix def
%
% Exit page (temporarily) to add fonts/characters.
/XP { }def
% 
% Resume page
/RP {/ExampleState 0 def} def		% RESUME PAGE
/ExampleState 0 def
%
% End Page: EP
/EP {DVC$PSPage restore}def
%
% Purge fonts to reclaim VM
/PF {
  currentoverprint
  currentrgbcolor
  EP			%Does restore
  PageSetup     %Does save
  setrgbcolor
  setoverprint
}def
%
% ABBREVIATIONS 
/S /show load def
/SV /save load def
/RST /restore load def
%
/Yadjust {Ymax exch sub} def
%
/SXY {		% (x,y) POSITION ABSOLUTE, JUST SET Xpos & Ypos, DON'T MOVE
  Yadjust  /Ypos exch def /Xpos exch def
} def
%
/XY {						% (x,y) POSITION ABSOLUTE
  Yadjust moveto
} def
%
/X {						% (x,0) POSITION ABSOLUTE
  currentpoint exch pop moveto
} def
%
/Y {						% (0,y) POSITION ABSOLUTE 
  currentpoint pop exch Yadjust moveto
} def
%
/xy {						% (x,y) POSITION RELATIVE
  neg rmoveto
} def
%
/x {						% (x,0) POSITION RELATIVE
  0 rmoveto
} def
%
/y {						% (0,y) POSITION RELATIVE
  0 exch neg rmoveto
} def
%
/R {						% Draw a rectangle
  /ht exch def  /wd exch def   gsave
  currentpoint  newpath  moveto
  0 ht rlineto  wd 0 rlineto
  0 ht neg rlineto  wd neg 0 rlineto
  closepath fill grestore wd 0 rmoveto
}def
%
%Setup Page Media:  <paper-height> <paper-width> PM
/PM {
  /Xmax exch Resolution mul def
  /Ymax exch Resolution mul def
  /UNDERLAY where {
    pop
    /eps_save save def		% save before EPSF underlay
    Resolution 72 div dup scale % Revert coords to points
    count array astore /DVCstack exch def % save op stack
    /dict_count countdictstack def % # of dicts
    userdict begin		% default dict
    /showpage {}def		% disable showpage
    0 setgray
      {UNDERLAY} stopped {(Error executing /UNDERLAY)== quit}if
    countdictstack dict_count sub {end} repeat % clean up dict stack
    clear DVCstack aload pop	% restore op stack
    eps_save restore		% restore after EPSF
  }if
  PageSetup
}def
%
%Setup page coordinates
/PageSetup
{
%  /DVC$PSPage {save} def % ++cjb: fix VME bug
  /DVC$PSPage save def
  PortraitMode not {PaperWidth 0 translate  90 rotate} if
  /Xpos 0 def
  /Ypos 0 def
}def
%
% Begin EPS file: <xoffset> <yoffset> SPB
/SPB {
  Yadjust transform		% convert from DVC to device coords
  EP				% page-level restore
  /eps_save save def		% save before EPSF
  Resolution 72 div dup scale 	% Revert coords to points
  itransform			% convert position back to points  
  translate			% set position for EPSF
  PortraitMode not {90 rotate} if % rotate for EPSF
  count array astore /DVCstack exch def	% save op stack
  /dict_count countdictstack def % # of dicts
  userdict begin		% default dict
  /showpage {}def		% disable showpage
  0 setgray
}def
%
% End EPS file
/SPE {
  countdictstack dict_count sub {end} repeat % clean up dict stack
  clear DVCstack aload pop	% restore op stack
  eps_save restore		% restore after EPSF
  PageSetup			% restore DVC coords
}def
%
% Print-Page Routine: <Page #> PP
/PP {
  gsave
  showpage
  grestore
}def
%
/DMF {		%  /font-name <point-size> DMF
  exch findfont exch scalefont setfont
}def
%
/concatnam {	%  /abcd (xxx) concatnam  ==> /abcdxxx
  /xxx exch def
  /namstr exch cvsstr cvs def
  /newnam namstr length xxx length add string def
  newnam 0 namstr putinterval
  newnam namstr length xxx putinterval
  newnam cvn 
}def
%
/strip {	%  /abcdef 2 strip ==> /cdef
  /num exch def  /nam exch def
  /namstr nam cvsstr cvs def
  /newlen namstr length num sub def
  namstr num newlen getinterval  cvn
}def
%		ROUTINES TO HANDLE PACKING/UNPACKING NUMBERS
/PackHW {	% <target> <pos> <num> PackHW --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#0000FFFF and 1 pos sub 16 mul bitshift  target or
}def
/PackByte {	% <target> <pos> <num> PackByte --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#000000FF and 3 pos sub 8 mul bitshift   target or
}def
/UnpkHW {	%  <pos> <num> UnpkHW --> <unpacked value>
  /num exch def  /pos exch def
  num 1 pos sub -16 mul bitshift 16#0000FFFF and
  dup 16#00007FFF gt {16#00010000 sub} if
}def
/UnpkByte {	%  <pos> <num> UnpkByte --> <unpacked value>
  /num exch def  /pos exch def
  num 3 pos sub -8 mul bitshift 16#000000FF and
  dup 16#0000007F gt {16#00000100 sub} if
}def
%
/ps-scalefont {
    % FOR PS FONTS, LOOK AT SIZE REQUESTED.  IF IT HAS A DECIMAL REMAINDER
    % EQUIVALENT TO .001-.009 POINTS (I.E., .050-.450 VAXDOC UNITS), THAT'S 
    % A FLAG TO STRETCH IT VERTICALLY BY ADDING 1-9 EXTRA POINTS TO THE 
    % VERTICAL SCALING.
                % save requested size - as entered and as integer
    dup /x-size exch def cvi /x-int exch def
                % calc decimal remainder, mul x 1000, round
    x-size x-int sub 1000 mul round cvi /remainder exch def
                % see how we scale...
    remainder 50 lt remainder 450 gt or {
                % scale isomorphically
        /ystretch 0 def
        x-size scalefont
    } {
                % scale anamorphically
        /ystretch remainder def
        x-int ystretch add /y-size exch def
        [x-int 0 0 y-size 0 0] makefont
    } ifelse
}def
%
/DPSF {		% /procname size /fontname DPSF
    findfont exch ps-scalefont [ exch /setfont cvx ] cvx def
}def
%
/PXLBuildCharDict 17 dict def
/CMEncodingArray 256 array def
0 1 255 {CMEncodingArray exch dup cvsstr cvs cvn put} for
/RasterConvert {RasterScaleFactor div}def
/TransformBBox {
  aload pop
  /BB-ury exch def  /BB-urx exch def  /BB-lly exch def  /BB-llx exch def
  [ BB-llx RasterConvert BB-lly RasterConvert 
    BB-urx RasterConvert BB-ury RasterConvert ]
}def
/RunLengthToRasters {
  % none yet
}def
/GenerateRasters {			% GENERATE RASTERS FOR "IMAGEMASK"
  rasters  runlength 1 eq {RunLengthToRasters} if
}def
%
/int-dict-name {int (-dict) concatnam}def
/int-dict {int (-dict) concatnam cvx load}def
%
/DefinePXLFont {
	%  <int-font-name><ext-font-name><pt-sz(pix)><PXL mag><num-chars>...
	%  ...[llx lly urx ury]<newfont-fg>DefinePXLFont
  /newfont exch def  /bb exch def      /num exch def  /psz exch def
  /dsz exch def      /pxlmag exch def  /ext exch def  /int exch def
  /fnam ext (-) concatnam pxlmag cvsstr cvs concatnam def
  newfont not {
    int-dict-name 13 dict def
    int-dict begin
      /FontType 3 def  /FontMatrix [ 1 dsz div 0 0 1 dsz div 0 0 ] def
      /FontBBox bb TransformBBox def  /Encoding CMEncodingArray def
      /CharDict 1 dict def  CharDict begin  /Char-Info num array def  end
      /BuildChar {
        PXLBuildCharDict begin
          /char exch def  /fontdict exch def
          fontdict /CharDict get /Char-Info get char get aload pop
          /rasters exch def  /PackedWord1 exch def
          0 PackedWord1 UnpkHW 16#7FFF ne {
	    /PackedWord2 exch def  /wx 0 PackedWord1 UnpkHW def
            /rows 2 PackedWord1 UnpkByte def  /cols 3 PackedWord1 UnpkByte def
            /llx 0 PackedWord2 UnpkByte def   /lly 1 PackedWord2 UnpkByte def
            /urx 2 PackedWord2 UnpkByte def   /ury 3 PackedWord2 UnpkByte def
	  }{ %else
	    /PackedWord2 exch def  /PackedWord3 exch def /PackedWord4 exch def
            /wx 1 PackedWord1 UnpkHW def    /rows 0 PackedWord2 UnpkHW def
            /cols 1 PackedWord2 UnpkHW def  /llx 0 PackedWord3 UnpkHW def
            /lly 1 PackedWord3 UnpkHW def   /urx 0 PackedWord4 UnpkHW def
            /ury 1 PackedWord4 UnpkHW def
          } ifelse
          rows 0 lt {
	    /rows rows neg def /runlength 1 def
	  }{ %else
	    /runlength 0 def
	  } ifelse
          wx 0
          llx RasterConvert lly RasterConvert 
          urx RasterConvert ury RasterConvert setcachedevice
          rows 0 ne {
	    gsave
	      cols rows true  RasterScaleFactor 
              0 0 RasterScaleFactor neg llx .5 add neg ury .5 add 
              tempmatrix astore  GenerateRasters imagemask
            grestore
          } if
        end
      }def
    end
    fnam int-dict definefont pop 
  } if 
  int-dict-name fnam findfont psz scalefont def
  currentdict int [ int-dict /setfont cvx ] cvx put
}def 
/PXLF { true  DefinePXLFont}def	% SIGNAL THAT FONT ALREADY LOADED
/PXLNF {false  DefinePXLFont}def	% SIGNAL THAT FONT NOT ALREADY LOADED
%
/PXLC {	% <int-font-name><code><wx><llx><lly><urx><ury>...
	% ...<rows><cols><runlength><rasters>PXLC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /wx exch def       /code exch def       /int exch def
  % SEE IF LONG OR SHORT FORMAT IS REQUIRED
  true cols CKSZ rows CKSZ ury CKSZ urx CKSZ lly CKSZ llx CKSZ 
  TackRunLengthToRows {
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 llx PackByte 1 lly PackByte 2 urx PackByte 3 ury PackByte
      0 0 wx PackHW 2 rows PackByte 3 cols PackByte rasters ] put
  }{ %else
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 urx PackHW 1 ury PackHW   0 0 llx PackHW 1 lly PackHW
      0 0 rows PackHW 1 cols PackHW 0 0 16#7FFF PackHW 1 wx PackHW rasters ] put
  } ifelse
}def
%
/CKSZ {abs 127 le and}def
/TackRunLengthToRows {runlength 0 ne {/rows rows neg def} if}def
%
/PLOTC {
  % <wx><dsz><psz><llx><lly><urx><ury><rows><cols><runlength><rasters>PLOTC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /psz exch def      /dsz exch def        /wx exch def
  % "PLOT" A CHARACTER'S RASTER PATTERN
  rows 0 ne {
    gsave
      currentpoint translate  psz dsz div dup scale
      cols rows true  RasterScaleFactor 0 0 RasterScaleFactor 
      neg llx .5 add neg ury .5 add  tempmatrix astore
      GenerateRasters imagemask
    grestore
  } if
  wx x
}def
%
% set color routine: Color# SC
/SC {ColorPalette exch get 1.0 setcustomcolor}bind def
%
%
%  Procedures for implementing the "rotate <theta>" special:
%  <theta> ROTB -
%        - ROTE -

%+++ TTI changes to allow .screen escape sequence
% 1000 ROTB -> start screen
% 1001 ROTB -> end screen
% 1002 ROTB -> Digital logo

/codexindent 590 def

/ROTB {
  dup 1000 eq {
    % 1000 ROTB - start code example
    pop /ExampleState 0 def
    /S {
      dup (.screen) eq {
      % start screen example
% pjf fix 7-4-92 : first line after .screen was indented improperly
        currentpoint /ExampleY exch def /ExampleX exch def
        1 setgray show 0 setgray
        /S {
          /ExampleName exch def /ExampleState 1 def
          codexindent 0 translate codexindent 0 rmoveto
          1 setgray ExampleName show 0 setgray
          /S /show load def
          /FONT104 /F104 load def
          % replace the tilde with a space
          currentfont F102 currentfont begin
            /Encoding load        % - encoding
            % save the old encoding for the tilde
            dup 126 get exch      % - e126 encoding
            dup 32 get 126 exch put % - e126
          end
          % stick tilde encoding in a variable
          /ExampleTilde exch def
          FONT104 currentfont /F104DICT exch def setfont
          /F104 {
            /S {
              currentfont /F104DICT load eq {
                dup length 240 mul /w exch def
                gsave 0 -100 rmoveto currentpoint
                newpath moveto w 0 rlineto 0 440
                rlineto w neg 0 rlineto closepath fill grestore
                1 setgray show 0 setgray
              } {
                /S /show load def S
              } ifelse
            } def
            FONT104
          } def
        } def
      } {
      % regular code example
        show /S /show load def
      } ifelse
    } def
  } { dup 1001 eq {
    % 1001 ROTB - end code example
    pop
    ExampleState 1 eq {
      currentpoint ExampleY exch sub 600 sub /ylength exch def pop
      /xlength 19200 1.25 mul def /radius 1000 def
      gsave ExampleX ExampleY translate
      240 -400 translate .8 1 scale 50 setlinewidth
      /Helvetica findfont 250 scalefont setfont
      ExampleName (-) eq { /ExampleName () def } if
      ExampleName stringwidth pop
      xlength exch sub -250 radius sub ylength sub moveto
        gsave 1.25 1 scale ExampleName show grestore
      newpath radius neg 0 moveto
      0 ylength neg radius 180 270 arc
      xlength ylength neg radius 270 0 arc
      xlength 0 radius 0 90 arc
      0 0 radius 90 180 arc
      closepath stroke grestore
      /ExampleState 0 def
      /F104 /FONT104 load def
      /S /show load def
      % replace tilde encoding, so it doesn't show up as space anymore
      currentfont F102 currentfont begin
        /Encoding load 126 ExampleTilde put
      end setfont
      codexindent neg 0 translate codexindent neg 0 rmoveto
    } if
  } { dup 1002 eq {
    pop
    gsave (-) stringwidth pop neg 0 rmoveto 
    /Helvetica findfont 450 scalefont setfont
    [(d) (i) (g) (i) (t) (a) (l)] {
      currentpoint currentpoint newpath moveto
      0 -200 rmoveto 300 0 rlineto 0 730 rlineto -300 0 rlineto 0 -730 rlineto
      fill moveto gsave
      dup stringwidth pop 300 exch sub 2 div 0 rmoveto
      1 setgray show 0 setgray grestore
      350 0 rmoveto
    } forall
    0 375 rmoveto
    /Helvetica findfont 200 scalefont setfont (TM) show
    grestore
  } {
    % other - do rotation
    XP
    gsave
    Xpos Ypos translate
    rotate % using <theta> from the stack
    Xpos neg Ypos neg translate
    RP
  } ifelse } ifelse } ifelse
} def

/ROTE {XP grestore RP} def
/F104 { } def

%%EndProlog


%%BeginSetup
/PxlResolution 300 def
/Resolution 3600 def
/RasterScaleFactor PxlResolution Resolution div def
/PortraitMode true def
/PaperWidth 8.500 def
/PaperHeight 11.000 def
72 Resolution div dup scale

%>  Postamble of file OMNIDOC$COMMON:[BSTARSHR.SPDSRC.OPEN.OSAP.V32]OSAP_AP_SPD.DVI_PS.
% DefineFont:F46 Category:10 Pointsize:6
/Helvetica /Helvetica@DOCPSE DOCPSE ReENCODE
/F46 300.0 /Helvetica@DOCPSE DPSF
% DefineFont:F44 Category:10 Pointsize:8
/Helvetica-Bold /Helvetica-Bold@DOCPSE DOCPSE ReENCODE
/F44 400.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F42 Category:10 Pointsize:8
/F42 400.0 /Helvetica@DOCPSE DPSF
% DefineFont:F40 Category:10 Pointsize:9
/F40 450.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F39 Category:10 Pointsize:9
/Helvetica-Oblique /Helvetica-Oblique@DOCPSE DOCPSE ReENCODE
/F39 450.0 /Helvetica-Oblique@DOCPSE DPSF
% DefineFont:F38 Category:10 Pointsize:9
/F38 450.0 /Helvetica@DOCPSE DPSF
% DefineFont:F36 Category:10 Pointsize:10
/F36 500.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F16 Category:10 Pointsize:24
/F16 1200.0 /Helvetica-Bold@DOCPSE DPSF

%Spot color array for this job
/ColorPalette [
0.0 0.0 0.0 1.0 (BLACK) findcmykcustomcolor
] def

%%EndSetup
%
%%Page: (1) 1
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC
3600 5094 XY
3600 8083 SPB
-73.000 -383.000 translate
%%BeginDocument: (DOC$ROOT:[TEX.FORMATS]LOGOTM.EPS)
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (Teresa  M Honkala) (SEi, Sykes Enterprise Incorp.)
%%Title: (center1.eps)
%%CreationDate: (9/2/98) (11:10 AM)
%%BoundingBox: 73 383 542 408
%%HiResBoundingBox: 73.25 383.9375 541.25 407.9375
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -558 1008 -1.5 1146 827 18 1 1 3 40 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:30 31
%%AI3_PaperRect:-30 761 582 -31
%%AI3_Margin:30 -31 -30 31
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 8 8
%%BeginData: 1618 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFD3AFFFD14F8FD6CFFFD14F8FD6CFFFD14F8FD6CFFFD0EF8
%FFFD05F8FDFCFFFD39FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
0 O
0 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
335.4958 389.5004 m
335.4958 388.2499 l
335.6891 388.3209 335.8824 388.3919 336.0953 388.4628 c
336.7806 388.639 337.522 388.7075 338.3858 388.7075 c
342.4015 388.7075 l
343.0352 390.8047 l
339.9177 390.8218 l
339.8468 390.8218 339.7415 390.8047 339.6534 390.8047 c
339.6705 390.8585 339.7072 390.9099 339.7072 390.9295 c
340.4292 392.5153 341.7677 397.1304 341.7677 397.8695 c
341.7505 398.4519 341.5744 398.9463 341.2391 399.3157 c
340.8696 399.7391 340.5001 400.0205 339.9716 400.16 c
338.9315 400.4242 337.0448 400.4609 335.4958 400.39 c
335.4958 398.2414 l
336.411 398.3809 337.7153 398.2928 338.0677 397.9771 c
338.2977 397.7471 338.2781 397.3776 338.2096 397.0962 c
337.9625 396.039 337.3972 393.9589 336.9053 392.6914 c
336.4281 391.4752 336.1834 391.0347 335.4958 390.8928 c
335.4958 390.1367 l
335.6548 390.2051 335.8115 390.259 335.9877 390.3299 c
336.9934 390.6456 337.9454 390.8047 339.0906 390.8047 c
339.1248 390.8047 339.1419 390.8047 339.1419 390.7876 c
339.1077 390.7704 339.0906 390.7876 v
338.5081 390.7337 337.8572 390.5942 337.2748 390.4352 c
336.6753 390.259 336.0586 389.9237 335.4958 389.5004 c
335.4958 389.5004 l
f
335.4958 398.2414 m
335.4958 400.39 l
334.7739 400.3558 334.0863 400.3019 333.6458 400.231 c
332.941 400.1256 332.6058 399.8443 332.1824 399.4919 c
331.9891 399.2985 331.8472 399.1395 331.6905 398.8924 c
331.0739 398.0114 329.7867 394.2405 329.4686 392.3195 c
329.312 391.3871 329.4343 390.2419 330.0681 389.6252 c
330.8439 388.8666 331.6024 388.7075 333.6458 388.7075 c
333.9982 389.219 334.6148 389.7475 335.4958 390.1367 c
335.4958 390.8928 l
335.3025 390.8414 335.0895 390.8218 334.8082 390.8218 c
334.72 390.8218 334.3335 390.8218 334.2453 390.8218 c
333.4158 390.8414 332.5006 390.9637 332.782 392.2143 c
332.9239 392.7795 333.2934 394.1352 333.9101 395.9852 c
334.2967 397.2357 334.5097 397.7471 334.8082 398.0114 c
334.9305 398.1166 335.1948 398.2048 335.4958 398.2414 c
335.4958 398.2414 l
f
335.4958 388.2499 m
335.4958 389.5004 l
334.8082 388.9375 334.2453 388.179 334.1034 387.4056 c
334.1034 387.2808 334.1744 387.2638 v
334.2453 387.2466 334.2624 387.298 334.2967 387.3518 c
334.4215 387.5451 334.8424 387.9514 335.4958 388.2499 c
335.4958 388.2499 l
f
324.3786 393.3423 m
324.3786 391.4385 l
325.7343 391.4385 l
325.7343 388.9375 l
328.7834 388.9375 l
328.7834 400.2848 l
325.8567 400.3019 l
325.24 400.3019 324.7653 400.1967 324.3786 400.0205 c
324.3786 395.8628 l
325.7343 398.2414 l
325.7343 393.3423 l
324.3786 393.3423 l
324.3786 393.3423 l
f
324.3786 395.8628 m
324.3786 400.0205 l
323.5148 399.6313 323.0743 398.8752 322.5629 398.1166 c
322.5287 398.0456 322.0514 397.3237 322.0001 397.2528 c
317.1891 389.3438 l
317.1891 388.9375 l
320.5025 388.9375 l
321.912 391.4385 l
324.3786 391.4385 l
324.3786 393.3423 l
322.9691 393.3423 l
324.3786 395.8628 l
324.3786 395.8628 l
f
317.1891 396.2324 m
317.1891 392.3733 l
317.3481 392.4075 317.4876 392.4785 317.6638 392.5494 c
320.0791 393.6409 320.73 397.1842 320.5905 398.0652 c
320.3605 399.4381 319.181 400.3019 317.8057 400.3019 c
317.1891 400.3019 l
317.1891 398.0456 l
317.2233 398.0286 317.2429 398.0114 317.26 397.9943 c
317.5243 397.6247 317.4705 396.92 317.1891 396.2324 c
317.1891 396.2324 l
f
317.1891 398.0456 m
317.1891 400.3019 l
311.48 400.3019 l
309.0842 392.5323 l
309.0842 388.9375 l
311.4457 388.9375 l
312.3976 392.18 l
315.5691 392.18 l
316.2371 392.1971 316.7144 392.2509 317.1891 392.3733 c
317.1891 396.2324 l
316.9419 395.579 316.4672 394.9452 315.9386 394.6466 c
315.6034 394.4704 315.1457 394.3653 314.7762 394.3456 c
313.0314 394.3456 l
314.1938 398.3637 l
316.3791 398.3637 l
316.8538 398.3296 317.0471 398.2218 317.1891 398.0456 c
317.1891 398.0456 l
f
317.1891 388.9375 m
317.1891 389.3438 l
316.9419 388.9375 l
317.1891 388.9375 l
317.1891 388.9375 l
f
309.0842 400.3019 m
309.0842 396.7781 l
310.1414 400.3019 l
309.0842 400.3019 l
309.0842 400.3019 l
f
309.0842 396.7781 m
309.0842 400.3019 l
307.3052 400.3019 l
305.7709 400.3019 305.3304 399.6852 304.5033 398.77 c
302.619 396.3033 l
302.3009 398.3466 l
302.1418 399.4747 301.9657 400.3019 300.0814 400.3019 c
296.998 400.3019 l
296.2566 397.8352 295.06 393.9761 294.25 391.4385 c
294.25 388.9375 l
296.8929 388.9375 l
299.428 397.4485 l
300.4167 391.3699 l
301.0333 391.3699 l
305.9471 397.3409 l
303.3581 388.9375 l
306.7767 388.9375 l
309.0842 396.7781 l
309.0842 396.7781 l
f
309.0842 388.9375 m
309.0842 392.5323 l
307.9929 388.9375 l
309.0842 388.9375 l
309.0842 388.9375 l
f
294.25 399.5433 m
294.25 394.7518 l
294.6709 396.1785 295.0062 397.4999 295.0062 397.8695 c
295.0062 398.4519 294.8299 398.9463 294.4947 399.3157 c
294.4066 399.3867 294.338 399.4747 294.25 399.5433 c
294.25 399.5433 l
f
294.25 394.7518 m
294.25 399.5433 l
293.949 399.8443 293.6333 400.0376 293.21 400.16 c
292.17 400.4242 290.3028 400.4609 288.7514 400.39 c
288.7514 398.2414 l
289.6494 398.3809 290.9708 398.2928 291.3061 397.9771 c
291.5533 397.7471 291.5191 397.3776 291.4651 397.0962 c
291.218 396.039 290.6381 393.9589 290.1609 392.6914 c
289.6861 391.4752 289.439 391.0347 288.7514 390.8928 c
288.7514 388.7075 l
289.9504 388.7442 291.4113 388.9033 292.1871 389.7133 c
292.4514 389.9776 292.7695 390.5233 292.9628 390.9295 c
293.3152 391.7224 293.8438 393.2885 294.25 394.7518 c
294.25 394.7518 l
f
294.25 388.9375 m
294.25 391.4385 l
293.7899 389.9409 293.4913 388.9375 y
294.25 388.9375 l
294.25 388.9375 l
f
288.7514 398.2414 m
288.7514 400.39 l
287.9952 400.3558 287.3247 400.3019 286.8671 400.231 c
286.0204 400.1085 285.7218 399.7904 285.4037 399.4919 c
285.2446 399.3328 285.0881 399.1395 284.9119 398.8924 c
284.5766 398.398 284.048 397.0766 283.5708 395.6671 c
283.5708 389.3609 l
284.3466 388.7613 285.2446 388.6733 287.4837 388.7075 c
287.819 388.7075 288.2595 388.6904 288.7514 388.7075 c
288.7514 390.8928 l
288.558 390.8414 288.328 390.8218 288.0466 390.8218 c
287.9414 390.8218 287.5547 390.8218 287.447 390.8218 c
286.6738 390.8414 285.7218 390.9637 286.0204 392.2143 c
286.1452 392.7795 286.5318 394.1352 287.1314 395.9852 c
287.5547 397.2357 287.7481 397.7471 288.0466 398.0114 c
288.1714 398.1166 288.4356 398.2048 288.7514 398.2414 c
288.7514 398.2414 l
f
283.5708 400.4438 m
283.5708 397.8181 l
283.6076 397.8181 283.6418 397.8181 283.6786 397.8181 c
284.4714 400.4438 l
283.5708 400.4438 l
283.5708 400.4438 l
f
283.5708 397.8181 m
283.5708 400.4438 l
278.9385 400.4438 l
276.9123 400.4438 275.4856 400.4242 274.2694 397.8524 c
273.9513 397.1647 273.6528 396.0904 273.2832 394.7518 c
273.0532 393.9589 272.7718 393.149 272.6299 392.3195 c
272.4708 391.4042 272.5956 390.2419 273.2465 389.6252 c
274.0932 388.7956 274.9204 388.6733 277.4409 388.7075 c
277.6513 388.7075 277.8104 388.7075 278.1089 388.7075 c
278.6913 388.7075 280.7004 388.7785 280.9475 388.8837 c
281.8285 391.7224 l
278.8846 391.2452 277.2647 391.4923 276.7189 391.5976 c
276.0142 391.7224 275.9604 392.268 276.2785 393.4476 c
276.4179 393.9761 276.6113 394.5218 276.7875 395.07 c
277.6342 397.6761 277.9694 397.7814 278.9898 397.8009 c
279.7485 397.8181 281.3684 397.8181 283.5708 397.8181 c
283.5708 397.8181 l
f
283.5708 389.3609 m
283.5708 395.6671 l
283.1842 394.4704 282.8318 393.2004 282.6899 392.3195 c
282.5504 391.3871 282.6556 390.2419 283.3066 389.6252 c
283.3946 389.52 283.4828 389.449 283.5708 389.3609 c
283.5708 389.3609 l
f
U
1 Ap
541.25 383.9375 m
541.25 407.9375 L
73.25 407.9375 L
73.25 383.9375 L
541.25 383.9375 L
n
0 Ap
-3987.75 395.9375 m
4652.25 395.9375 L
(N) *
307.25 4548.9375 m
307.25 -4091.0625 L
(N) *
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument
SPE
3600 5094 XY
0 SC 3600 9976 XY F16(Software)S 3600 11221 XY(Produ)S 2 x(ct)S 3600 12467 XY
(Description)S 3600 X 747 y 23316 204 R 3600 13988 XY F36(PRODUC)S -2 x
(T)S 167 x(NAME:)S 8791 X(Compaq)S 167 x(OSAP/AP)S 166 x(V)S -27 x(ersion)S
167 x(3.1)S 23784 X(SPD)S 166 x(47.96.07)S 8625 X 631 y(\(Compaq)S 273 x
(OMNI)S 272 x(Services)S 273 x(for)S 273 x(SINEC)S 273 x(Automation)S
273 x(Protocol)S 2 x(s)S 8625 X 598 y(/SINEC)S 167 x(AP)S 166 x(Services\))S
3600 16925 XY F40(DESCRIPTI)S -2 x(ON)S 3600 17942 XY F38(Compaq)S 104 x
(OSAP/AP)S 103 x(is)S 103 x(a)S 103 x(network)S 104 x(commu)S 2 x(nication)S
103 x(product.)S 3600 X 548 y(It)S 187 x(provides)S 189 x(a)S 189 x
(solution)S 187 x(to)S 188 x(conne)S 2 x(ct)S 187 x(Compaq)S 189 x(applications)S
3600 X 548 y(with)S 200 x(shop)S 201 x(\212oor)S 201 x(devices)S 202 x
(based)S 201 x(on)S 201 x(Siemens\206)S 202 x(SINEC\206)S 3600 X 548 y
(Automation)S 174 x(Protocol)S 175 x(\(AP\))S 174 x(comm)S 2 x(unication)S
174 x(protocol.)S 273 x(Al-)S 3600 X 548 y(though)S 220 x(mainly)S 220 x
(oriented)S 220 x(to)S 219 x(the)S 219 x(manu)S 2 x(facturing)S 219 x
(environ-)S 3600 X 548 y(ment,)S 143 x(SINEC)S 141 x(AP)S 142 x(addresse)S
2 x(s)S 141 x(gener)S 2 x(ic)S 141 x(applications)S 141 x(and)S 143 x
(is)S 3600 X 548 y(intended)S 170 x(to)S 170 x(provide)S 170 x(a)S 170 x
(commo)S 2 x(n)S 169 x(comm)S 2 x(unication)S 169 x(method)S 3600 X
548 y(between)S 196 x(dif)S -9 x(ferent)S 196 x(Siemens)S 196 x(automation)S
195 x(devices\202)S 197 x(Pro-)S 3600 X 548 y(gramm)S 2 x(able)S 220 x
(Logic)S 221 x(Controllers)S 220 x(\(PLCs\),)S 239 x(numeric)S 221 x
(control)S 3600 X 548 y(machines,)S 132 x(robo)S 2 x(ts,)S 131 x(personal)S
128 x(computers)S 129 x(and)S 127 x(minicompu)S 2 x(t-)S 3600 X 548 y
(ers.)S -747 x 24439 Y(Siemens)S 150 x(SINEC)S 148 x(AP)S 149 x(is)S
149 x(layered)S 150 x(on)S 150 x(top)S 149 x(of)S 149 x(the)S 149 x
(SINEC)S 149 x(H1)S 3600 X 548 y(network)S 108 x(and)S 107 x(provides)S
109 x(proprietary)S 108 x(Session,)S 116 x(Presentation,)S 3600 X 547 y
(and)S 176 x(Application)S 174 x(layers.)S 276 x(The)S 175 x(result)S
175 x(of)S -9 x(fers)S 176 x(an)S 175 x(integrated)S 3600 X 548 y(Siemens)S
147 x(Level)S 147 x(1)S 146 x(solution)S 146 x(with)S 146 x(an)S 146 x
(associated)S 148 x(value)S 146 x(of)S 146 x(a)S 3600 X 548 y(consistent)S
187 x(and)S 187 x(uniform)S 187 x(view)S 186 x(to)S 186 x(the)S 186 x
(plant)S 187 x(\212oor)S 187 x(applica-)S 3600 X 548 y(tions.)S 3600 28195 XY
(Compaq)S 192 x(OSAP/AP)S 190 x(fully)S 189 x(suppor)S 2 x(ts)S 190 x
(the)S 190 x(SINEC)S 149 x(AP)S 190 x(com-)S 3600 X 548 y(munication)S
150 x(protocol.)S 3600 29760 XY F40(Features)S 3600 30777 XY F38(Compaq)S
157 x(OSAP/AP)S 156 x(provides)S 157 x(the)S 156 x(suppor)S 2 x(t)S
155 x(for)S 156 x(SINEC)S 155 x(AP)S 3600 X 548 y(Application,)S 188 x
(Presen)S 2 x(tation,)S 188 x(and)S 182 x(Session)S 182 x(layers.)S
295 x(As)S 181 x(this)S 3600 X 548 y(commu)S 2 x(nication)S 110 x(protocol)S
111 x(is)S 109 x(de\211ne)S 2 x(d)S 110 x(on)S 111 x(top)S 110 x(of)S
110 x(the)S 110 x(ISO)S 110 x(OSI)S 3600 X 548 y(T)S -17 x(ransp)S 2 x
(ort)S 183 x(Layer)S -23 x(,)S 191 x(Compaq)S 185 x(OSAP/AP)S 183 x
(relies)S 183 x(upon)S 185 x(Com-)S 3600 X 548 y(paq)S 141 x(DECnet/OSI)S
139 x(to)S 141 x(complete)S 141 x(the)S 141 x(communication)S 142 x
(stack.)S 3600 X 548 y(For)S 124 x(more)S 124 x(information,)S 129 x
(refer)S 124 x(to)S 123 x(the)S 124 x(DECnet/OSI)S 121 x F39(Software)S
3600 X 548 y(Product)S 150 x(Description)S 150 x F38(\(SPD)S 149 x(41.92.xx\))S
3600 35082 XY(Because)S 101 x(of)S 100 x(the)S 99 x(functional)S 100 x
(compatibility)S 99 x(between)S 100 x(Siemens)S 3600 X 548 y(SINEC)S
214 x(AP)S 216 x(and)S 216 x(MMS)S 216 x(\(Man)S 2 x(ufacturing)S 216 x
(Messaging)S 217 x(Ser-)S 3600 X 548 y(vices\),)S 232 x(ISO)S 214 x
(International)S 216 x(Standard)S 216 x(9506,)S 233 x(Parts)S 215 x
(1)S 216 x(and)S 15854 16926 XY(2,)S 236 x(Compaq)S 219 x(OSAP)S 219 x
(is)S 218 x(integrated)S 219 x(with)S 217 x(the)S 219 x(software)S 219 x
(ar-)S 15854 X 548 y(chitecture)S 171 x(of)S 171 x(the)S 171 x(Compaq)S
172 x(OMNI)S 170 x(API)S 170 x(produ)S 2 x(ct)S 170 x(to)S 171 x(supply)S
15854 X 548 y(the)S 162 x(Application)S 161 x(Program)S 2 x(ming)S 161 x
(Interface)S 162 x(\(API\).)S 161 x(For)S 162 x(more)S 15854 X 548 y
(information,)S 218 x(refer)S 204 x(to)S 204 x(the)S 204 x(Compaq)S
205 x(OMNI)S 204 x(API)S 204 x F39(Software)S 15854 X 548 y(Product)S
150 x(Description)S 150 x F38(\(SPD)S 149 x(47.88.xx\).)S 15854 X 896 y
F40(Components)S 15854 X 897 y F38(\201)S 441 x(Compaq)S 150 x(OSAP/AP)S
149 x(Services)S 15854 X 797 y(This)S 188 x(compon)S 2 x(ent)S 188 x
(adds)S 189 x(support)S 189 x(for)S 188 x(SINEC)S 187 x(AP)S 188 x(function-)S
15854 X 548 y(ality)S 142 x(under)S 144 x(the)S 143 x(Compaq)S 151 x
(OMNI)S 149 x(API)S(.)S 196 x(Suppor)S 2 x(ted)S 143 x(services)S 15854 X
548 y(are)S 111 x(listed)S 110 x(at)S 110 x(the)S 110 x(end)S 111 x
(of)S 110 x(this)S 110 x F39(Software)S 110 x(Produ)S 2 x(ct)S 110 x
(Description)S 15854 X 548 y F38(and)S 150 x(are)S 151 x(divided)S 149 x
(into)S 149 x(the)S 150 x(followi)S -2 x(ng)S 150 x(categor)S 2 x(ies:)S
17050 X 897 y(Environmental)S 162 x(Mana)S 2 x(gement,)S 165 x(VMD)S
162 x(Support,)S 165 x(V)S -33 x(ari-)S 17050 X 548 y(able)S 131 x(Access,)S
135 x(Serial)S 130 x(T)S -17 x(ransfer)S -23 x(,)S 134 x(Program)S 133 x
(Invocation,)S 17050 X 547 y(and)S 150 x(Domain)S 150 x(Services.)S
15854 X 797 y(\201)S 441 x(Con\211guration)S 150 x(and)S 151 x(Managem)S
2 x(ent)S 149 x(Facilities)S 16601 X 548 y(Compaq)S 151 x(OSAP/AP)S
136 x(uses)S 137 x(the)S 137 x(Compaq)S 137 x(OMNI)S 136 x(API)S 136 x
(fa-)S 16452 X 548 y(cilit)S -2 x(y)S 150 x(ODSCL.)S 15854 X 797 y(On)S
197 x(OpenVMS)S 198 x(platforms,)S 208 x(the)S 197 x(following)S 196 x
(Compaq)S 198 x(OMNI)S 15854 X 548 y(API)S 149 x(facilit)S -2 x(ies)S
150 x(are)S 150 x(suppor)S 2 x(ted:)S 16452 X 797 y(\202)S 150 x(ODF)S
148 x(\(OMNI)S 150 x(De\211nition)S 149 x(Facilit)S -2 x(y\))S 16452 X
797 y(\202)S 150 x(OMNIV)S -9 x(iew)S 15854 X 797 y(\201)S 441 x(Support)S
128 x(for)S 128 x(the)S 128 x(Device)S 128 x(Access)S 128 x(Services)S
129 x(of)S 127 x(BASEstar)S 16452 X 548 y(Open)S 15854 X 797 y(\201)S
441 x(Installati)S -2 x(on)S 150 x(V)S -24 x(eri\211cation)S 149 x(Proced)S
2 x(ure)S 150 x(\(IVP\))S 15854 X 797 y(The)S 191 x(Compaq)S 192 x(OSAP)S
190 x(IVP)S 190 x(perfor)S 2 x(ms)S 191 x(a)S 191 x(series)S 191 x(of)S
190 x(tests)S 191 x(to)S 15854 X 548 y(verify)S 150 x(proper)S 151 x
(installat)S -2 x(ion.)S 24745 38320 XY F40(April)S 149 x(2000)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%+ Helvetica-Oblique
%%PageProcessColors: Black
%%PageCustomColors: (BLACK)
%
%%Page: (2) 2
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3749 3002 XY F40(Compaq)S 149 x(OSAP/AP)S 148 x(V)S -24 x(ersion)S
150 x(3.1)S 23947 X(SPD)S 149 x(47.96.07)S 3600 X 548 y(\(Compaq)S 149 x
(OMNI)S 149 x(Services)S 151 x(for)S 150 x(SINEC)S 148 x(Automation)S
149 x(Protocols/SINEC)S 149 x(AP)S 149 x(Services)S 2 x(\))S 3600 4820 XY
(Documentation)S 3600 5787 XY F38(Compaq)S 205 x(OSAP/AP)S 203 x(includes)S
203 x(the)S 204 x(followi)S -2 x(ng)S 204 x(docum)S 2 x(enta-)S 3600 X
548 y(tion:)S -848 x 7302 Y(\201)S 441 x(A)S 311 x(platform-spe)S 2 x
(ci\211c)S 311 x(Network)S 312 x(Manag)S 2 x(er)S 17 x(')S -9 x(s)S
312 x(and)S 313 x(Pro-)S 4198 X 547 y(gramme)S 2 x(r)S 17 x(')S -9 x
(s)S 343 x(Guide)S 343 x(that)S 342 x(provides)S 344 x(an)S 343 x(overview)S
344 x(of)S 4198 X 548 y(SINEC)S 148 x(H1)S 289 x(\(see)S 289 x(the)S
288 x(Compaq)S 290 x(OSAP/AP)S 287 x F39(Software)S 4198 X 548 y(Product)S
116 x(Description)S F38(\202)S 116 x(SPD)S 116 x(47.95.06\))S 116 x
(and)S 117 x(SINEC)S 114 x(AP)S 4198 X 548 y(concepts)S 182 x(and)S
182 x(terminology)S -32 x(.)S 294 x(It)S 180 x(includes)S 182 x(a)S
181 x(description)S 4198 X 548 y(of)S 205 x(the)S 206 x(services)S 207 x
(that)S 206 x(are)S 206 x(available)S 206 x(through)S 207 x(Compaq)S
4198 X 548 y(OMNI)S 218 x(API)S 218 x(and)S 219 x(features)S 219 x(of)S
219 x(Compaq)S 219 x(OSAP)S -58 x(.)S 219 x(It)S 217 x(also)S 4198 X
548 y(describes)S 200 x(the)S 199 x(use)S 200 x(of)S 198 x(the)S 199 x
(Compaq)S 200 x(OMNI)S 199 x(API)S 198 x(utilit)S -2 x(y)S 4198 X 548 y
(ODSCL.)S 3600 X 867 y(\201)S 441 x(A)S 233 x(platform-spec)S 2 x(i\211c)S
233 x(Installati)S -2 x(on)S 234 x(Guide)S 234 x(that)S 233 x(explains)S
4198 X 548 y(how)S 104 x(to)S 103 x(prepa)S 2 x(re)S 104 x(for)S 104 x
(installati)S -2 x(on,)S 113 x(how)S 104 x(to)S 104 x(install)S 102 x
(the)S 104 x(prod-)S 4198 X 548 y(uct,)S 139 x(and)S 139 x(what)S 137 x
(to)S 138 x(do)S 138 x(after)S 138 x(Compaq)S 139 x(OSAP)S 137 x(is)S
137 x(installed.)S 3600 15212 XY F40(INST)S -34 x(ALLA)S -34 x(TION)S
3600 16179 XY F38(Before)S 174 x(attempting)S 173 x(to)S 173 x(install)S
171 x(the)S 173 x(software,)S 179 x(the)S 173 x(customer)S 3600 X 548 y
(must)S 291 x(have)S 291 x(all)S 289 x(pre-re)S 2 x(quisite)S 289 x
(hardwar)S 2 x(e)S 290 x(and)S 291 x(software.)S 3600 X 548 y(Compaq)S
104 x(Computer)S 105 x(Corporation)S 104 x(recomm)S 2 x(ends)S 104 x
(that)S 103 x(a)S 104 x(cus-)S 3600 X 548 y(tomer)S 17 x(')S -8 x(s)S
152 x(\211rst)S 152 x(purchase)S 153 x(include)S 152 x(Compaq)S 153 x
(Installati)S -2 x(on)S 153 x(Ser-)S 3600 X 548 y(vices.)S 3600 19337 XY
(Connectivity)S 140 x(to)S 141 x(all)S 140 x(other)S 141 x(nodes)S 142 x
(within)S 140 x(the)S 141 x(network)S 141 x(is)S 140 x(the)S 3600 X
548 y(respon)S 2 x(sibili)S -2 x(ty)S 149 x(of)S 150 x(the)S 149 x(customer)S
-23 x(.)S 3600 21450 XY F40(SUPPORTED)S 148 x(VERSIONS)S 3600 22416 XY
F38(This)S 155 x(SPD)S 155 x(covers)S 157 x(the)S 155 x(following)S
154 x(versions)S 157 x(of)S 155 x(the)S 155 x(Compaq)S 3600 X 548 y
(OSAP)S 149 x(produ)S 2 x(ct:)S 3600 23931 XY(\201)S 441 x(Compaq)S
108 x(OSAP/AP)S 107 x(and)S 108 x(Compaq)S 108 x(OSAP/H1)S 107 x(for)S
108 x(Open-)S 4198 X 548 y(VMS)S 150 x(V)S -33 x(AX)S 3600 X 867 y(\201)S
441 x(Compaq)S 108 x(OSAP/AP)S 107 x(and)S 108 x(Compaq)S 108 x(OSAP/H1)S
107 x(for)S 108 x(Open-)S 4198 X 548 y(VMS)S 150 x(Alpha)S 3600 X 867 y
(\201)S 441 x(Compaq)S 123 x(OSAP/AP)S 122 x(and)S 124 x(Compaq)S 123 x
(OSAP/H1)S 122 x(for)S 123 x(T)S -17 x(ru64)S 4198 X 548 y(Unix)S 3600 28873 XY
F40(ORDERIN)S -2 x(G)S 149 x(INFORMA)S -34 x(TION)S 3600 29840 XY F39
(Compaq)S 151 x(OSAP/AP)S 149 x(for)S 149 x(OpenVMS)S 151 x(V)S -25 x
(AX:)S 3600 30806 XY F38(Software)S 150 x(Licenses)S 150 x(\(unlimited)S
149 x(use\):)S 200 x(QL-5BP**)S 2 x(-**)S 3600 X 618 y(Software)S 150 x
(Documentation:)S 199 x(QA-5BP**)S 2 x(-**)S 3600 X 618 y(Software)S
150 x(Product)S 150 x(Services:)S 200 x(QT)S -25 x(-5BQ**-**)S 3600 33009 XY
F39(Compaq)S 151 x(OSAP/AP)S 149 x(for)S 149 x(OpenVMS)S 151 x(Alpha:)S
3600 33975 XY F38(Software)S 150 x(Licenses)S 150 x(\(unlimited)S 149 x
(use\):)S 200 x(QL-2XV)S -32 x(A*-**)S 3600 X 618 y(Software)S 150 x
(Documentation:)S 199 x(QA-2XV)S -32 x(AA-GZ)S 3600 X 618 y(Software)S
150 x(Product)S 150 x(Services:)S 200 x(QT)S -25 x(-2XV)S -33 x(A*-**)S
3600 36178 XY F39(Compaq)S 151 x(OSAP/AP)S 149 x(for)S 149 x(T)S -33 x
(ru64)S 151 x(Unix:)S 15854 4835 XY F38(The)S 215 x(Compaq)S 215 x(OSAP/AP)S
214 x(produ)S 2 x(ct)S 214 x(kit)S 213 x(is)S 214 x(included)S 215 x
(in)S 214 x(the)S 15854 X 548 y(BASEstar)S 252 x(Open)S 252 x(Server)S
252 x(for)S 252 x(T)S -17 x(ru64)S 252 x(Unix)S 251 x(Consolidated)S
15854 X 548 y(Software)S 150 x(Distri)S -2 x(bution:)S 15854 X 897 y
(Software)S 150 x(Media:)S 199 x(QA-5SRAA-H8)S 15854 X 896 y(Software)S
150 x(Licenses)S 150 x(\(unlimited)S 150 x(use\):)S 199 x(QL-0Z8A*)S
2 x(-**)S 15854 X 548 y(Software)S 150 x(Documentation:)S 199 x(QA-0Z8A*-)S
2 x(GZ)S 15854 X 548 y(Software)S 150 x(Product)S 150 x(Services:)S
200 x(QT)S -25 x(-0Z8A*-*)S 2 x(*)S 15854 X 897 y(*)S 424 x(Denotes)S
152 x(variant)S 153 x(\211elds.)S 207 x(For)S 153 x(additional)S 152 x
(information)S 152 x(on)S 16452 X 548 y(available)S 182 x(licenses,)S
190 x(services,)S 191 x(and)S 183 x(media)S 183 x(refer)S 183 x(to)S
182 x(the)S 16452 X 548 y(appropr)S 2 x(iate)S 149 x(price)S 150 x(book.)S
15854 12307 XY F40(SOFTW)S -25 x(ARE)S 149 x(LICENSIN)S -2 x(G)S 15854 X
897 y F38(This)S 117 x(software)S 117 x(is)S 117 x(furnished)S 117 x
(unde)S 2 x(r)S 117 x(the)S 117 x(licensing)S 117 x(provisions)S 15854 X
548 y(of)S 265 x(Compaq)S 266 x(Computer)S 266 x(Corpora)S 2 x(tion')S
-9 x(s)S 265 x(Standard)S 266 x(T)S -50 x(erms)S 15854 X 548 y(and)S
175 x(Conditions.)S 272 x(For)S 175 x(more)S 175 x(information)S 174 x
(about)S 175 x(the)S 174 x(Com-)S 15854 X 548 y(paq)S 260 x(licensing)S
259 x(terms)S 259 x(and)S 260 x(policies,)S 286 x(contact)S 259 x(your)S
260 x(local)S 15854 X 548 y(Compaq)S 151 x(of)S -8 x(\211ce.)S 15854 X
896 y F39(License)S 150 x(Mana)S 2 x(gement)S 150 x(Facility)S 148 x
(Suppor)S 2 x(t:)S 15854 X 897 y F38(This)S 277 x(layered)S 279 x(product)S
279 x(supports)S 278 x(the)S 278 x(Compaq)S 279 x(License)S 15854 X
548 y(Manag)S 2 x(ement)S 150 x(Facilit)S -2 x(y)S -33 x(.)S 15854 X
896 y(T)S -25 x(wo)S 150 x(types)S 150 x(of)S 149 x(license)S 150 x
(are)S 150 x(available:)S 15854 X 897 y(\201)S 441 x(`)S -9 x(`Unlimit)S
-2 x(ed)S 182 x(system)S 181 x(use')S -7 x(')S 180 x(license\203available)S
181 x(for)S 181 x(a)S 181 x(pro-)S 16452 X 548 y(cessor)S 15854 X 797 y
(\201)S 441 x(`)S -9 x(`Concurren)S 2 x(t)S 130 x(use')S -8 x(')S 131 x
(license\203available)S 131 x(for)S 131 x(a)S 131 x(device)S 132 x(con-)S
16452 X 548 y(nection)S 150 x(\(not)S 150 x(available)S 149 x(with)S
149 x(OpenVMS)S 150 x(V)S -33 x(AX\))S 15854 22917 XY F40(SOFTW)S -25 x
(ARE)S 149 x(PRODUCT)S 148 x(SER)S -8 x(VICES)S 15854 X 897 y F38(A)S
134 x(variety)S 133 x(of)S 134 x(service)S 134 x(options)S 134 x(are)S
134 x(available)S 134 x(from)S 134 x(Compaq.)S 15854 X 548 y(For)S 102 x
(more)S 102 x(information,)S 111 x(contact)S 102 x(your)S 102 x(local)S
101 x(Compaq)S 102 x(of)S -8 x(\211ce.)S 15854 25856 XY F40(SOFTW)S
-25 x(ARE)S 149 x(W)S -24 x(ARRA)S -2 x(NTY)S 15854 X 897 y F38(This)S
117 x(software)S 117 x(is)S 116 x(provided)S 118 x(by)S 117 x(Compaq)S
118 x(with)S 116 x(a)S 117 x(90)S 117 x(day)S 118 x(con-)S 15854 X 548 y
(formance)S 119 x(warranty)S 117 x(in)S 117 x(accord)S 2 x(ance)S 118 x
(wit)S -2 x(h)S 118 x(the)S 117 x(Compaq)S 118 x(war-)S 15854 X 548 y
(ranty)S 150 x(terms)S 150 x(applicable)S 150 x(to)S 149 x(the)S 150 x
(license)S 150 x(purchase)S 2 x(.)S 15854 29343 XY F40(W)S -16 x(arranty)S
151 x(Limitations)S 15854 X 897 y F38(Compaq)S 345 x(has)S 345 x(developed)S
345 x(this)S 343 x(produ)S 2 x(ct)S 343 x(accor)S 2 x(ding)S 344 x(to)S
15854 X 548 y(SINEC)S 149 x(AP)S 108 x(Protocol)S 110 x(Speci\211cation)S
109 x(produce)S 2 x(d)S 109 x(by)S 109 x(Siemens.)S 15854 X 548 y(Not)S
170 x(all)S 169 x(Siemens)S 171 x(Communication)S 170 x(Proce)S 2 x
(ssors)S 170 x(\(CP\))S 171 x(sup-)S 15854 X 548 y(port)S 231 x(the)S
231 x(full)S 230 x(range)S 232 x(of)S 230 x(SINEC)S 230 x(AP)S 231 x
(services.)S 443 x(The)S 232 x(ser-)S 15854 X 548 y(vices)S 133 x(suppo)S
2 x(rted)S 133 x(by)S 134 x(each)S 134 x(CP)S 133 x(are)S 134 x(listed)S
133 x(at)S 133 x(the)S 133 x(end)S 134 x(of)S 133 x(this)S 15854 X 548 y
(docume)S 2 x(nt.)S 355 x(T)S -49 x(o)S 202 x(minimize)S 202 x(the)S
201 x(risk)S 202 x(of)S 202 x(interworking)S 202 x(prob-)S 15854 X 548 y
(lems,)S 149 x(Compaq)S 150 x(has)S 150 x(tested)S 149 x(this)S 148 x
(product)S 150 x(against)S 149 x(selected)S 15854 X 547 y(Siemens)S
150 x(devices)S 151 x(to)S 149 x(prove)S 151 x(interoperability)S -34 x
(.)S 15132 38868 XY F40(2)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%+ Helvetica-Oblique
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (3) 3
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3749 3002 XY F40(Compaq)S 149 x(OSAP/AP)S 148 x(V)S -24 x(ersion)S
150 x(3.1)S 23947 X(SPD)S 149 x(47.96.07)S 3600 X 548 y(\(Compaq)S 149 x
(OMNI)S 149 x(Services)S 151 x(for)S 150 x(SINEC)S 148 x(Automation)S
149 x(Protocols/SINEC)S 149 x(AP)S 149 x(Services)S 2 x(\))S 3600 4834 XY
(HARDW)S -26 x(ARE)S 149 x(REQUIREMENTS)S 3600 5779 XY F39(Processo)S
2 x(rs)S 149 x(Suppo)S 2 x(rted:)S 3600 6724 XY F38(\201)S 441 x(Alpha)S
150 x(processor)S 2 x(s)S 149 x(suppor)S 2 x(ting)S 149 x(either:)S
4198 X 845 y(\202)S 150 x(OpenVMS)S 150 x(Alpha)S 150 x(V)S -25 x(ersion)S
150 x(6.1)S 150 x(to)S 149 x(7.1,)S 150 x(7.2)S 4198 X 845 y(\202)S
150 x(T)S -17 x(ru64)S 150 x(Unix)S 149 x(V)S -24 x(ersion)S 150 x(3.2)S
150 x(or)S 150 x(4.0)S 3600 X 845 y(\201)S 441 x(V)S -33 x(AX)S 149 x
(proces)S 2 x(sors)S 150 x(supporting:)S 4198 X 845 y(\202)S 150 x(OpenVMS)S
150 x(V)S -33 x(AX)S 149 x(V)S -24 x(ersion)S 150 x(6.1)S 150 x(to)S
149 x(7.1,)S 149 x(7.2)S 3600 11049 XY F40(DISK)S 148 x(SP)S -33 x(ACE)S
149 x(REQUIREMENTS)S 3600 11994 XY F39(OpenVMS)S 151 x(Alpha:)S 3600 12939 XY
F38(\201)S 441 x(42)S 150 x(Mb)S 150 x(\(installati)S -2 x(on\))S 3600 X
845 y(\201)S 441 x(26)S 150 x(Mb)S 150 x(\(perma)S 2 x(nent)S 150 x
(use\))S 3600 14729 XY F39(OpenVMS)S 151 x(V)S -25 x(AX:)S 3600 15673 XY
F38(\201)S 441 x(40)S 150 x(Mb)S 150 x(\(installati)S -2 x(on\))S 3600 X
845 y(\201)S 441 x(18)S 150 x(Mb)S 150 x(\(perma)S 2 x(nent)S 150 x
(use\))S 3600 17463 XY F39(T)S -33 x(ru64)S 150 x(Unix:)S 3600 18408 XY
F38(\201)S 441 x(26)S 150 x(Mb)S 150 x(\(installati)S -2 x(on\))S 3600 X
845 y(\201)S 441 x(10)S 150 x(Mb)S 150 x(\(perma)S 2 x(nent)S 150 x
(use\))S 3600 20298 XY F40(Note:)S 299 x F38(A)S 127 x(con\211gu)S 2 x
(ration)S 127 x(with)S 126 x(at)S 127 x(least)S 127 x(16)S 128 x(MB)S
127 x(of)S 127 x(memor)S 2 x(y)S 127 x(is)S 3600 X 547 y(recomm)S 2 x
(ended.)S 3600 21790 XY(These)S 205 x(values)S 205 x(refer)S 205 x(to)S
204 x(the)S 205 x(disk)S 204 x(space)S 206 x(required)S 206 x(on)S 204 x
(the)S 3600 X 548 y(system)S 189 x(disk.)S 316 x(The)S 189 x(sizes)S
189 x(are)S 189 x(appro)S 2 x(ximate;)S 208 x(actual)S 188 x(sizes)S
3600 X 548 y(may)S 134 x(vary)S 135 x(depending)S 135 x(on)S 134 x(the)S
133 x(user)S 18 x(')S -9 x(s)S 134 x(system)S 134 x(environm)S 2 x(ent,)S
3600 X 548 y(con\211gur)S 2 x(ation,)S 149 x(and)S 150 x(software)S
150 x(options.)S 3600 24977 XY F40(SOFTW)S -25 x(ARE)S 149 x(REQUIREMENTS)S
3600 26868 XY(YEAR)S 149 x(2000)S 150 x(READY)S 3600 27813 XY F38(YEAR)S
167 x(2000)S 169 x(READY)S 167 x(This)S 168 x(product)S 168 x(is)S 168 x
(Y)S -42 x(ear)S 169 x(2000)S 168 x(Ready)S -32 x(.)S 3600 X 548 y(Y)S
-41 x(ear)S 165 x(2000)S 165 x(Ready)S 165 x(is)S 164 x(de\211ned:)S
230 x("Y)S -41 x(ear)S 165 x(2000)S 165 x(Ready")S 165 x(prod-)S 3600 X
547 y(ucts)S 227 x(are)S 227 x(de\211ne)S 2 x(d)S 227 x(by)S 227 x(Compaq)S
228 x(as)S 227 x(products)S 228 x(capable)S 228 x(of)S 3600 X 548 y
(accurately)S 168 x(processing,)S 172 x(providing,)S 172 x(and/or)S
168 x(receiving)S 167 x(date)S 3600 X 548 y(data)S 273 x(from,)S 304 x
(into)S 272 x(and)S 273 x(between)S 274 x(the)S 272 x(twentieth)S 272 x
(and)S 273 x(the)S 3600 X 548 y(twenty-\211rst)S 228 x(centuries,)S
248 x(and)S 228 x(the)S 228 x(years)S 229 x(1999)S 229 x(and)S 229 x
(2000,)S 3600 X 548 y(including)S 207 x(leap)S 208 x(year)S 208 x(calculations,)S
222 x(when)S 208 x(used)S 208 x(in)S 207 x(accor-)S 3600 X 548 y(dance)S
183 x(with)S 181 x(the)S 182 x(associated)S 183 x(product)S 182 x(docum)S
2 x(entation)S 182 x(and)S 3600 X 548 y(provided)S 147 x(that)S 145 x
(all)S 144 x(hardware)S 2 x(,)S 145 x(\211rmwar)S 2 x(e)S 145 x(and)S
146 x(software)S 146 x(used)S 3600 X 548 y(in)S 211 x(combination)S
212 x(with)S 210 x(such)S 212 x(products)S 212 x(prope)S 2 x(rly)S 211 x
(exchange)S 3600 X 548 y(accurate)S 159 x(date)S 157 x(data)S 158 x
(with)S 157 x(the)S 157 x(produ)S 2 x(cts.)S 445 x F39(Compaq)S 159 x
(OSAP)S 3600 X 548 y(/AP)S 149 x(for)S 150 x(OpenVMS)S 150 x(Alpha:)S
3600 34785 XY F38(\201)S 441 x(OpenVMS)S 150 x(Alpha)S 150 x(V)S -25 x
(ersion)S 151 x(6.1)S 149 x(to)S 150 x(7.1,)S 149 x(7.2)S 3600 X 845 y
(\201)S 441 x(DECnet/OSI)S 144 x(for)S 145 x(OpenVMS)S 146 x(Alpha)S
146 x(V)S -25 x(ersion)S 146 x(6.3)S 146 x(to)S 145 x(7.1,)S 4198 X
548 y(7.2)S 15854 4821 XY(\201)S 441 x(Either:)S 16452 X 797 y(\202)S
150 x(Compaq)S 150 x(OMNI)S 149 x(API)S 149 x(V3.1)S 150 x(for)S 150 x
(OpenVMS)S 150 x(Alpha,)S 150 x(or)S 16452 X 797 y(\202)S 150 x(BASEstar)S
140 x(Open)S 142 x(Server)S 141 x(V3.2for)S 141 x(OpenVMS)S 142 x(Alpha)S
15854 X 797 y(\201)S 441 x(ORACLE)S 149 x(Rdb)S 149 x(V)S -24 x(ersion)S
150 x(5.1)S -190 y F46(1)S 15854 8009 XY F38(\201)S 441 x(OpenVMS)S
150 x(DECwindows)S 149 x(Motif)S 149 x(V)S -25 x(ersion)S 151 x(1.2)S
-190 y F46(2)S 15854 8906 XY F38(Compaq)S 151 x(OSAP/AP)S 149 x(for)S
149 x(OpenVMS)S 151 x(V)S -33 x(AX:\))S 15854 X 896 y(\201)S 441 x(OpenVMS)S
150 x(V)S -33 x(AX)S 150 x(V)S -25 x(ersion)S 150 x(6.1)S 150 x(to)S
149 x(7.1,)S 149 x(7.2)S 15854 X 797 y(\201)S 441 x(DECnet/OSI)S 184 x
(for)S 186 x(OpenVMS)S 186 x(V)S -33 x(AX)S 186 x(V)S -25 x(ersion)S
187 x(6.3)S 185 x(to)S 186 x(7.1,)S 16452 X 548 y(7.2)S 15854 X 797 y
(\201)S 441 x(Either:)S 16452 X 797 y(\202)S 150 x(Compaq)S 150 x(OMNI)S
149 x(API)S 149 x(for)S 150 x(OpenVMS)S 150 x(V)S -33 x(AX)S 150 x(V3.1,)S
149 x(or)S 16452 X 797 y(\202)S 150 x(BASEstar)S 149 x(Open)S 150 x
(Server)S 151 x(for)S 150 x(OpenVMS)S 150 x(V)S -33 x(AX)S 150 x(V3.2)S
15854 X 797 y(\201)S 441 x(ORACLE)S 149 x(Rdb)S 149 x(V)S -24 x(ersion)S
150 x(6.0)S 150 x(or)S 150 x(6.1)S -190 y F46(1)S 15854 15132 XY F38
(\201)S 441 x(OpenVMS)S 150 x(DECwindows)S 149 x(Motif)S 149 x(V)S -25 x
(ersion)S 151 x(1.2)S -190 y F46(2)S 15854 16029 XY F39(Compaq)S 151 x
(OSAP/AP)S 149 x(for)S 149 x(T)S -33 x(ru64)S 151 x(Unix:)S 15854 X
897 y F38(\201)S 441 x(T)S -17 x(ru64)S 151 x(Unix)S 149 x(V)S -25 x
(ersion)S 150 x(3.2)S 150 x(or)S 150 x(4.0)S 15854 X 797 y(\201)S 441 x
(Either:)S 16452 X 797 y(\202)S 150 x(Compaq)S 150 x(OMNI)S 149 x(API)S
149 x(V3.1)S 150 x(for)S 150 x(T)S -17 x(ru64)S 150 x(Unix,)S 149 x
(or)S 16452 X 797 y(\202)S 150 x(BASEstar)S 149 x(Open)S 150 x(Server)S
151 x(V3.2)S 150 x(for)S 149 x(T)S -16 x(ru64)S 150 x(Unix)S 15854 20811 XY
F40(GROWTH)S 149 x(CONSI)S -2 x(DERA)S -34 x(TIONS)S 15854 X 897 y F38
(The)S 184 x(minimum)S 185 x(hardware)S 2 x(/software)S 183 x(requirem)S
2 x(ents)S 184 x(for)S 184 x(any)S 15854 X 548 y(future)S 159 x(version)S
159 x(of)S 158 x(this)S 158 x(product)S 159 x(may)S 159 x(be)S 159 x
(dif)S -9 x(ferent)S 159 x(from)S 158 x(the)S 15854 X 548 y(requirem)S
2 x(ents)S 149 x(for)S 150 x(the)S 150 x(current)S 150 x(version.)S
15854 24298 XY F40(DISTRIB)S -2 x(UTION)S 148 x(MEDIA)S 15854 X 897 y
F38(This)S 143 x(product)S 144 x(is)S 142 x(available)S 143 x(on)S 143 x
(CD-ROM)S 143 x(for)S 143 x(the)S 143 x(supported)S 15854 X 548 y(operating)S
215 x(system,)S 231 x(and)S 215 x(on)S 215 x(TK50)S 214 x(media)S 215 x
(for)S 214 x(OpenVM)S 2 x(S)S 15854 X 547 y(V)S -33 x(AX.)S 15854 34803 XY
3324 24 R 15854 35149 XY F46(1)S 175 x 126 y(Only)S 100 x(necess)S 2 x
(ary)S 99 x(if)S 100 x(you)S 101 x(are)S 99 x(using)S 101 x(Compaq)S
100 x(OMNI)S 99 x(API)S 101 x(with)S 100 x(the)S 100 x(ODF)S 98 x(compon)S
2 x(ent.)S 15854 X 379 y(2)S 175 x 125 y(Only)S 200 x(neces)S 2 x(sary)S
201 x(if)S 200 x(you)S 201 x(are)S 201 x(using)S 201 x(Compaq)S 201 x
(OMNI)S 200 x(API)S 200 x(with)S 201 x(the)S 201 x(OMNIV)S -6 x(iew)S
15854 X 399 y(componen)S 2 x(t.)S 15132 38868 XY F40(3)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica-Oblique
%%+ Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (4) 4
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3733 3002 XY F40(Compaq)S 132 x(OSAP/AP)S 132 x(V)S -25 x(ersion)S
133 x(3.1)S 23980 X(SPD)S 133 x(47.96.07)S 3600 X 548 y(\(Compaq)S 132 x
(OMNI)S 133 x(Services)S 134 x(for)S 133 x(SINEC)S 132 x(Automation)S
133 x(Protocols/SINEC)S 132 x(AP)S 132 x(Services)S 2 x(\))S 9674 5493 XY
F44(APPENDIX)S 131 x(A)S 133 x(-)S 132 x(SINEC)S 132 x(AP)S 132 x(Fun)S
2 x(ctionality)S 131 x(Cross)S 132 x(Refere)S -2 x(nce)S 133 x(T)S -29 x
(ables)S 4497 X 697 y F42(The)S 145 x(following)S 145 x(tables)S 146 x
(list)S 147 x(the)S 145 x(Con)S -2 x(formance)S 144 x(Building)S 146 x
(Block)S 146 x(\(CBB\))S 145 x(services)S 146 x(and)S 145 x(para)S -2 x
(meters)S 145 x(that)S 145 x(are)S 145 x(suppo)S -2 x(rted)S 145 x(by)S
146 x(Comp)S -2 x(aq)S 4497 X 498 y(OSAP/AP)S 140 x(V)S -22 x(ersion)S
141 x(3.1.)S 217 x(They)S 142 x(are)S 140 x(compared)S 140 x(to)S 142 x
(the)S 140 x(services)S 143 x(provided)S 140 x(within)S 142 x(the)S
141 x(\211rst)S 142 x(version.)S 216 x(The)S 142 x(level)S 142 x(of)S
142 x(suppo)S -2 x(rt)S 142 x(dep)S -2 x(ends)S 4497 X 499 y(upo)S -2 x
(n)S 133 x(the)S 131 x(level)S 134 x(of)S 132 x(function)S -2 x(ality)S
134 x(provide)S -2 x(d)S 133 x(by)S 132 x(the)S 132 x(targe)S -2 x(t)S
133 x(Siemens\206)S 132 x(communication)S 131 x(processors.)S 14487 8332 XY
F40(T)S -33 x(able)S 151 x(1)S 9144 X 698 y(Siemens)S 142 x(SINEC)S
142 x(AP)S 142 x(CBB)S 141 x(Services)S 144 x(Cross)S 143 x(Reference)S
144 x(T)S -34 x(able)S 3600 10263 XY 23316 24 R 11969 10761 XY F44(Compaq)S
11969 X 498 y(OSAP/A)S -2 x(P)S 11969 X 498 y(V)S -22 x(ersi)S -2 x
(on)S 11969 X 498 y(3.1)S 14659 X(CP14)S -2 x(3)S 17348 X -498 y(CP231A)S
17348 X 498 y(CP231B)S 20038 X(CP141)S 22728 X(KS100)S 3600 X 299 y
23316 24 R 12746 13712 XY(Environment)S 150 x(Management)S 3600 X 299 y
23316 24 R 3600 16477 XY F42(Initiate)S 11969 X(B)S 14659 X(B)S 17348 X
(N)S 20038 X(B)S 22728 X(N)S 3600 17784 XY(Conclude)S 11969 X(B)S 14659 X
(B)S 17348 X(N)S 20038 X(B)S 22728 X(N)S 3600 19092 XY(Abort)S 11969 X
(B)S 14659 X(B)S 17348 X(N)S 20038 X(N)S 22728 X(N)S 3600 20400 XY(Cancel)S
11969 X(C)S 14659 X(N)S 17348 X(N)S 20038 X(N)S 22728 X(N)S 3600 X 797 y
23316 24 R 13081 22355 XY F44(VMD)S 149 x(Support)S 150 x(Servic)S -2 x
(es)S 3600 X 299 y 23316 24 R 3600 23812 XY F42(Status)S 11969 X(B)S
14659 X(B)S 17348 X(N)S 20038 X(B)S 22728 X(N)S 3600 25119 XY(GetName)S
-2 x(List)S 11969 X(C)S 14659 X(S)S 17348 X(N)S 20038 X(B)S 22728 X
(N)S 3600 26427 XY(Iden)S -2 x(tify)S 11969 X(B)S 14659 X(B)S 17348 X
(N)S 20038 X(B)S 22728 X(N)S 3600 27734 XY(GetCap)S -2 x(abilityList)S
11969 X(C)S 14659 X(S)S 17348 X(N)S 20038 X(B)S 22728 X(N)S 3600 29042 XY
(UnsolicitedStatu)S -2 x(s)S 11969 X(B)S 14659 X(B)S 17348 X(N)S 20038 X
(B)S 22728 X(N)S 3600 X 797 y 23316 24 R 12826 30997 XY F44(V)S -22 x
(ariable)S 147 x(Acces)S -2 x(s)S 148 x(Service)S -2 x(s)S 3600 X 299 y
23316 24 R 3600 32454 XY F42(Read)S 11969 X(B)S 14659 X(B)S 17348 X
(N)S 20038 X(B)S 22728 X(N)S 3600 33762 XY(W)S -7 x(rite)S 11969 X(B)S
14659 X(B)S 17348 X(N)S 20038 X(B)S 22728 X(N)S 3600 35069 XY(Infor)S
-2 x(mationRep)S -2 x(ort)S 11969 X(B)S 14659 X(B)S 17348 X(N)S 20038 X
(B)S 22728 X(N)S 3600 36377 XY(GetV)S -30 x(ariableA)S -2 x(ccessAttributes)S
11969 X(C)S 14659 X(S)S 17348 X(N)S 20038 X(B)S 22728 X(N)S 15132 38868 XY
F40(4)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (5) 5
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3749 3002 XY F40(Compaq)S 149 x(OSAP/AP)S 148 x(V)S -24 x(ersion)S
150 x(3.1)S 23947 X(SPD)S 149 x(47.96.07)S 3600 X 548 y(\(Compaq)S 149 x
(OMNI)S 149 x(Services)S 151 x(for)S 150 x(SINEC)S 148 x(Automation)S
149 x(Protocols/SINEC)S 149 x(AP)S 149 x(Services)S 2 x(\))S 13691 5593 XY
(T)S -34 x(able)S 151 x(1)S 150 x(\(Cont.\))S 9144 X 697 y(Siemens)S
142 x(SINEC)S 142 x(AP)S 142 x(CBB)S 141 x(Services)S 144 x(Cross)S
143 x(Reference)S 144 x(T)S -34 x(able)S 3733 X 623 y 23316 24 R 12101 7411 XY
F44(Compaq)S 12101 X 498 y(OSAP/AP)S 12101 X 498 y(V)S -22 x(ersion)S
12101 X 498 y(3.1)S 14791 X(CP143)S 17481 X -498 y(CP231)S -2 x(A)S
17481 X 498 y(CP231)S -2 x(B)S 20171 X(CP141)S 22861 X(KS100)S 3733 X
299 y 23316 24 R 3600 X 299 y 23316 24 R 12340 10051 XY(Domain)S 148 x
(Management)S 148 x(Servic)S -2 x(es)S 3600 X 299 y 23316 24 R 3600 10898 XY
F42(InitiateDo)S -2 x(wnloadSe)S -2 x(quen)S -2 x(ce)S 11969 X(C)S 14659 X
(S)S 17348 X(N)S 20038 X(C)S 22728 X(N)S 3600 X 697 y(Downloa)S -2 x
(dSegme)S -2 x(nt)S 11969 X(C)S 14659 X(S)S 17348 X(N)S 20038 X(C)S
22728 X(N)S 3600 X 697 y(T)S -44 x(erminate)S -2 x(Download)S -2 x(Seque)S
-2 x(nce)S 11969 X(C)S 14659 X(S)S 17348 X(N)S 20038 X(C)S 22728 X(N)S
3600 X 698 y(InitiateUp)S -2 x(loadSeq)S -2 x(uence)S 11969 X(C)S 14659 X
(S)S 17348 X(N)S 20038 X(C)S 22728 X(N)S 3600 X 697 y(Upload)S -2 x
(Segment)S 11969 X(C)S 14659 X(S)S 17348 X(N)S 20038 X(C)S 22728 X(N)S
3600 X 698 y(T)S -44 x(erminate)S -2 x(UploadSe)S -2 x(quence)S 11969 X
(C)S 14659 X(S)S 17348 X(N)S 20038 X(C)S 22728 X(N)S 3600 X 697 y(Requ)S
-2 x(estDomainDo)S -2 x(wnload)S 11969 X(C)S 14659 X(S)S 17348 X(N)S
20038 X(C)S 22728 X(N)S 3600 X 697 y(Requ)S -2 x(estDomainUp)S -2 x
(load)S 11969 X(C)S 14659 X(S)S 17348 X(N)S 20038 X(C)S 22728 X(N)S
3600 X 698 y(Load)S -2 x(DomainCo)S -2 x(ntent)S 11969 X(N)S 14659 X
(S)S 17348 X(N)S 20038 X(C)S 22728 X(N)S 3600 X 697 y(Store)S -2 x(DomainCon)S
-2 x(tent)S 11969 X(N)S 14659 X(S)S 17348 X(N)S 20038 X(C)S 22728 X
(N)S 3600 X 697 y(DeleteD)S -2 x(omain)S 11969 X(C)S 14659 X(S)S 17348 X
(N)S 20038 X(C)S 22728 X(N)S 3600 X 698 y(GetDoma)S -2 x(inAttribute)S
-2 x(s)S 11969 X(C)S 14659 X(S)S 17348 X(N)S 20038 X(C)S 22728 X(N)S
3600 X 797 y 23316 24 R 12473 19914 XY F44(Program)S 148 x(Invocation)S
148 x(Service)S -2 x(s)S 3600 X 299 y 23316 24 R 3600 20761 XY F42(Creat)S
-2 x(eProgr)S -2 x(amInvocation)S 11969 X(C)S 14659 X(B)S 17348 X(N)S
20038 X(N)S 22728 X(N)S 3600 X 697 y(DeleteP)S -2 x(rogramI)S -2 x(nvocation)S
11969 X(C)S 14659 X(B)S 17348 X(N)S 20038 X(N)S 22728 X(N)S 3600 X 697 y
(Start)S 11969 X(C)S 14659 X(B)S 17348 X(N)S 20038 X(N)S 22728 X(N)S
3600 X 698 y(Stop)S 11969 X(C)S 14659 X(B)S 17348 X(N)S 20038 X(N)S
22728 X(N)S 3600 X 697 y(Resume)S 11969 X(C)S 14659 X(B)S 17348 X(N)S
20038 X(N)S 22728 X(N)S 3600 X 698 y(Reset)S 11969 X(C)S 14659 X(B)S
17348 X(N)S 20038 X(N)S 22728 X(N)S 3600 X 697 y(Kill)S 11969 X(C)S
14659 X(B)S 17348 X(N)S 20038 X(N)S 22728 X(N)S 3600 X 697 y(GetPro)S
-2 x(gramInvo)S -2 x(cationAttribu)S -2 x(tes)S 11969 X(C)S 14659 X
(B)S 17348 X(N)S 20038 X(N)S 22728 X(N)S 3600 X 797 y 23316 24 R 12959 26987 XY
F44(Seria)S -2 x(l)S 149 x(T)S -21 x(ransfer)S 147 x(Service)S -2 x
(s)S 3600 X 299 y 23316 24 R 3600 27834 XY F42(Read)S 11969 X(B)S 14659 X
(B)S 17348 X(B)S 20038 X(B)S 22728 X(B)S 3600 X 698 y(W)S -7 x(rite)S
11969 X(B)S 14659 X(B)S 17348 X(B)S 20038 X(B)S 22728 X(B)S 3600 X 697 y
(Send)S 11969 X(B)S 14659 X(B)S 17348 X(B)S 20038 X(B)S 22728 X(B)S
3600 X 697 y(Exchange)S 11969 X(B)S 14659 X(B)S 17348 X(B)S 20038 X
(B)S 22728 X(B)S 3600 X 399 y 23316 24 R 3600 31197 XY F38(Where)S 151 x
(the)S 149 x(following)S 149 x(symbols)S 150 x(apply:)S 3600 X 897 y
F42(B)S 631 x(=)S 132 x(Client)S 133 x(and)S 131 x(Server)S 3600 X 697 y
(C)S 609 x(=)S 132 x(Client)S 133 x(only)S 3600 X 697 y(S)S 631 x(=)S
132 x(Server)S 132 x(only)S 3600 X 698 y(N)S 609 x(=)S 132 x(Not)S 132 x
(suppor)S -2 x(ted)S 15132 38868 XY F40(5)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (6) 6
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3749 3002 XY F40(Compaq)S 149 x(OSAP/AP)S 148 x(V)S -24 x(ersion)S
150 x(3.1)S 23947 X(SPD)S 149 x(47.96.07)S 3600 X 548 y(\(Compaq)S 149 x
(OMNI)S 149 x(Services)S 151 x(for)S 150 x(SINEC)S 148 x(Automation)S
149 x(Protocols/SINEC)S 149 x(AP)S 149 x(Services)S 2 x(\))S 14487 5593 XY
(T)S -33 x(able)S 151 x(2)S 8847 X 697 y(Siemens)S 142 x(SINEC)S 141 x
(AP)S 141 x(CBB)S 141 x(Parameter)S 2 x(s)S 142 x(Cross)S 142 x(Referenc)S
2 x(e)S 142 x(T)S -34 x(able)S 3600 X 623 y 23316 24 R 3600 7411 XY
F44(Paramete)S -2 x(rs)S 10175 X(Compaq)S 134 x(OSAP/AP)S 132 x(V)S
-22 x(ersion)S 132 x(3.1)S 3600 X 299 y 23316 24 R 3600 8258 XY F42
(STR1)S 10175 X(TRUE)S 3600 X 697 y(STR2)S 10175 X(TRUE)S 3600 X 697 y
(NEST)S 10175 X(10)S 3600 X 698 y(VNAM)S 10175 X(TRUE)S 3600 X 697 y
(V)S -30 x(ADR)S 10175 X(TRUE)S 3600 X 697 y(V)S -30 x(AL)S -30 x(T)S
10175 X(TRUE)S 3600 X 698 y(VSCA)S 10175 X(F)S -21 x(ALSE)S 3600 X 697 y
(TPY)S 10175 X(F)S -21 x(ALSE)S 3600 X 698 y(VLIS)S 10175 X(F)S -21 x
(ALSE)S 3600 X 697 y(REAL)S 10175 X(F)S -21 x(ALSE)S 3600 X 697 y(AKEC)S
10175 X(F)S -21 x(ALSE)S 3600 X 698 y(CEI)S 10175 X(F)S -21 x(ALSE)S
3600 X 398 y 23316 24 R 3600 17214 XY F38(Supported)S 244 x(Siemens)S
243 x(Communication)S 243 x(Processo)S 2 x(rs)S 242 x(\(CP\))S 3600 X
548 y(are:)S -772 x 896 y(\201)S 441 x(CP143:)S 199 x(for)S 150 x(Simatic\206)S
149 x(S5)S 150 x(PLC)S 149 x(family)S 3600 X 797 y(\201)S 441 x(CP231A/B:)S
141 x(for)S 142 x(Sinumer)S 2 x(ik)S 141 x(NC)S 141 x(800)S 143 x(and)S
142 x(Sirotec)S 142 x(Robot)S 4198 X 548 y(Controllers)S 3600 X 797 y
(\201)S 441 x(CP141,)S 133 x(CP1412,)S 133 x(CP1413:)S 189 x(for)S 129 x
(Sicomp)S 129 x(PC)S 128 x(32-xx)S 130 x(\(PC)S 4198 X 548 y(A)S -33 x
(T\206)S 149 x(Compatible\))S 3600 X 797 y(\201)S 441 x(KS100:)S 185 x
(for)S 121 x(Sicomp)S 122 x(M70)S 122 x(\(with)S 120 x(IOSY)S -42 x
(-H1)S 121 x(software)S 121 x(pro-)S 4198 X 548 y(viding)S 149 x(SINEC)S
149 x(AP\))S 3600 X 897 y(\251)S 150 x(2000)S 150 x(Compaq)S 151 x(Computer)S
151 x(Corporation.)S 3600 X 896 y F42(\207)S 498 x(The)S 137 x(Compaq)S
137 x(logo,)S 138 x(Alpha,)S 138 x(AXP)S -52 x(,)S 138 x(BASEstar)S
-23 x(,)S 139 x(Bookrea)S -2 x(der)S -23 x(,)S 4497 X 499 y(Comp)S -2 x
(aq)S 149 x(OMNI,)S 148 x(Compaq)S 147 x(OSAP)S -52 x(,)S 149 x(DECstation,)S
152 x(DEC-)S 4497 X 498 y(system,)S 152 x(Compa)S -2 x(q)S 148 x(DECne)S
-2 x(t,)S 152 x(Compaq)S -2 x(,)S 152 x(MicroV)S -29 x(AX,)S 147 x(TK,)S
4497 X 498 y(V)S -30 x(AX,)S 135 x(V)S -30 x(AXstation,)S 135 x(OpenVMS)S
134 x(are)S 135 x(trad)S -2 x(emarks)S 135 x(of)S 135 x(Compaq)S 4497 X
498 y(Comp)S -2 x(uter)S 132 x(Corp)S -2 x(oration.)S 15854 17762 XY
(All)S 152 x(othe)S -2 x(r)S 151 x(trade)S -2 x(marks)S 151 x(and)S
150 x(registere)S -2 x(d)S 151 x(trade)S -2 x(marks)S 151 x(are)S 150 x
(the)S 15854 X 498 y(prop)S -2 x(erty)S 144 x(of)S 144 x(their)S 144 x
(respe)S -2 x(ctive)S 145 x(holders.)S 221 x(Compaq)S 143 x(shall)S
144 x(not)S 144 x(be)S 15854 X 498 y(liable)S 139 x(for)S 137 x(technical)S
138 x(or)S 138 x(editorial)S 138 x(erro)S -2 x(rs)S 139 x(or)S 137 x
(omissions)S 139 x(containe)S -2 x(d)S 15854 X 498 y(here)S -2 x(in.)S
201 x(The)S 133 x(information)S 132 x(in)S 133 x(this)S 134 x(docume)S
-2 x(nt)S 133 x(is)S 135 x(subject)S 133 x(to)S 133 x(chang)S -2 x(e)S
15854 X 498 y(without)S 131 x(notice.)S 15854 X 698 y(\206)S 603 x(Inte)S
-2 x(l)S 134 x(is)S 133 x(a)S 133 x(trad)S -2 x(emark)S 132 x(of)S 132 x
(Intel)S 132 x(Corpo)S -2 x(ration.)S 15854 X 697 y(\206)S 603 x(Motif)S
138 x(is)S 139 x(a)S 138 x(tradema)S -2 x(rk)S 139 x(of)S 138 x(the)S
137 x(Open)S 138 x(Softw)S -2 x(are)S 138 x(Founda)S -2 x(tion,)S 16751 X
498 y(Inc.)S 15854 X 697 y(\206)S 603 x(MS\203DOS)S(,)S 135 x(Microsoft)S
135 x(and)S 134 x(Windows)S 135 x(95)S 135 x(are)S 135 x(trade)S -2 x
(marks)S 136 x(of)S 16751 X 499 y(Microsoft)S 132 x(Corp)S -2 x(oration.)S
15854 X 697 y(\207)S 498 x(Windows)S 148 x(NT)S 149 x(is)S 149 x(a)S
148 x(registere)S -2 x(d)S 149 x(trad)S -2 x(emark)S 148 x(of)S 148 x
(Microsoft)S 16751 X 498 y(Corp)S -2 x(oration)S -2 x(.)S 15854 X 697 y
(\206)S 603 x(UNIX)S 133 x(is)S 136 x(a)S 134 x(registere)S -2 x(d)S
135 x(trad)S -2 x(emark)S 134 x(in)S 135 x(the)S 133 x(United)S 134 x
(State)S -2 x(s)S 135 x(and)S 16751 X 499 y(othe)S -2 x(r)S 145 x(coun)S
-2 x(tries,)S 148 x(licensed)S 144 x(exclusively)S 146 x(throu)S -2 x
(gh)S 144 x(X/Open)S 16751 X 498 y(Comp)S -2 x(any)S 133 x(Ltd.)S 15854 X
498 y(\206)S 603 x(ORACLE)S 131 x(is)S 134 x(a)S 132 x(trade)S -2 x
(mark)S 133 x(of)S 132 x(Oracle)S 132 x(Corpo)S -2 x(ration.)S 15132 38868 XY
F40(6)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Trailer
%%Pages: 6
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica Helvetica-Bold
%%+ Helvetica-Oblique
%%DocumentNeededFonts: Helvetica Helvetica-Bold
%%+ Helvetica-Oblique
%%DocumentProcessColors: Black
%%DocumentCustomColors: (BLACK)
%%CMYKCustomColor: 0.0 0.0 0.0 1.0 (BLACK)
%
DVC$PSJob restore
end %DEC_DVC$dict
end %Color5044Dict
%
%%EOF
